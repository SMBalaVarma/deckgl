(function(e) {
    function t(t) {
        for (var a, s, o = t[0], l = t[1], u = t[2], h = 0, c = []; h < o.length; h++)
            s = o[h],
            Object.prototype.hasOwnProperty.call(n, s) && n[s] && c.push(n[s][0]),
            n[s] = 0;
        for (a in l)
            Object.prototype.hasOwnProperty.call(l, a) && (e[a] = l[a]);
        d && d(t);
        while (c.length)
            c.shift()();
        return r.push.apply(r, u || []),
        i()
    }
    function i() {
        for (var e, t = 0; t < r.length; t++) {
            for (var i = r[t], a = !0, s = 1; s < i.length; s++) {
                var o = i[s];
                0 !== n[o] && (a = !1)
            }
            a && (r.splice(t--, 1),
            e = l(l.s = i[0]))
        }
        return e
    }
    var a = {}
      , s = {
        app: 0
    }
      , n = {
        app: 0
    }
      , r = [];
    function o(e) {
        return l.p + "js/" + ({}[e] || e) + "." + {
            "chunk-0ca7d334": "3980483d",
            "chunk-465a809c": "c1583c4b",
            "chunk-4c283c3e": "bcbed6af",
            "chunk-58504092": "f46cad22",
            "chunk-758f07d2": "47cca21b",
            "chunk-8238b19c": "05c65c51"
        }[e] + ".js"
    }
    function l(t) {
        if (a[t])
            return a[t].exports;
        var i = a[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(i.exports, i, i.exports, l),
        i.l = !0,
        i.exports
    }
    l.e = function(e) {
        var t = []
          , i = {
            "chunk-0ca7d334": 1,
            "chunk-465a809c": 1,
            "chunk-4c283c3e": 1,
            "chunk-58504092": 1,
            "chunk-758f07d2": 1,
            "chunk-8238b19c": 1
        };
        s[e] ? t.push(s[e]) : 0 !== s[e] && i[e] && t.push(s[e] = new Promise((function(t, i) {
            for (var a = "css/" + ({}[e] || e) + "." + {
                "chunk-0ca7d334": "e78aeb95",
                "chunk-465a809c": "853a5448",
                "chunk-4c283c3e": "ace8993e",
                "chunk-58504092": "8e5a9cdd",
                "chunk-758f07d2": "3296a367",
                "chunk-8238b19c": "b214622c"
            }[e] + ".css", n = l.p + a, r = document.getElementsByTagName("link"), o = 0; o < r.length; o++) {
                var u = r[o]
                  , h = u.getAttribute("data-href") || u.getAttribute("href");
                if ("stylesheet" === u.rel && (h === a || h === n))
                    return t()
            }
            var c = document.getElementsByTagName("style");
            for (o = 0; o < c.length; o++) {
                u = c[o],
                h = u.getAttribute("data-href");
                if (h === a || h === n)
                    return t()
            }
            var d = document.createElement("link");
            d.rel = "stylesheet",
            d.type = "text/css",
            d.onload = t,
            d.onerror = function(t) {
                var a = t && t.target && t.target.src || n
                  , r = new Error("Loading CSS chunk " + e + " failed.\n(" + a + ")");
                r.code = "CSS_CHUNK_LOAD_FAILED",
                r.request = a,
                delete s[e],
                d.parentNode.removeChild(d),
                i(r)
            }
            ,
            d.href = n;
            var m = document.getElementsByTagName("head")[0];
            m.appendChild(d)
        }
        )).then((function() {
            s[e] = 0
        }
        )));
        var a = n[e];
        if (0 !== a)
            if (a)
                t.push(a[2]);
            else {
                var r = new Promise((function(t, i) {
                    a = n[e] = [t, i]
                }
                ));
                t.push(a[2] = r);
                var u, h = document.createElement("script");
                h.charset = "utf-8",
                h.timeout = 120,
                l.nc && h.setAttribute("nonce", l.nc),
                h.src = o(e);
                var c = new Error;
                u = function(t) {
                    h.onerror = h.onload = null,
                    clearTimeout(d);
                    var i = n[e];
                    if (0 !== i) {
                        if (i) {
                            var a = t && ("load" === t.type ? "missing" : t.type)
                              , s = t && t.target && t.target.src;
                            c.message = "Loading chunk " + e + " failed.\n(" + a + ": " + s + ")",
                            c.name = "ChunkLoadError",
                            c.type = a,
                            c.request = s,
                            i[1](c)
                        }
                        n[e] = void 0
                    }
                }
                ;
                var d = setTimeout((function() {
                    u({
                        type: "timeout",
                        target: h
                    })
                }
                ), 12e4);
                h.onerror = h.onload = u,
                document.head.appendChild(h)
            }
        return Promise.all(t)
    }
    ,
    l.m = e,
    l.c = a,
    l.d = function(e, t, i) {
        l.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: i
        })
    }
    ,
    l.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    l.t = function(e, t) {
        if (1 & t && (e = l(e)),
        8 & t)
            return e;
        if (4 & t && "object" === typeof e && e && e.__esModule)
            return e;
        var i = Object.create(null);
        if (l.r(i),
        Object.defineProperty(i, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var a in e)
                l.d(i, a, function(t) {
                    return e[t]
                }
                .bind(null, a));
        return i
    }
    ,
    l.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e["default"]
        }
        : function() {
            return e
        }
        ;
        return l.d(t, "a", t),
        t
    }
    ,
    l.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    l.p = "/",
    l.oe = function(e) {
        throw console.error(e),
        e
    }
    ;
    var u = window["webpackJsonp"] = window["webpackJsonp"] || []
      , h = u.push.bind(u);
    u.push = t,
    u = u.slice();
    for (var c = 0; c < u.length; c++)
        t(u[c]);
    var d = h;
    r.push([0, "chunk-vendors"]),
    i()
}
)({
    0: function(e, t, i) {
        e.exports = i("56d7")
    },
    "0002": function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("router-link", {
                staticClass: "map-cta",
                attrs: {
                    to: {
                        name: "Home"
                    }
                },
                nativeOn: {
                    mouseenter: function(t) {
                        return e.handleMouseenter(t)
                    },
                    mouseleave: function(t) {
                        return e.handleMouseleave(t)
                    }
                }
            }, [i("Letters", {
                staticClass: "caption",
                attrs: {
                    caption: e.$t("scene.map")
                }
            }), i("img", {
                attrs: {
                    src: e.mapButtonSource
                }
            })], 1)
        }
          , s = []
          , n = i("cffa")
          , r = i("5d59")
          , o = i.n(r)
          , l = i("63fd")
          , u = {
            name: "MapCta",
            components: {
                Letters: l["a"]
            },
            data: function() {
                return {
                    mapButtonSource: o.a
                }
            },
            mounted: function() {
                this.tl = new n["a"].timeline({
                    paused: !0
                }),
                this.tl.to(this.$el.querySelector("img"), {
                    scaleX: .625,
                    duration: .5,
                    ease: "sine.inOut"
                }, "a");
                var e = this.$el.querySelectorAll(".letter");
                this.tl.to(e, {
                    xPercent: 100,
                    duration: .5,
                    ease: "steps(3)",
                    modifiers: {
                        xPercent: function(t, i) {
                            var a = parseInt(i.dataset.idx) - .5 * (e.length - 1);
                            return .2 * t * a
                        }
                    },
                    stagger: {
                        from: "edges",
                        amount: .2
                    }
                }, "a")
            },
            beforeDestroy: function() {
                this.tl.kill()
            },
            methods: {
                handleMouseenter: function() {
                    this.tl.play()
                },
                handleMouseleave: function() {
                    this.tl.reverse()
                }
            }
        }
          , h = u
          , c = (i("b57b"),
        i("2877"))
          , d = Object(c["a"])(h, a, s, !1, null, "7d002b6f", null);
        t["a"] = d.exports
    },
    "01d9": function(e, t, i) {},
    "03cf": function(e, t, i) {
        e.exports = i.p + "img/preview.9028b205.jpg"
    },
    "05c0": function(e) {
        e.exports = JSON.parse('{"slug":"beaux-sens","name":"BEAUX SENS","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Light / Light Yellowish-Beige</p><p>Moisture / Well-draining sands on medium-porosity chalk (chalk is more closed)</p><p>Exposure / South / Gentle slope</p>","description":"<p>The Les Beaux Sens vineyard is situated on the Thanetian sands, one metre from the chalk. The sands helped protect the vines from Phylloxera, allowing us to keep some old Meunier vines without grafted rootstock.</p><p>The structure of the Thanetian sands requires very particular work for this demanding plot. These soils, usually very dry and well-draining, are also quite dynamic during the growing season.<br/>Water is more present than in the neighbouring Les Barres vineyard, giving the grasses an impressive vigour. Chalk restores a quick and lively energy to the plants of Les Beaux Sens, provoking extremely fast maturations, and requiring the wine growers to be attentive concerning the harvest date, to avoid picking the grapes from this vineyard too late.<br/>The \\"Beaux Sens\\" grapes are very fragile, and do not tolerate any over-ripeness without showing signs of weakness or rot. Natural grass growth must be used to avoid rapid mineralisation of soil nutrients, not to mention the nutrition of rapidly mineralisable soil.<br/>The Meunier vines in the Beaux Sens have a very low yield.</p>","details":"<p>Total Area / 3ha24a10ca</p><p>Chartogne-Taillet Area / 0ha27a12ca</p><p>Grape variety / 100% Meunier</p><p>Year of planting / 1974 - 2013</p><p>Exposure / South</p><p>Clay characteristics / Vermiculites: ~ 400m2 / gr</p><p>Soil / 74% sand, 6% clay, 19% silt</p>","image":"/assets/images/raisins/raisin-noir01.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/les-barres-sol.png","levels":[{"name":"Thanetian limestone sands","caption":"-1 mètres"},{"name":"Campanian Chalk","caption":""}]}]},"wine":{"name":"Les Beaux Sens","specifications":"<p>Blends / Saint-Anne</p><p>Colour / Light Orange, slight rosy coloration</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-column","text":"<p>The Beaux Sens cuvée will no longer be vinified alone, as the vines are too old to yield enough grapes to fill a press. This cuvée was produced in 2011, 2013 and 2014. These are the only three vintages available. The grapes produced by these vines have been used since the 2015 vintage in the production of the Sainte Anne cuvée. The Beaux Sens plot gives its wines delicate and silky densities, with opulent touches on different levels of the palate. The wines develop the tastes of the neighbouring vines, bringing additional hardness.</p>"},{"type":"block-highlight","text":"Wines from the Beaux Sens plot are included in the composition of the Sainte Anne cuvée"},{"type":"block-image","url":"/assets/images/cuve/les-beaux-sens.jpg"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Les Beaux Sens are surprising, changing their profile several times during the year, and asking the wine grower not to be too curious during his tastings. The wines go from an open and generous stage to being completely closed-in, almost reductive, from one day to the next. These wines are extremely sensitive to oxygen, and very often protect themselves by developing a veil, even in the presence of an adequate quantity of SO2. These future Champagnes love mineralisation: the stabilisation of their state brought about by the wisdom of aging and the life experience, which cause them to lose their youthfulness. You be the judge...</p>"}],"fichetechnique":"/assets/pdf/en/Les Beaux Sens ENG.pdf"}}')
    },
    "0930": function(e, t, i) {
        e.exports = i.p + "img/label.cabaa957.jpg"
    },
    "0bd8": function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("a", {
                staticClass: "cta",
                attrs: {
                    href: e.href,
                    target: "_blank"
                }
            }, [i("span", {
                staticClass: "icon"
            }), i("span", {
                staticClass: "caption"
            }, [e._v(e._s(e.$t("common.fichetechnique")))])])
        }
          , s = []
          , n = {
            props: {
                href: {
                    type: String
                }
            }
        }
          , r = n
          , o = (i("a851"),
        i("2877"))
          , l = Object(o["a"])(r, a, s, !1, null, "9b83b0de", null);
        t["a"] = l.exports
    },
    "0c33": function(e, t, i) {
        "use strict";
        var a = i("ca4d")
          , s = i.n(a);
        s.a
    },
    "0cfa": function(e, t, i) {
        e.exports = i.p + "img/title.79d6db26.png"
    },
    "0d18": function(e, t, i) {
        e.exports = i.p + "img/title.fd830be1.png"
    },
    1020: function(e) {
        e.exports = JSON.parse('{"wines":[{"slug":"sainte-anne","name":"Sainte-Anne","title":"SAINTE-ANNE","type":"assemblage","encepagement":"ピノ・ノワール　シャルドネ ・ムニエ","plantation":"1970年-2009年","exposition":"南、南東向き","fichetechnique":"/assets/pdf/jp/Sainte Anne JAP.pdf","packshot":"/assets/images/wines/packshot/saint-anne.png","lieudit":"MERFY","specifications":"<p>ブドウ栽培品種 / シャルドネ50% - ピノ・ノワール40%  - ムニエ10%</p><p>色合い / 明るいオレンジがかった光沢のある色合い</p>","content":[{"type":"block-column","text":"<p>キュヴェ・サンタンヌは メルフィ村の異なる様々な土壌から誕生したワイン達が シャンパーニュの感性あふれる伝統を踏襲するキュヴェです。 村の各々の区画から誕生するワインは このキュヴェの≪創造≫の際に そのアイデンティティーの一部となるのです。 キュヴェ・サンタンヌの味わいは その最後の余韻まで表現されます。アタックはしばしば豊満でボリューム感があり、そして砂質由来の塩味が収斂性のある苦味をもたらします。そして シャンパーニュを織りなすワイン達のそれぞれの由来を思い起こさせる、引き締まった骨組みの余韻が感じられます。</p>"},{"type":"block-paragraph","text":"<h3>アッサンブラージュの比率</h3><p>サンタンヌのブレンド比率は シャルドネ50％、黒ブドウ50％（ピノ・ノワール主体）です。その年の収穫年のワインの比率が最も高くなります。</p>"},{"type":"block-paragraph","text":"<h3>リザーブワイン</h3><p>キュヴェ・サンタンヌは 様々な収穫年のワインがアッサンブラージュされています。 大抵は 瓶詰される前の年の収穫年のワインが50％、それに 2年から5年のリザーブワインが50％含まれます。</p>"},{"type":"block-highlight","text":"大抵は 瓶詰される前の年の収穫年のワインが50％、それに 2年から5年のリザーブワインが50％含まれます。"},{"type":"block-paragraph","text":"<h3>醸造</h3><p>サンタンヌは今後 発酵、醸造を228ℓ、350ℓ、及び2000ℓの木樽で行います。主にリザーブワインですが ステンレスタンクで熟成されたワインが ごく少量含まれます。 私たちの村のシャンパーニュは 土壌のメッセージを伝えるために 酸素が必要です。区画ごとに 異なる方法で醸造が行われます（ウイヤージュの有無、木樽の産地等）この醸造期間中に 各々の性格、個性を顕著に表していくことができるのです。それぞれの区画の仕込みが終わると、メルフィ村の性格が最大限に引き出されたワインとなるように それらをブレンドしていきます。メルフィ村の砂質石灰岩の土壌がもたらす クリスタルのようなテクスチャーを目指し、私たちの村の個性を損なわないように細心の注意を払っています。</p>"},{"type":"block-image","url":"/assets/images/cuve/saint-anne.jpg"},{"type":"block-column","heading":"<h3>シャンパーニュ製法</h3>","text":"<p>ワインにフィルター掛けは一切行いません。 フィルター掛けは ワインのテクスチャー、つまり口の中でのふくよかさとミネラルのバランスを過度に変化させてしまいます。 サンタンヌに用いられるワインは 区画だけでなく収穫年も異なります。 収穫年の古いワインは 快活で血気盛んな若いワインを落ち着かせ、まろやかにしてくれます。カーヴでの熟成後、澱引きされますが、その時のブリュットのドザージュ量は 年によって少し変わります。 ドザージュを試みると 凡そ4から7gの糖分が必要で、この量は アグレッシブで力強い泡に対してバランスを整え、それでいてワイン本来の味わいを損なわない、豊満で密になりすぎない量だといえます。ドザージュ用のリキュールは 澱引きされたキュヴェと同じワインを用いたリキュールが添加されます。</p>"}]},{"slug":"le-rose","name":"Le Rosé","title":"LE ROSÉ","type":"assemblage","encepagement":"ピノ・ノワール　シャルドネ","plantation":"1970年-2009年","exposition":"南、南東向き","fichetechnique":"/assets/pdf/jp/Le Rose JAP.pdf","packshot":"/assets/images/wines/packshot/rose.png","lieudit":"Avize","specifications":"<p>ブドウ栽培品種/ ピノ・ノワール<br/>色合い / パステルオレンジから明るい赤など様々なカラーバリエーション</p>","content":[{"type":"block-column","text":"<p>ル・ロゼは 赤と白ワインのアッサンブラージュのシャンパーニュです。２つの性格の異なるプロフィールを持ち、それが連続的に現れます。はじめのアタックは 柔らかな口当たり、そして 繊細で鋭敏な余韻が持続します。</p>"},{"type":"block-paragraph","text":"<h3>アッサンブラージュ</h3><p>ル・ロゼは シャルドネと黒ブドウ（ピノ・ノワールの比率が高い）のアッサンブラージュのシャンパーニュです。ブレンドに用いられる赤ワインは ≪赤ワイン造り≫のブドウとして定評のある2つの区画の内、 何れかの畑で収穫されたブドウから醸造されています。一部の年には オリゾーの区画のものが、2017年以降は サン・ティエリーの≪レ・フォンテーヌ≫産の赤ワインがブレンドされています。 ル・ロゼは 私たちのメゾンでは 異色の存在です。区画もののシャンパーニュに比べて より複雑な醸造のセンスが問われます。 白ワインに赤ワインをブレンドすることによって、過度なボリューム感、果実味、タンニンの強さが出ないように 細心の注意を払わなければなりません。</p>"},{"type":"block-paragraph","text":"<h3>ブレンドのベースになる収穫年</h3><p>このキュヴェには　リザーブワインをブレンドしない単一年のワインを用いるようにしています。</p>"},{"type":"block-image","url":"/assets/images/cuve/le-rose.jpg"},{"type":"block-highlight","text":"単一収穫年のワインが用いられます。"},{"type":"block-paragraph","text":"<h3>シャンパーニュ製法</h3><p>ル・ロゼは 228ℓと350ℓの木樽を用いて熟成が行われます。発酵は素早く行い、酵母やバクテリアの添加は行いません。</p>"}]},{"slug":"orizeaux","name":"Orizeaux","title":"ORIZEAUX","type":"monocépage","encepagement":"ピノ・ノワール100％","plantation":"1970年","exposition":"南及び北向き","fichetechnique":"/assets/pdf/jp/Orizeaux JAP.pdf","parcelle":"les-oriseaux","packshot":"/assets/images/wines/packshot/orizeaux.png"},{"slug":"les-barres","name":"Les Barres","title":"LES BARRES","type":"monocépage","encepagement":"ムニエ100%","plantation":"1970年-2008年","exposition":"南向き（ムニエ）、西向き（ピノ・ノワール）","fichetechnique":"/assets/pdf/jp/Les Barres JAP.pdf","parcelle":"les-barres","packshot":"/assets/images/wines/packshot/les-barres.png"},{"slug":"chemin-de-reims","name":"Chemin de Reims","title":"CHEMIN DE REIMS","type":"monocépage","encepagement":"シャルドネ100%","plantation":"1980年-1995年-2011年","exposition":"南又は南東向き","fichetechnique":"/assets/pdf/jp/Chemin de reims JAP.pdf","parcelle":"le-chemin-de-reims","packshot":"/assets/images/wines/packshot/chemin-de-reims.png"},{"slug":"les-couarres","name":"Les Couarres","title":"LES COUARRES","type":"monocépage","encepagement":"ピノ・ノワール/シャルドネ","plantation":"1970年 - 2009年","exposition":"南向きの傾斜の緩やかな斜面","fichetechnique":"/assets/pdf/jp/Les Couarres JAP.pdf","parcelle":"les-couarres","packshot":"/assets/images/wines/packshot/les-couarres.png"},{"slug":"heurtebise","name":"Heurtebise","title":"HEURTEBISE","type":"monocépage","encepagement":"シャルドネ100%","plantation":"1972年 - 1985年 - 1986年 - 2010年","exposition":"南向き","fichetechnique":"/assets/pdf/jp/Heurtebise.pdf","parcelle":"les-heurtes-bises","packshot":"/assets/images/wines/packshot/heurtebise.png"}]}')
    },
    1093: function(e) {
        e.exports = JSON.parse('{"slug":"les-heurtes-bises","name":"LES HEURTES BISES","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / jaune brun</p><p>Humidité / Sol variant du sec à l’humide en fonction des conditions climatiques<br/>Sables du Thanétien mélangé à l’argile sur un grès</p><p>Exposition / Sud</p>","description":"<p>Cette vigne est installée sur un sol de grès, moins perméable que les sols voisins de craie ou de «Tuf» cela impacte les vignes qui s’adapte aux excès d’eau ou de sec. Heurtebise est, comme son nom l’indique, une vigne située sur un plateau venteux.</p><p>Le travail du vigneron sur cette parcelle est d’adapter la réaction de la plante aux variations climatiques. En année humide, je privilégie un feuillage haut et une aération du feuillage pour consommer l’eau du sol par l’évapo-transpiration des plants et grâce au vent. L’herbe peut elle aussi jouer un rôle important dans la limitation de la mise à disposition des éléments nutritifs de la plante. A l’inverse, en année sèche, le feuillage sera rogné plus bas, pour limiter l’absorption rapide de l’eau du sol. Bien que cette parcelle soit installée sur un terrain à très faible inclinaison, le travail du sol peut être requis en plein (sous et dans le rang), de manière à faire remonter l’eau du sous sol lorsque le besoin se fait sentir.</p>","details":"<p>Surface totale / 5ha80a65ca</p><p>Surface exploitée / 1ha67a48ca</p><p>Encépagement / 83% Chardonnay / 12% Pinot Noir / 5% Meunier</p><p>Année de plantation / 1972 - 1985 - 1986 - 2010</p><p>Type d’argile / Illites / 245 m2 / g</p>","image":"/assets/images/bouteilles/heurtebise.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"Sables calcaires du<br/>Thanétien et argiles","caption":""},{"name":"Grès","caption":"-80cm"}]}]},"wine":{"name":"Heurtebise","specifications":"<p>Encépagement / 100% Chardonnay</p><p>Sa Couleur / Eclatant - Jaune brillant aux reflets verts</p>","packshot":"/assets/images/wines/packshot/heurtebise.png","content":[{"type":"block-highlight","text":"La parcelle Les Heurtes Bises procure aux vins une texture anguleuse, vibrante"},{"type":"block-paragraph","text":"<p>Une salivation de milieu et haut de bouche identifie ce Champagne, accompagné par une consistance cristalline et parfois tannique. Vin nerveux par le minéral grèseux.</p><h3>L’ÉLEVAGE</h3><p>Les vins d’Heurtebise sont élevés en fûts de 228 litres pour accompagner la tension naturelle de ces jus. La minéralité s’habille d’une robe sucrée sans tannicité des fûts bourguignons pendant une période variante de 9 à 18 mois. L’influence de l’élevage est plus importante pour Heurtebise que pour d’autres vins de parcelles voisines.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-heurtes-bises.jpg"}],"fichetechnique":"/assets/pdf/fr/Heurtebise.pdf"}}')
    },
    1173: function(e, t, i) {
        e.exports = i.p + "img/domainLabel.7a29a2da.png"
    },
    1212: function(e, t, i) {
        "use strict";
        var a = i("8825")
          , s = i.n(a);
        s.a
    },
    "153a": function(e, t, i) {
        e.exports = i.p + "img/terrainData3.fbded28f.jpg"
    },
    1588: function(e, t, i) {
        e.exports = i.p + "img/title.ae941a4b.png"
    },
    1663: function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                class: ["text block-component", e.data.layout],
                domProps: {
                    innerHTML: e._s(e.data.text)
                }
            })
        }
          , s = []
          , n = {
            name: "BlockParagraph",
            props: {
                data: {
                    type: Object,
                    default: function() {}
                }
            }
        }
          , r = n
          , o = (i("ee33"),
        i("2877"))
          , l = Object(o["a"])(r, a, s, !1, null, "656642e8", null);
        t["a"] = l.exports
    },
    "175a": function(e, t, i) {
        "use strict";
        var a = i("caf5")
          , s = i.n(a);
        s.a
    },
    "1a27": function(e, t, i) {
        "use strict";
        i.d(t, "a", (function() {
            return u
        }
        ));
        var a = i("d4ec")
          , s = i("bee2")
          , n = i("257e")
          , r = i("262e")
          , o = i("2caf")
          , l = i("ee6c")
          , u = function(e) {
            Object(r["a"])(i, e);
            var t = Object(o["a"])(i);
            function i() {
                var e;
                return Object(a["a"])(this, i),
                e = t.call(this),
                e.start = Date.now(),
                e.current = e.start,
                e.elapsed = 0,
                e.delta = 16,
                e.tick = e.tick.bind(Object(n["a"])(e)),
                e.tick(),
                e
            }
            return Object(s["a"])(i, [{
                key: "tick",
                value: function() {
                    this.ticker = window.requestAnimationFrame(this.tick);
                    var e = Date.now();
                    this.delta = e - this.current,
                    this.elapsed = e - this.start,
                    this.current = e,
                    this.delta > 60 && (this.delta = 60),
                    this.trigger("tick")
                }
            }, {
                key: "stop",
                value: function() {
                    window.cancelAnimationFrame(this.ticker)
                }
            }]),
            i
        }(l["a"])
    },
    "1aa4": function(e) {
        e.exports = JSON.parse('{"slug":"le-mont-age","name":"LE MONT AGÉ","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour /  Dark, almost Black<br/>Moisture / Moist soil<br/>Exposure / South</p>","description":"<p>The slopes of Merfy and Chenay are, in certain places, sensitive to excess water. An example is this plot, situated between Merfy and Chenay. These rich soils absorb water and swell, obliging us to postpone our work until the next drying winds arrive. We work the soil here solely with the help of our horses, to cope with these difficult situations without fear of getting stuck in these wet soils...</p>","details":"<p>Total Area: 4ha06a50ca</p><p>Chartogne-Taillet Area: 43 ares 30 ca</p><p>Grape variety: Meunier</p><p>Year of planting: 1980 - 1983</p><p>Exposure: South / South East</p><p>Type of clay: Vermiculites 319 m2/gr</p>","image":"/assets/images/raisins/raisin-noir02.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"Upper Ypresian Sands","caption":""},{"name":"Sandy Clay","caption":"1 metre depth"}]}]},"wine":{"name":"Le Mont Agé","specifications":"<p>Colour / Pale Yellow<br/>Texture / Wines from Le Mont Agé have a fresh to cold taste, with a taut and chiselled character.</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Wines from the Mont Agé plot are included in the composition of the Sainte Anne cuvée"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from this plot are included in the composition of the Sainte Anne cuvée. They require a lot of attention, like those on the neighbouring plot, Les Alliées.<br/>The saltiness is hidden behind the significant tension and richness of the Meunier. We intervene quite a bit during the maturation, altering the profile of these sensitive wines. We try to keep this straight structure, while downplaying the varietal, during aging in old 228-litre casks.</p>"},{"type":"block-image","url":"/assets/images/cuve/le-mont-age.jpg"}],"fichetechnique":"/assets/pdf/en/Le Mont age ENG.pdf"}}')
    },
    "1eaa": function(e, t, i) {
        e.exports = i.p + "img/title.0ce44eef.png"
    },
    "1f15": function(e, t, i) {
        e.exports = i.p + "img/label.be1cb8b0.jpg"
    },
    2022: function(e, t, i) {
        e.exports = i.p + "img/title.598f2b94.png"
    },
    2093: function(e, t, i) {
        e.exports = i.p + "img/title.446ef989.png"
    },
    "220b": function(e, t, i) {
        e.exports = i.p + "img/reims.59942af1.png"
    },
    "23b7": function(e) {
        e.exports = JSON.parse('{"slug":"les-alliees","name":"LES ALLIÉES","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / Brun, Marron foncé qui tend au noir<br/>Humidité / Sol humide<br/>Exposition / Sud</p>","description":"<p>La vigne des Alliées est originale pour Chenay. Elle contient des argiles qui conservent une humidité permanente. Cette générosité de sol entraine une forte sensibilité aux maladies et principalement au botrytis, qui s’installe rapidement alors que la maturation des fruits n’est pas terminée. Un gros travail de suivi est nécessaire pour obtenir de cette parcelle des Champagnes à l’identité forte.</p>","details":"<p>Surface totale : 4ha77a35ca</p><p>Surface exploitée : 60 ares 60 ca</p><p>Encépagement : Meunier</p><p>Année de plantation : 1969</p><p>Exposition : Sud / Sud -Est</p><p>Type d’argile : Vermiculites 362 m2/gr</p>","image":"/assets/images/raisins/raisin-noir01.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"Sables limoneux<br/>calcaires du Cuisien","caption":""},{"name":"Argile Sableuse","caption":"-1m"}]}]},"wine":{"name":"Les Alliées","specifications":"<p>Sa Couleur / Orange rose brillant</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Le vin des Alliées rentre dans la composition de la cuvée Sainte Anne"},{"type":"block-paragraph","text":"<h3>TEXTURE</h3><p>Les Alliées offrent un vin à la texture verticale, presque carrée. La salivation est intense et l’acidité souvent plus marquée que les autres Meuniers du village.. Ces courbes anguleuses en font un Champagne qui aime le vieillissement.</p>"},{"type":"block-paragraph","text":"<h3>L\'ÉLEVAGE</h3><p>Les vins des Alliées sont élevés en fûts neufs ou jeunes depuis l’année 2016. Les tanins soyeux du bois atténuent le caractère vif des vins de cette parcelle, et rééquilibrent le gras du meunier qui peut perturber l’équilibre du vin.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-alliees.jpg"}],"fichetechnique":"/assets/pdf/fr/Les Alliees.pdf"}}')
    },
    2439: function(e) {
        e.exports = JSON.parse('{"slug":"les-barres","name":"LES BARRES","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / Clair / beige jaune</p><p>Humidité / Sol sec très drainant</p><p>Exposition / Sud-Ouest</p>","description":"<p>La vigne des Barres est installée sur les sols les plus drainants du village. Les sables ont permis de préserver les vignes du phylloxera, nous permettant ainsi de conserver une vigne de Meunier et une nouvelle plantation de Chardonnay sans porte greffe (pieds francs).</p><p>Ce sol exige de limiter au maximum le nombre de passages du vigneron. Les sables se compactent facilement, et cette terre est trop fine pour être travaillée à la charrue. Nous limitons donc le travail du sol au strict minimum, (avant l’hiver sous les pieds), puis laissons l’herbe en place pour conserver la structure et la portance des sols. La tonte de l’herbe se fait uniquement à la main (Rotofils) pour limiter la compaction, tandis que la taille des plants est réalisée avec l’objectif de favoriser une bonne répartition du flux de sève (préservation des plants dans le temps). L’apparition d’herbes diverses et naturelles m’aident à comprendre la santé et la condition du sol, nous adaptons alors notre intervention au message délivré par la nature.</p><p>Les rendements de cette parcelle sont très bas.</p>","details":"<p>Surface Totale / 4ha77a35ca</p><p>Surface Exploitée / 1ha37a60ca</p><p>Encépagement / 100% Meunier</p><p>Année de plantation / 1970 - 2008</p><p>Type d’argile / Illite 192 m2 / Gr</p>","image":"/assets/images/bouteilles/les-barres.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/les-barres-sol.png","levels":[{"name":"Sables calcaires<br/>du Thanétien","caption":""},{"name":"Craie du Campanien","caption":"-1,5 mètres"}]}]},"wine":{"name":"Les Barres","specifications":"<p>Encépagement / 100% Meunier</p><p>Sa Couleur / Orange pâle aux reflets brillants sur les bords</p>","packshot":"/assets/images/wines/packshot/les-barres.png","content":[{"type":"block-column","text":"<p>Les Barres offrent des textures de vin qui se modifient avec le temps. Au début, dans leur jeunesse, les vins sont gras, sphériques, enveloppants presque collants (rappelant alors la peau des raisins de vignes franches de pied). Avec le temps, la trame s’affine et s’allonge, les sels apparaissent et dévoilent un vin souple, crémeux et ample.</p>"},{"type":"block-highlight","text":"Les vins des Barres exigent une écoute particulière"},{"type":"block-paragraph","text":"<h3>L’ÉLEVAGE</h3><p>Les vins de meunier offrent souvent une texture et des arômes imposants, couvrant les sels du Terroir. Les vins sont travaillés en fûts de 228 litres à fort échange d’oxygène. Ceci favorise la minéralisation du vin qui fait lentement disparaitre les arômes du cépage au profit de sels (fraction stable du vin). Aucun ouillage n’est effectué de la fermentation jusqu’au mois de Mars (environ), afin de favoriser cette minéralisation. Le vin se protège de l’oxygène sous son voile, laissant alors apparaitre l’attrait salin.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-barres.jpg"},{"type":"block-paragraph","text":"<h3>VIEILLISSEMENT</h3><p>Les Barres est un Champagne atypique, à l’évolution particulière. Il intègre l’oxygène et s’épanouit dans une atmosphère sombre, ombragée, presque humide. Les arômes ne sont pas francs, ils sont marqués par le sous bois, l’humus. La texture saline s’élargit en vieillissant, ne laissant presque plus de place à la fraction organique et aux légers fruits orangés que l’on pouvait percevoir durant les premières années du Champagne.</p>"}],"fichetechnique":"/assets/pdf/fr/Les Barres.pdf"}}')
    },
    "24cd": function(e, t, i) {
        e.exports = i.p + "img/title.f49f62f1.png"
    },
    "2a10": function(e, t, i) {
        e.exports = i.p + "img/perlin-512x512.4b707571.jpg"
    },
    "2a55": function(e) {
        e.exports = JSON.parse('{"slug":"le-mont-age","name":"LE MONT AGÉ","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / ほぼ黒に近い暗い色<br/>保水性 / 湿った土壌<br/>畑の向き / 南向き</p>","description":"<p>メルフィ、シュネイの丘陵地帯は水捌けの良くない土地です。シュネイとメルフィの間に位置するこの区画もまたしかりです。粘着性のある土壌は水分を吸収しぬかるむので次の風が吹いて土壌が乾くまで　畑仕事を中断しなければなりません。畑仕事は　この状況を克服するため、ぬかるみにはまり込むことを危惧しないでもいいように　馬の助けを借りて行います。</p>","details":"<p>畑の総面積 / 4ha06a50ca</p><p>現耕作面積 / 43 ares 30 ca</p><p>栽培品種 / ムニエ</p><p>植樹された年 / 1980 年、1983年</p><p>畑の向き / 南 / 南東向き</p><p>粘土のタイプ / バーミキュライト 319 m2/gr</p>","image":"/assets/images/raisins/raisin-noir02.jpg","underground":[{"title":"地表：ムニエ栽培","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"ヤプレシアン期の砂質","caption":""},{"name":"砂質粘土","caption":"1メートルの深さ"}]}]},"wine":{"name":"Le Mont Agé","specifications":"<p>色合い / 淡い黄色<br/>口当たり / ル・モン・アジェは　きりっとした端正な性格を持つ　フレッシュで酸味のあるワインです。</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Lこの区画のワインは、キュヴェのブレンドに用いられますSainte Anne。"},{"type":"block-paragraph","text":"<h3>熟成</h3><p>この区画のワインは　キュヴェ・サン・タンヌのブレンドに用いられます。これらは　隣接するレ・ザリエの区画同様細心の注意が払われます。大変な緊張感と一風変わったムニエの肉厚な味わいに　塩の風味が隠されています。熟成の間は人の影響を受けやすく、繊細なこれらのワインの持つ味わいを変えてしまうことがあります。私たちは228ℓの古樽を用いて、品種の特徴的な味わいを消し　率直な味わいを残すような熟成を行っています。</p>"},{"type":"block-image","url":"/assets/images/cuve/le-mont-age.jpg"}],"fichetechnique":"/assets/pdf/en/Le Mont age ENG.pdf"}}')
    },
    "2ce1": function(e, t, i) {
        e.exports = i.p + "img/label.39ef78fd.jpg"
    },
    "2e06": function(e) {
        e.exports = JSON.parse('{"slug":"beaux-sens","name":"BEAUX SENS","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / Clair / beige jaune blanc</p><p>Humidité / Sables drainants sur craie à porosité moyenne (craie plus fermée)</p><p>Exposition / Sud / pente faible</p>","description":"<p>La vigne des Beaux Sens est installée sur les Sables du Thanétiens à un mètre de la craie. Les sables ont permis de préserver les vignes du phylloxera, nous permettant ainsi de conserver ces vieilles vignes de Meunier sans porte greffe (pieds francs).</p><p>La structure des sables du thanétien demande un travail très particulier pour cette parcelle exigeante. Ces sols, habituellement très secs et drainants, sont aussi très dynamiques en période de pousse.</p><p>L’eau est plus présente que dans la vigne voisine des «Barres» et ceci donne aux herbes une vigueur impressionnante. La craie restitue aux plantes des Beaux Sens une énergie vive et rapide, qui provoque des maturations extrêmement rapides. Cela demande aux vignerons d’être vigilants quant à la date de vendange, afin de ne pas cueillir les raisins de la vigne trop tard. Les raisins des «Beaux Sens» sont très fragiles, et n’acceptent aucune sur-maturité sans laisser apparaitre des signes de faiblesse ou de pourriture. Il faut privilégier les couvertures de sol pour éviter la minéralisation rapide des éléments nutritifs du sol, v+ 60 cm profondeur pour éviter la nutrition du sol rapidement minéralisable. Les rendements du Meunier des Beaux Sens sont très bas.</p>","details":"<p>Surface Totale / 3ha24a10ca</p><p>Surface exploitée / 0ha27a12ca</p><p>Encépagement / 100% Meunier</p><p>Année de plantation / 1974 - 2013</p><p>Qualité des argiles / Vermiculites / ~ 400m2 / gr</p><p>Sol / 74% sable , 6% argile , 19% limons</p>","image":"/assets/images/raisins/raisin-noir01.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/les-barres-sol.png","levels":[{"name":"Sables calcaires<br/>du Thanétien","caption":"-1 mètres"},{"name":"Craie du Campanien","caption":""}]}]},"wine":{"name":"Les Beaux Sens","specifications":"<p>Assemblages / Saint-Anne</p><p>Sa Couleur / Orange clair, légère coloration rosée</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-column","text":"<p>La cuvée «Beaux Sens» ne sera plus vinifiée seule en raison d’un âge trop avancé pour donner suffisamment de raisins pour remplir un pressoir. Cette cuvée a été produite en 2011, 2013 et 2014. Ce sont les trois seuls millésimes disponibles. Les raisins produits par cette vigne rentrent depuis le millésime 2015 dans la production de la cuvée Sainte Anne. Les Beaux Sens procurent à ses vins des densités fines et soyeuses, aux touches opulentes, sur différents niveaux de la bouche. Les vins s’étendent et proposent un mordant supplémentaire aux vignes voisines.</p>"},{"type":"block-highlight","text":"Le vin des beaux Sens rentre dans la composition de la cuvée Sainte Anne"},{"type":"block-image","url":"/assets/images/cuve/les-beaux-sens.jpg"},{"type":"block-paragraph","text":"<h3>L’ÉLEVAGE</h3><p>Les vins des Beaux Sens sont surprenants, ils changent de profil plusieurs fois durant l’année et demandent au vigneron de ne pas être trop curieux lors de ses dégustations. Les vins passent d’un état ouvert et généreux à la fermeture complète, presque réductive, d’un jour à l’autre. Ces vins sont extrêmement sensibles à l’oxygène, et se protègent très souvent par un développement de voile, même en présence d’une quantité acceptable de So2. Ces futurs Champagnes aiment la minéralisation, cette stabilisation de leur état par la sagesse du viellissement et l’expérience d’une vie qui leur fait perdre la prime jeunesse.</p>"}],"fichetechnique":"/assets/pdf/fr/Les Beaux Sens.pdf"}}')
    },
    "2e21": function(e, t, i) {
        e.exports = i.p + "img/title.926342fc.png"
    },
    "2e2c": function(e) {
        e.exports = JSON.parse('{"slug":"cote-des-blancs","name":"CÔTE DES BLANCS","lieudit":"AVIZE","ground":{"specifications":"<p>Avize : 58,49 ares  / Oger : 28,76 ares</p><p>Couleur du sol /  sol equilibré, porosité du sol crayeux très importante.</p><p>Humidité / Sol equilibré, porosité suffisante sans excès<br/>Argilo calcaire sur craie du campanien.</p><p>Exposition / Est ou Sud</p>","description":"<p>Les vignes d’Avize ont plusieurs profil de sol qui se séparent en trois catégories.</p><h3>Chemin de Chalons, Pierre Vaudon, Fosse le prêtre, Mont Chenevaux, Justice et La Noue Du Porchet</h3><p>Les sols de la plaine offrent le plus d’ensoleillement, de très fortes maturités et un profil très crayeux grace à la très fine couche de sol installée sur la craie (moins de 20 cms). Profil minéral et gourmand. Les raisins souvent dorés, plus petits transpirent le soleil et le sucre. Les peaux se font plus fines mais aucun éclatement de baies n’arrive grâce au rôle du calcium dans l’élasticité des peaux.</p><p>Ces sols sont peu profonds et les racines directement installées dans la craie à quelques centimètres sous le niveau de sol. Le soleil quant à lui brille du matin jusqu’à la fin de journée, grace à son éloignement des coteaux Est de la Côte des Blancs.</p><h3>Le Mont de Cramant, Les Crayères, Les Chantraines, Les Gros Yeux Du Couchant</h3><p>Les premiers coteaux qui ont des sols sont plus profonds mais parsemés d’une craie poreuse émiétée, parfois exposés au Sud. Ils donnent un profil de vin très intéressant pour l’équilibre organo/minéral. Ces vins sont équilibrés et suffisants. Les sols, plus généreux, procurent aux vins une gourmandise amoureuse, comme le sont les sols du village, collants en période de pluie, sans être pour autant lourds.</p><h3>Les Roches Hautes, Les Barmonts, Le Clos Jacquin</h3><p>Les vignes au dessus de la route qui mène vers Cramant ou Oger avant le bois sont elles, plus fraiches, humides, dont les racines voient moins la craie. Les vins sont ici plus tendus et stricts par ce léger écart de maturité que provoque l’effacement du soleil quelques heures avant les vignes de plaine. Ces sols sont très souvent les plus abruptes du village, avec des pentes à forte inclinaison.</p>","details":"<p>Surface Totale travaillée à Avize / 59a74ca</p><p>Surface Totale travaillée à Oger / 15a55ca</p><p>Surface exploitée / 75a29ca</p><p>Encépagement / 100% Chardonnay</p><p>Année de plantation / 1927 - 1986</p><p>Surface interne des argiles / 247 m2/g</p>","image":"/assets/images/raisins/raisin-blanc01.jpg","underground":[{"title":"Parcelles de Mi Cote d’Avize :<br/>Mont de Cramant / Roches Hautes","image":"/assets/images/parcelles/couarres-chateau.png","levels":[{"name":"Sol Argilo Calcaire Silex","caption":"-1.5 m"},{"name":"Craie du Campanien","caption":""}]},{"title":"Parcelles de Mi Cote d’Avize :<br/>Mont de Cramant / Roches Basses","image":"/assets/images/parcelles/cote-des-blancs-sol1.png","levels":[{"name":"Sol Argilo Calcaire","caption":"-50cm"},{"name":"Craie du Campanien","caption":""}]},{"title":"Parcelles en plaine d’Avize et Oger :<br/>Pierre Vaudon / Fosse le prêtre / Les<br/>Monts Chenevaux / Chemin de Chalons","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"Sol Argilo Calcaire","caption":"-0.50cm"},{"name":"Craie du Campanien","caption":""}]}]},"wine":{"name":"Côtes des Blancs","specifications":"<p>Encépagement / 100% Chardonnay</p><p>Sa Couleur / Souvent pâle, aux reflets jaune brillant dépassant le vert.</p>","packshot":"","headingdescription":"Aucune différenciation ne sera faite entre Avize et Oger. Nos vignes d’Oger se situent à la lisière des vignes d’Avize, et leur superficie ne permet pas de séparer les raisins lors du pressurage. Je préfère diviser les vignes et les vins en fonction de leur position sur le coteau.","content":[{"type":"block-paragraph","text":"<p>Aucune différenciation ne sera faite entre Avize et Oger. Nos vignes d’Oger se situent à la lisière des vignes d’Avize, et leur superficie ne permet pas de séparer les raisins lors du pressurage. Je préfère diviser les vignes et les vins en fonction de leur position sur le coteau.</p>","layout":"center"},{"type":"block-column","text":"<p>Les vins d’Avize ont un tempérament marin, au profil salé et à la particularité d’être l’un des terroirs les plus amples et généreux de la Côte des Blancs. Deux ou trois types de parcelles offrent des vins bien caractéristiques : Les vins de plaine sont ceux qui graissent le plus la bouche car favorisés par un grand ensoleillement. La craie qui est la plus affleurante sur ces terroirs s’occupe d’équilibrer la chaleur de ces vins par les sels de la craie du Campanien. Les vins des coteaux recoivent moins de soleil et s’équilibrent par une acidité plus mordante. Les mi côte, quant à eux, sont équilibrés entre le minéral et la profondeur.<br/>Une texture presque mielleuse tapisse la bouche tout en conservant, dans son extrême jeunesse, des arômes de fruits de la passion.</p>"},{"type":"block-image","url":"/assets/images/cuve/avize.jpg"},{"type":"block-highlight","text":"En vieillissant, les sels s’épanouissent, le fruit disparaît pour donner l’un des plus grands vins de chardonnay de Champagne."},{"type":"block-paragraph","text":"<h3>LES FERMENTATIONS</h3><p>Les fermentations des vignes d’Avize de la maison sont souvent longues. Cette étape de transformation du jus de fruit au sel viticole est rarement finie avant deux mois après vendange.</p><h3>L\'ÉLEVAGE</h3><p>Les vins d’Avize sont joueurs et permettent au vigneron d’adapter le système d’élevage selon ses préférences. Chaque année est différente en fonction de la tannicité des jus (maturité des rafles et des pépins ...). Les vins d’Avize sont élevés en futs de 228l , 350l et 600l. Le choix des tonneaux est décidé à la vendange selon l’influence que donnera le bois de chaque tonnelier.</p>"}],"fichetechnique":"/assets/pdf/fr/Cote des Blancs.pdf"}}')
    },
    "2e51": function(e) {
        e.exports = JSON.parse('{"slug":"le-chemin-de-reims","name":"LE CHEMIN DE REIMS","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Brown, Orangey-Red Sand</p><p>Moisture / Well-balanced soil, porosity adequate but not excessive. Thanetian sands, with layers varying depending on the depth, rich in iron</p><p>Exposure / South - South East</p>","description":"<p>These vines retain enough moisture to excite the curiosity of the roots at all soil depths.</p><p>This iron-rich soil gives the roots a rosy hue and a twisted shape, a sign of a soil very well-suited to host the vines. This generous soil is often worked under a cover of natural grasses, which limits the vines\' abundance and the excess water, and thus the availability of nutrients to the plants</p>","details":"<p>Total Area / 1ha24a02ca</p><p>Chartogne-Taillet Area / 1ha11a12ca</p><p>Varieties / 85% Chardonnay / 15% Arbanne</p><p>Year of planting / 1980 - 1995 - 2011</p><p>Exposure / South - South East</p><p>Clay type / Vermiculites 272 m2 / gr (top soil)</p><p>Illites / 479 m2 / gr (50 cm deep)</p>","image":"/assets/images/bouteilles/chemin-de-reims.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"Orangey-red Thanetian<br/>limestone sands","caption":""},{"name":"Campanian Chalk","caption":"-60cm"}]}]},"wine":{"name":"Chemin de Reims","specifications":"<p>Grape varieties / 85% Chardonnay / 15% Arbanne</p><p>Colour / Often pale, with brilliant yellow lights that shine over the green</p>","packshot":"/assets/images/wines/packshot/chemin-de-reims.png","content":[{"type":"block-column","text":"<p>Tannic bitterness coats the palate. Le Chemin de Reims is mainly planted with Chardonnay, but, due to the iron-rich soil, the fullness and good structure on the palate take precedence over the variety\'s normal character. A sanguine texture, ample in the mid-palate then taut at the end, is characteristic of the plot\'s location.</p>"},{"type":"block-highlight","text":"A warm wine, with medium salivation at the back of the tongue."},{"type":"block-image","url":"/assets/images/cuve/chemin-de-reims.jpg"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>The Chemin de Reims wine accepts different aging environments, from casks to tanks. The density of this Champagne orients my choice towards oak containers, from coopers whose casks are more \\"reductant and protective.\\" Since 2012, Chemin de Reims has been aged in casks of 350 to 600 litres. Regular topping-up at the end of fermentation allows us to preserve the originality of the wines from this plot.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Chemin de reims.pdf"}}')
    },
    "2fb5": function(e, t, i) {
        e.exports = i.p + "f7ef1271c9def1decd9a4600548e3798.glb"
    },
    3139: function(e, t, i) {
        e.exports = i.p + "img/label.a1163287.jpg"
    },
    "315c": function(e) {
        e.exports = JSON.parse('{"slug":"les-oriseaux","name":"LES ORISEAUX","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 /赤黄色 , 黄金色</p><p>保水性 /バランスの取れた土壌 過度になりすぎない十分な透水性を持つ<br/>カンパニア期のチョーク層の上に細かい石灰が混じったサネティアン期の砂質。<br/>所によりサネティアン期の砂質の深さは2メートルに及びます</p><p>斜面の向き / 南と北両面向き</p>","description":"<p>ブドウの実に土壌の塩味が感じられるようになるために 深い下層土にブドウの樹の根が到達するまで何年もかかります。<br/>若い、又は根が表面に伸びているときは ワインの有機物と塩味のバランスが取れません。<br/>ブドウは複雑さの感じられない味になります。この土壌特有の風味が感じられるブドウを得るためには15年以上の歳月がかかります。私たちは今後も60年以上に渡ってこのブドウが収穫できることを祈りながら これらの自根を絶やさないように細心の注意を払って栽培を行っています。</p>","details":"<p>畑全面積 / 4ha46a12ca</p><p>耕作面積 / 49a17ca</p><p>栽培品種 / 100% ピノ・ノワール</p><p>植樹された年 / 1970 年畑の向き : 南と北向き</p><p>粘土のタイプ / イライト含有量 : 262 m2 / gr</p>","image":"/assets/images/bouteilles/orizeaux.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/orizeaux-sol.png","levels":[{"name":"サネティアン期の砂質","caption":""},{"name":"カンパニア期のチョーク層","caption":"深さ2メートル"}]}]},"wine":{"name":"Orizeaux","specifications":"<p>栽培品種 / ピノ・ノワール 100%</p><p>色合い / ときに黄金又は黄金に煌めくオレンジ/p>","packshot":"/assets/images/wines/packshot/orizeaux.png","content":[{"type":"block-column","text":"<p>レ・オリゾーのワインは 私にとっていくつもの点において評価できるワインです。空気に触れさせないようにタンクを用いて醸造を行うと、しなやかで次第にふんわりとした豊かさが感じられる味わいになります。<br/>樽を用いて熟成を行うと 熟成の間に塩味が現れると同時に収斂性とのバランスを取り、私たちの村の味わいとしては稀な塩味と豊かさが口の中に広がります。</p>"},{"type":"block-paragraph","text":"<h3>発酵</h3><p>オリゾーのワインは まず短期間の自然発酵が行われます。この畑由来のミネラル分が 短期の自然発酵に適しているようです。このワインは 醸造所の温度、PHの指数に関係なくマロラクティック発酵が直ぐに始まります。このシャンパーニュは マロラクティック発酵を止めるのは 発酵の開始が遅れる年を除いて難しく、私が醸造を始めてから10数年、一度もそのような機会がありません。</p>"},{"type":"block-highlight","text":"オリゾーのワインは まず短期間の自然発酵が行われます。"},{"type":"block-image","url":"/assets/images/cuve/les-oriseaux.jpg"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>レ・ゾリゾーは 毎年ブルゴーニュから運ばれてきた2年から9年使用したオークの樽を使って行われます。<br/>これ以上の重厚さは必要ありませんので バトナージュは一切行いません。収穫時に果汁に添加するSO2の量に注意を払っています。このシャンパーニュは本来含まれるミネラル分の無機物化が必要ですが、酸化を嫌います。圧搾の際に適量加えられるSO2のおかげで ワインの酸化が防がれ、定期的なウイヤージュ無しでも熟成が進み、調和のとれたワインに仕上がります。</p>"}],"fichetechnique":"/assets/pdf/jp/Orizeaux JAP.pdf"}}')
    },
    3451: function(e, t, i) {
        "use strict";
        var a = i("6590")
          , s = i.n(a);
        s.a
    },
    "34dd": function(e, t, i) {
        e.exports = i.p + "img/terrainData1.6ab6692c.jpg"
    },
    "39f9": function(e, t, i) {},
    "3c9e": function(e, t, i) {
        e.exports = i.p + "img/label.a34324f3.jpg"
    },
    "3d5c": function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "footer"
            }, [i("router-link", {
                attrs: {
                    to: {
                        name: "Home"
                    }
                }
            }, [i("span", {
                staticClass: "prepend"
            }, [e._v(e._s(e.$t("common.discover")))]), i("CanvasText", {
                attrs: {
                    captions: [e.$t("common.thePlots")],
                    mobile: {
                        fontSize: 1.625
                    },
                    color: "#c23d2a"
                }
            })], 1), i("span", {
                staticClass: "decoration"
            }), i("div", {
                staticClass: "notice",
                domProps: {
                    innerHTML: e._s(e.$t("common.alcoholnotice"))
                }
            })], 1)
        }
          , s = []
          , n = i("caff")
          , r = {
            name: "DiscoverFooter",
            components: {
                CanvasText: n["a"]
            }
        }
          , o = r
          , l = (i("73ba"),
        i("2877"))
          , u = Object(l["a"])(o, a, s, !1, null, "3f4d506d", null);
        t["a"] = u.exports
    },
    "3d7d": function(e, t, i) {},
    "43bc": function(e, t, i) {
        e.exports = i.p + "img/title.81f83317.png"
    },
    "43f3": function(e) {
        e.exports = JSON.parse('{"slug":"les-grands-champs","name":"LES GRANDS CHAMPS","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Dark brown.</p><p>Moisture / The hillside allows excess water to drain off. Average moisture. Limestone clays and Thanetian sands on Campanian chalk.</p><p>Exposure / South - South East Soil</p>","description":"<p>These vines retain enough moisture to excite the curiosity of the roots at all soil depths.<br/>This soil is representative of the soils of the Abbey of Saint Thierry\'s lands.<br/>An exposure facing Reims, with a slope that is steep enough to allow the natural extraction of water by runoff in addition to infiltration.<br/>The privileged sun exposure of this south-facing slope gilds the grapes when the phenolic ripeness approaches. We often let the grasses develop during the growing season, which allows an optimal competition between the plants, favouring soil stability as well as vertical rooting.</p><p>These clay-limestone soils mixed with sand and silt regulate excess vigour through the presence of the chalk, and the effect of the hillside. The grapes from Les Grands Champs are remarkable, as are the wines from this land, formerly worked by the Benedictine monks of the Abbey of Saint Thierry.</p>","details":"<p>Total Area / 4ha53a70ca</p><p>Chartogne-Taillet Area / 61a98ca</p><p>Varieties / 39% Chardonnay / 61% Meunier</p><p>Year of planting / 1969 - 2003</p><p>Clay characteristics / Illite / Vermiculites / 390 gr (m2/gr)</p>","image":"/assets/images/raisins/raisin-noir04.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"Permeable clays and<br/>Thanetian sands","caption":""},{"name":"Campanian Chalk","caption":"-1m30cm"}]}]},"wine":{"name":"Les Grands Champs","specifications":"<p>Blends / Saint-Anne</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-column","text":"<p>Wines from Les Grands Champs provoke salivation at the cheeks, with a chalky texture that coats the entire palate with the unique bitterness of these chalky vines. The saltiness perfectly complements the richness of the wines made from wonderfully ripe grapes from this plot, with its ideal exposure and slope.</p>"},{"type":"block-highlight","text":"Wines from Les Grands Champs open up well in various containers"},{"type":"block-paragraph","text":"<h3>FERMENTATION</h3><p>Fermentations quickly reveal the limestone structure of wines from Les Grands Champs.<br/>The southern slopes of Saint Thierry look out over Reims and the Reims Mountain, just behind the city. The presence of chalk in the subsoil as well as the slopes provide this vine with a calcareous, mineral temperament.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-grands-champs.jpg"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Les Grands Champs open up well in various containers. They mature without being affected by external influences, and are not influenced by the uncertainties or qualities of a particular vintage.The chalk nourishes these vines which, with reasonable yields, produce a wine with a Champagne temperament approaching that of the wines from the Grands Crus villages of the Champagne region.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Saint Thierry.pdf"}}')
    },
    4587: function(e) {
        e.exports = JSON.parse('{"slug":"les-barres","name":"LES BARRES","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Light / Yellowish-Beige</p><p>Moisture / Dry, very well-draining soil</p><p>Exposure / South West</p>","description":"<p>The Les Barres vineyard is situated on the village\'s most well-draining soils.<br/>The sands have allowed the vines to be protected from Phylloxera, so we can have some Meunier vines and a new planting of Chardonnay without grafted rootstock.</p><p>This soil requires the wine grower to minimise, to the extent possible, the number of times he passes by to work it.<br/>The sands compact easily, and this soil is too fine to be ploughed.<br/>We therefore limit the working of this soil to a strict minimum, (before winter under the base of the vines), then leave the grass in place to preserve the soil\'s structure and bearing capacity. The grass is cut exclusively by hand (with a string trimmer) to limit compaction, while plants are pruned with the objective of promoting a good distribution of the sap flow (preservation of the plants over time).<br/>The appearance of various natural grasses helps me understand the soil\'s health and condition; we then adapt our intervention to the message delivered by nature.</p><p>This plot\'s yields are very low.</p>","details":"<p>Total Area / 4ha77a35ca</p><p>Chartogne-Taillet Area / 1ha37a60ca</p><p>Varieties / 100% Meunier</p><p>Year of planting / 1970 - 2008</p><p>Type of clay / Illite 192 m2 / gr</p>","image":"/assets/images/bouteilles/les-barres.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/les-barres-sol.png","levels":[{"name":"Thanetian limestone sands","caption":""},{"name":"Campanian Chalk","caption":"-1,5m"}]}]},"wine":{"name":"Les Barres","specifications":"<p>Grape varieties / 100% Meunier</p><p>Colour / Pale Orange with brilliant lights on the edges</p>","packshot":"/assets/images/wines/packshot/les-barres.png","content":[{"type":"block-column","text":"<p>Les Barres yields wines with textures that vary over time. At first, in their youth, the wines are rich, spherical, enveloping, almost sticky (reminiscent of grape skins from non-grafted plants).<br/>Over time, the structure becomes more refined and elongated, the saltiness appears, revealing a supple, creamy and ample wine.</p>"},{"type":"block-highlight","text":"Les Barres yields wines with textures that vary over time"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Les Barres require special attention and understanding. Meunier grapes produce wine that often presents a texture and aromas that are imposing, masking the saltiness of the terroir. The wines are processed in 228 litre barrels with an elevated oxygen exchange. This promotes the wine\'s mineralisation, which slowly makes the varietal aromas disappear in favour of saltiness (the stable fraction of the wine).<br/>No topping-up is done from fermentation until March (approximately), in order to promote this mineralisation. Under its veil, the wine protects itself from the oxygen, thus revealing the salty charm of the chalky soils.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-barres.jpg"},{"type":"block-paragraph","text":"<h3>MATURATION</h3><p>Les Barres is an atypical Champagne, with a distinctive evolution. It absorbs oxygen and opens up, while in a dark, shady, almost humid atmosphere. The aromas are not frank; they are marked by notes of undergrowth and humus.<br/>The saline texture broadens as it ages, leaving almost no room for the organic fraction and the delicate orange fruit that could be perceived during the first years of this Champagne.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Les Barres.pdf"}}')
    },
    "45ee": function(e, t, i) {
        e.exports = i.p + "img/clouds.4d9eaa36.jpg"
    },
    "46c1": function(e, t, i) {
        e.exports = i.p + "img/title.944fa6d3.png"
    },
    4795: function(e) {
        e.exports = JSON.parse('{"wines":[{"slug":"sainte-anne","name":"Sainte-Anne","title":"SAINTE-ANNE","type":"assemblage","encepagement":"Chardonnay / Pinot Noir / Meunier","plantation":"1970 - 2009","exposition":"Sud / Sud -Est","fichetechnique":"/assets/pdf/fr/Sainte Anne.pdf","packshot":"/assets/images/wines/packshot/saint-anne.png","lieudit":"MERFY","specifications":"<p>Cépages / Pinot Noir - Chardonnay</p><p>Colour / souvent pale, avec des reflets limpides orangés</p>","content":[{"type":"block-column","text":"<p>La cuvée Sainte Anne est la traduction sensorielle des vins issus des différents sols du village de Merfy. Chaque parcelle du village donne une partie de son identité pour «créer» cette cuvée. Les textures de Sainte Anne se dévoilent sur toute la longueur de bouche. Souvent opulent en début de bouche, puis les sels des sables provoquent une amertume salivante. La fin de bouche laisse une trame serrée qui rappelle l’origine des vins de Champagne.</p>"},{"type":"block-paragraph","text":"<h3>L’ASSEMBLAGE</h3><p>Sainte Anne est un assemblage de 50% de Chardonnay, et 50% de cépages noirs (majorité de Pinot Noir). Dans la majorité des années de vendanges.</p>"},{"type":"block-paragraph","text":"<h3>LES VINS DE RÉSERVE</h3><p>Souvent composée à 50% des vins de l’année qui précède la mise en bouteille, et 50% de vins plus anciens, de 2 à 5 années de réserve.</p>"},{"type":"block-highlight","text":"Souvent composée à 50% des vins de l’année qui précède la mise en bouteille, et 50% de vins plus anciens, de 2 à 5 années de réserve."},{"type":"block-paragraph","text":"<h3>L\'ÉLEVAGE</h3><p>Sainte Anne est désormais élevée et vinifiée en fûts de 228, 350 et 2000 litres. Une petite partie de ce Champagne a vieilli en cuves, majoriatairement les vins de réserve. Les Champagnes de notre village ont besoin d’oxygène pour délivrer le message du lieu. Chaque parcelle est vinifiée différemment (ouillage ou non, fûts de différentes origines etc). Cela permet d’obtenir de cette période de vie de nos Champagnes des caractères uniques et identifiables. Une fois l’élevage de chaque parcelle fini, nous assemblons ces origines du village pour délivrer un vin qui se veut le plus représentatif des vins de Merfy. La texture cristalline des vins issus des terroirs sablonneux calcaires de Merfy est recherchée, pour conserver l’identité particulière de notre village.</p>"},{"type":"block-image","url":"/assets/images/cuve/saint-anne.jpg"},{"type":"block-column","heading":"<h3>LA CHAMPAGNISATION</h3>","text":"<p>Aucune filtration n’est acceptée par les vins. La filtration modifierait trop les textures des vins et donc l’équilibre gras / sels en bouche. Les vins de Sainte Anne sont des assemblages de parcelles, mais aussi des assemblages d’années. Les vins de vendanges plus anciennes apaisent et adoucissent le caractère vif et fougueux des plus jeunes vins. Après le vieillissement en cave, Sainte Anne est dégorgée avec un dosage Brut qui varie peu d’année en année. Les essais de dosage désigent un besoin de 4-7 grammes de sucre pour ré-équilibrer l’aggressivité et la vigueur des bulles, sans cacher ou engraisser le vin et sa densité. La liqueur utilisée est une liqueur réalisée avec le même vin que celui de la cuvée qui est dégorgée.</p>"}]},{"slug":"le-rose","name":"Le Rosé","title":"LE ROSÉ","type":"assemblage","encepagement":"Pinot Noir & Chardonnay","plantation":"1970 - 2009","exposition":"Sud / Sud -Est","fichetechnique":"/assets/pdf/fr/Le Rose.pdf","packshot":"/assets/images/wines/packshot/rose.png","lieudit":"AVIZE","specifications":"<p>Encépagement / Pinot Noir - Chardonnay</p><p>Sa Couleur / Varie de l’Orange «pastel» au rouge clair</p>","content":[{"type":"block-column","text":"<p>Le Rosé est une cuvée d’assemblage, entre certains vins vinifiés en blanc (majoritairement les sols profond et calcaires du Sud de Merfy), avec un vin rouge qui provient de la parcelle «Oriseaux». Ce Champagne touche la bouche par une texture soyeuse, douce puis salivante. Il s’agit du Champagne le plus serein et festif de la maison et du village.</p>"},{"type":"block-paragraph","text":"<h3>L’ASSEMBLAGE</h3><p>Assemblage de Chardonnay, et de cépages noirs (majorité de Pinot Noir). Dans la majorité des années de vendanges.</p>"},{"type":"block-image","url":"/assets/images/cuve/le-rose.jpg"},{"type":"block-paragraph","text":"<h3>LES VINS DE RÉSERVE</h3><p>Nous privilégions une seule année pour cette cuvée qui n’est pas assemblée avec des vins de réserve.</p>"},{"type":"block-highlight","text":"Il s’agit d’un vin provenant d’une seule vendange, sans être millésimé."},{"type":"block-paragraph","text":"<h3>L\'ÉLEVAGE</h3><p>L’élevage de cette cuvée se fait en petits fûts de 228 litres pour le rouge, et souvent 350 litres pour les vins blancs de Chardonnay et Pinot.</p>"}]},{"slug":"orizeaux","name":"Orizeaux","title":"ORIZEAUX","type":"monocépage","encepagement":"100% pinot noir","plantation":"1970","exposition":"double - sud et nord","fichetechnique":"/assets/pdf/fr/Orizeaux.pdf","parcelle":"les-oriseaux","packshot":"/assets/images/wines/packshot/orizeaux.png"},{"slug":"les-barres","name":"Les Barres","title":"LES BARRES","type":"monocépage","encepagement":"Meunier / Pinot Noir / Chardonnay","plantation":"1970 - 2008","exposition":"100% Meunier","fichetechnique":"/assets/pdf/fr/Les Barres.pdf","parcelle":"les-barres","packshot":"/assets/images/wines/packshot/les-barres.png"},{"slug":"chemin-de-reims","name":"Chemin de Reims","title":"CHEMIN DE REIMS","canvasTitle":["CHEMIN DE","REIMS"],"type":"monocépage","encepagement":"100% chardonnay","plantation":"1980 - 1995 - 2011","exposition":"Sud - Sud Est","fichetechnique":"/assets/pdf/fr/Chemin de reims.pdf","parcelle":"le-chemin-de-reims","packshot":"/assets/images/wines/packshot/chemin-de-reims.png"},{"slug":"les-couarres","name":"Les Couarres","title":"LES COUARRES","type":"monocépage","encepagement":"Pinot Noir / Chardonnay","plantation":"1970 - 2009","exposition":"Sud , faible pente","fichetechnique":"/assets/pdf/fr/Les Couarres.pdf","parcelle":"les-couarres","packshot":"/assets/images/wines/packshot/les-couarres.png"},{"slug":"heurtebise","name":"Heurtebise","title":"HEURTEBISE","type":"monocépage","encepagement":"100% Chardonnay","plantation":"1972 - 1985 - 1986 - 2010","exposition":"Sud","fichetechnique":"/assets/pdf/fr/Heurtebise.pdf","parcelle":"les-heurtes-bises","packshot":"/assets/images/wines/packshot/heurtebise.png"}]}')
    },
    4859: function(e) {
        e.exports = JSON.parse('{"slug":"beaux-sens","name":"BEAUX SENS","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / 明るい、又は薄い黄色がかったベージュ</p><p>保水性 / 中程度の透水性を持った（コンパクトな石灰岩）<br/>チョーク層の上にある水捌けのよい砂質の土壌</p><p>斜面の向き / 傾斜の少ない南</p>","description":"<p>レ・ボー・サンスの畑は 深さ1メートルほどの所にチョーク層が現れるサネティアン期の砂質の土壌に位置しています。砂質の土壌は フィロキセラの被害を免れ、接ぎ木無しなしのムニエの古木、ヴィエイユ・ヴィーニュが残っています。</p><p>この手間のかかる区画において サネティアン期の砂質の土壌で畑仕事をするためには 特別な手入れが必要です。大変乾いた水捌けの良い土地で 生育がとても早く、勢いよく伸びていきます。<br/>隣の≪レ・バール≫の区画より土壌は保水性があるので 草もあっという間に伸びます。レ・ボー・サンスの石灰の土壌が植物の生育を早めるため、ブドウの熟成も非常に早くなります。ヴィニョロンは 収穫の開始日を決定するとき収穫が 遅れないように気を付けなければなりません。<br/>≪レ・ボー・サンス≫のブドウは 大変傷みやすく、熟成しすぎたブドウは すぐ酸化したり腐敗が始まってしまったりするので 醸造には向きません。土壌の栄養分が早くミネラル化しないように 土壌は草生栽培が行われます。土壌の養分が直ぐにミネラル化しないように気を付けます。<br/>この区画のムニエの1ヘクタール当たりの収量は大変少なくなります。</p>","details":"<p>畑総面積 / 3ha24a10ca</p><p>現耕作面積 / 0ha27a12ca</p><p>栽培品種 / ムニエ 100%</p><p>植樹された年 / 1974年、2013年</p><p>畑の向き / 南向き</p><p>粘土のタイプ / バーミキュライト含有量400m2 / gr</p><p>土壌の構成 / 砂質 74%、粘土質6% 、泥土19%</p>","image":"/assets/images/raisins/raisin-noir01.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/les-barres-sol.png","levels":[{"name":"サネティアン期の砂質","caption":"深さ1メートルの"},{"name":"カンパニア期のチョーク層","caption":""}]}]},"wine":{"name":"Les Beaux Sens","specifications":"<p>ブレンド / Saint-Anne<br/>色合い / ほのかにローズ色がかった明るいオレンジ</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-column","text":""},{"type":"block-highlight","text":""},{"type":"block-image","url":"/assets/images/cuve/les-beaux-sens.jpg"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>レ・ボー・サンスのワインにはいつも驚かされます。時間が変わるにつれ 何度もプロフィールが変わっていきます。<br/>ヴィニョロンはテイスティングの際に 固定観念を持たずに臨まなければなりません。<br/>ワインは 豊かで開いているかと思えば 還元して閉じてしまうこともあり、その日その日で味わいが変化していきます。<br/>酸化の影響を非常に受けやすく、自ら膜を張ることによって、又は適量のSO2を添加して、酸化から守らなければなりません。この将来のシャンパーニュはミネラル化を好みますが、それは 時間をかけることで若い頃に持っていた性格を失うこと、言い換えれば人生の経験を積むことで生まれる安定なのです。</p>"}],"fichetechnique":"/assets/pdf/en/Les Beaux Sens ENG.pdf"}}')
    },
    4881: function(e, t, i) {
        e.exports = i.p + "img/title.9d3e54b2.png"
    },
    "49ce": function(e, t, i) {
        "use strict";
        i("c975"),
        i("a434");
        var a = i("b85c")
          , s = i("d4ec")
          , n = i("bee2")
          , r = function() {
            function e() {
                Object(s["a"])(this, e),
                this.width = window.innerWidth,
                this.height = window.innerHeight,
                this.delay = 300,
                this.optimizePhone = !1,
                this.optimizeRefresh = !0,
                this._onResizedCb = [],
                window.addEventListener("resize", this._onResize.bind(this), !1)
            }
            return Object(n["a"])(e, [{
                key: "addOnResized",
                value: function(e) {
                    return this.removeOnResized(e),
                    this._onResizedCb.push(e),
                    !0
                }
            }, {
                key: "removeOnResized",
                value: function(e) {
                    var t = this._onResizedCb.indexOf(e);
                    return t > -1 && (this._onResizedCb.splice(t, 1),
                    !0)
                }
            }, {
                key: "dispatch",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.width
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.height;
                    this._dispatchResized(e, t)
                }
            }, {
                key: "_onResize",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                      , i = Date.now();
                    if (this.optimizeRefresh)
                        if (clearTimeout(this._resizedTo),
                        t || this._lastResized && i - this._lastResized > this.delay - 1) {
                            var a = document.body.clientWidth
                              , s = window.innerHeight
                              , n = this.width
                              , r = this.height;
                            this.optimizePhone && a !== n || Math.abs(s - r),
                            this._dispatchResized(a, s)
                        } else
                            this._resizedTo = setTimeout(this._onResize.bind(this), this.delay);
                    else {
                        var o = document.body.clientWidth || window.innerWidth
                          , l = window.innerHeight;
                        this._dispatchResized(o, l)
                    }
                    this._lastResized = i
                }
            }, {
                key: "_dispatchResized",
                value: function(e, t) {
                    this.width = e,
                    this.height = t;
                    var i, s = Object(a["a"])(this._onResizedCb);
                    try {
                        for (s.s(); !(i = s.n()).done; ) {
                            var n = i.value;
                            n(e, t)
                        }
                    } catch (r) {
                        s.e(r)
                    } finally {
                        s.f()
                    }
                }
            }]),
            e
        }()
          , o = r
          , l = new o;
        t["a"] = {
            created: function() {
                this.resize = l
            },
            mounted: function() {
                this.onResized && (this._mixinOnResizedDisptacher = this.onResized.bind(this),
                this.resize.addOnResized(this._mixinOnResizedDisptacher))
            },
            destroyed: function() {
                this._mixinOnResizedDisptacher && this.resize.removeOnResized(this._mixinOnResizedDisptacher)
            }
        }
    },
    "4ba8": function(e, t, i) {},
    "4d01": function(e) {
        e.exports = JSON.parse('{"slug":"les-couarres","name":"LES COUARRES","lieudit":"Merfy","ground":{"specifications":"<p>土壌の色 / こげ茶</p><p>保水性 / 所有している畑の中でも最も湿った土地</p><p>斜面の向き / 南向きの傾斜の少ない斜面</p>","description":"<p>レ・クアールの畑はメルフィのテロワールの中央に位置し、村の中でも水捌けの悪いところにあります。<br/>この区画では ２種類の土壌が確認されています。石灰華と粘土です。</p><p>この２つのタイプの区画では 畑仕事はほぼ同じように行っています。隣接する他の区画より保水性があり、この≪クアール≫で栽培されているブドウの樹には水不足が防げるだけの十分な水分が保たれます。<br/>村の他の畑の土壌が早く乾き、雨が降った後でも畑仕事が直ぐ始められるのに対し、<br/>この≪レ・アール≫の畑では、忍耐強く待たなければなりません。そしてこの畑の地理的条件のせいで 霜の被害が出やすい区画でもあります。</p><p>区画の1ヘクタール当たりのブドウの収量は 私たちのメゾンの中でも最も多い区画の1つです。それで 芽かきを多めに行ったり、2本に1本の割合で葉と房のついた枝を切り落としたりしながら 収量を抑えるようにしています。</p>","details":"<p>畑総面積 / 3ha71a20ca 現耕作面積 : 1ha94a15ca</p><p>栽培品種 / ピノ・ノワール、シャルドネ</p><p>植樹された年 / 1970年、2009年</p><p>畑の向き / 南 又は南東向き</p><p>粘土の粒度測定 / 272 g</p>","image":"/assets/images/bouteilles/les-couarres.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/couarres-chateau.png","levels":[{"name":"砂質と粘土質","caption":"40センチの深さ"},{"name":"石灰華","caption":"80センチの深さ"}]},{"title":"土壌","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"サネティアン期とヤプレシアン期の砂質石灰岩","caption":"40センチの深さ"},{"name":"粘土質 （堆積岩）","caption":"1,2メートルの深さ"}]}]},"wine":{"name":"Les Couarres","specifications":"<p>色合い / ときに黄金に輝く、明るい透明感のある色合い</p>","packshot":"/assets/images/wines/packshot/les-couarres.png","content":[{"type":"block-column","text":"<p>≪レ・クアール≫の区画のワインは 時と共に花開きます。樽熟成を行う際には 厳格な管理が必要になるワインでしょう。非常に繊細で粘土の粘着性を持ち合わせている口当たりなので、熟成のとき あまり早い段階で酸化が始まらないように細心の注意を払わなければなりません。レ・クアールのワインは 口の中に広がるふっくらとした粘着性、そして穏やかな酸味が長く続く フレッシュな余韻が特徴です。<br/>主に小石状に広がる石灰華の層の上に粘土質の異なった土壌が見られ、よりフレッシュで 粘土質のまろやかさを持ち合わせた味わいとなります。</p>"},{"type":"block-highlight","text":"このワインを熟成している樽では 定期的にウイヤージュを行っています。"},{"type":"block-image","url":"/assets/images/cuve/les-couarres.jpg"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>≪レ・クアール≫のワインは 間違いなく怠け者です。彼らは私たちがただ傍にいて 酸化が早く起こらないように、そして荒海にのまれてしまわないように見張っていれば それでいいのです。それは 圧搾を行う時から必要らしく、また樽熟成は 2年から3年使用した木樽を用い、カーブの中で湿度の高い場所を選んで行います。<br/>空気と過剰に接することで ワインが弱ってしまうので 天使の分け前（蒸散）を出来る限り防ぐようにしています。<br/>このワインを熟成している樽では 定期的にウイヤージュを行っています。</p>"}],"fichetechnique":"/assets/pdf/jp/Les Couarres JAP.pdf"}}')
    },
    "4e5d": function(e, t, i) {
        "use strict";
        var a = i("cb87")
          , s = i.n(a);
        s.a
    },
    "4f51": function(e, t, i) {
        e.exports = i.p + "img/label.d7213123.jpg"
    },
    "4f73": function(e) {
        e.exports = JSON.parse('{"slug":"les-grands-champs","name":"LES GRANDS CHAMPS","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 /こげ茶</p><p>保水性 / 斜面の傾斜が 過度な水分の浸透を防ぐ<br/>カンパニア期のチョーク層の上に 中程度の保水性を持つ粘土石灰岩とサネティアン期の砂質。</p><p>斜面の向き / 南、又は南東向き</p>","description":"<p>この畑の土壌は適度に湿度を保つことができるので 土壌のあらゆる深さにまでブドウの樹の根が張っていきます。</p><p>この地の土壌は サン・ティエリー修道院の所有していた畑を代表的する土壌です。ランスの街を眺める適度な傾斜を持った斜面は 浸透水の流れによって自然な水分調節が可能になります。<br/>真南に向いた斜面も日射量に恵まれ、ブドウの成熟の時期にさしかかると ブドウが金色に染まっていきます。私たちはブドウを栽培している時期には草生栽培を行い、ブドウの樹と競合させています。そして土壌の手入れ、かつブドウの樹の根が垂直方向に真っすぐ伸びるよう促しています。砂と泥土が混じった粘土質石灰岩の土壌は チョークと丘陵と いう地質条件のせいで活力に満ちたブドウを調節してくれます。<br/>レ・グラン・シャンのブドウは大変素晴らしく、かつてサン・ティエリー修道院のベネディクト派の修道士たちによって育まれてきたワインの味わいを今もなお受け継いでいます。</p>","details":"<p>畑総面積 / 4ha53a70ca</p><p>現耕作面積 / 61a98ca</p><p>栽培品種 / シャルドネ39% 、ムニエ61%</p><p>植樹された年 / 1969年2003年</p><p>粘土のタイプ / イライト、バーミキュライト含有量 390 gr (m2/gr)</p>","image":"/assets/images/raisins/raisin-noir04.jpg","underground":[{"title":"地表：ブドウ栽培","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"よく水を吸う粘土とサネティアン期の砂質","caption":""},{"name":"カンパニア期のチョーク層","caption":"130センチの深さ"}]}]},"wine":{"name":"Les Grands Champs","specifications":"<p>ブレンド / Saint-Anne</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-column","text":""},{"type":"block-highlight","text":""},{"type":"block-paragraph","text":"<h3>発酵</h3><p>レ・グラン・シャンのワインは 頬の辺りから唾液がにじみ出て、石灰岩のブドウの畑固有の苦味が口に中をまとうクリーミーな口当たりを特徴とするワインです。この区画は斜面の向きや角度がブドウ栽培に適しており、理想的に熟したブドウからは 豊満さと完璧に調和した塩味が感じられます。</p>"},{"type":"block-image","url":"/assets/images/cuve/les-grands-champs.jpg"},{"type":"block-paragraph","text":"<h3>発酵</h3><p>発酵を行うと 直ぐにグラン・シャンのワインの織りなす石灰の特徴が顕になってきます。ランスの直ぐ後ろに位置し、ランスとモンターニュ・ド・ランス方面を向いたサン・ティエリー丘陵の南向きの斜面。下層土のチョークと丘陵からもたらされるチョーキーでミネラルな性格が際立っています。</p>"}],"fichetechnique":"/assets/pdf/jp/Saint Thierry JAP.pdf"}}')
    },
    "51ad": function(e) {
        e.exports = JSON.parse('{"slug":"les-fontaines","name":"LES FONTAINES","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / 茶色、ベージュ、又は白</p><p>保水性 / 中程度の保水性を持つ土壌 （水捌けのよい石灰岩）</p><p>斜面の向き / 東、又は西向き</p>","description":"<p>レ・フォンテーヌの畑は チョーク層の土壌の上にあり、大変水捌けのよい土地に根を張っています。地表の砂質 はその石灰と混ざり、ブドウの実の果皮は薄くしなやかで、湿気に耐えうることができるので、収穫の際のブドウの痛みも少なくて済みます。</p><p>1ヘクタール当たりのブドウの収穫量は少ないので、毎年この区画のブドウの圧搾は1度だけ行われます。</p>","details":"<p>畑総面積 / 1ha38a90ca</p><p>現耕作面積 / 81 ares 90 ca</p><p>栽培品種 / ムニエ、又はピノ・ノワール</p><p>植樹された年 / 1971年、 1972年</p><p>畑の向き / 東又は西向き</p><p>粘土のタイプ / イライト含有量 (186 m2/gr)</p>","image":"/assets/images/raisins/raisin-noir03.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"泥土又は砂質の土壌<br/>炭酸カルシウムで覆われたギャラリー","caption":"40センチの深さ"},{"name":"浸透水の凍結による崩壊でできた石灰と砂岩","caption":"100センチの深さ"}]}]},"wine":{"name":"Les Fontaines","specifications":"<p>ブレンド / Saint-Anne<br/>色合い / 暖かい年は サーモンがかった金色</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"レ・フォンテーヌのワインは 角ばっていて 粘着性のある味わいです。"},{"type":"block-paragraph","text":"<p>レ・フォンテーヌのワインは 角ばっていて 粘着性のある味わいです。このワインの渋みと塩の風味は 目を見張るものがあります。ムニエに見られるまろやかな特徴は 滅多に感じられません。</p>"},{"type":"block-image","url":"/assets/images/cuve/les-fontaines.jpg"},{"type":"block-paragraph","text":"<h3>樽熟成</h3><p>レ・フォンテーヌのワインは 元来持っている石灰の特徴を引き出すため 2年から4年に渡って使用された中古の木樽を用いて熟成が行われます。タンニンの味わいを付けたり 還元剤として用いられる新樽、又はタンクを避け、空気に触れさせながらゆっくりと熟成が行われなければなりません。</p>"}],"fichetechnique":"/assets/pdf/en/Les Fontaines ENG.pdf"}}')
    },
    "52d2": function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-Loop-Parcelle-FADE-201009.c21d4edd.mp3"
    },
    "54e0": function(e, t, i) {
        e.exports = i.p + "img/title.66edfb28.png"
    },
    "551d": function(e, t, i) {
        e.exports = i.p + "img/hotelLabel.19902459.png"
    },
    "56d7": function(e, t, i) {
        "use strict";
        i.r(t);
        i("e260"),
        i("e6cf"),
        i("cca6"),
        i("a79d");
        var a = i("2b0e")
          , s = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                attrs: {
                    id: "app"
                }
            }, [i("Scene", {
                ref: "scene"
            }), i("transition", {
                attrs: {
                    css: !1,
                    mode: "out-in"
                },
                on: {
                    enter: e.handleEnter,
                    leave: e.handleLeave
                }
            }, [i("router-view", {
                key: e.viewKey,
                ref: "view"
            })], 1), "Home" !== e.$route.name && "PageNotFound" !== e.$route.name ? i("MenuCta") : e._e(), i("transition", {
                attrs: {
                    css: !1
                },
                on: {
                    enter: e.handleEnterMenu,
                    leave: e.handleLeaveMenu
                }
            }, [e.$root.menuOpened ? i("MainMenu", {
                ref: "menu"
            }) : e._e()], 1), i("transition", [e.cookieAccepted ? e._e() : i("CookieBanner")], 1)], 1)
        }
          , n = []
          , r = (i("99af"),
        i("4160"),
        i("b0c0"),
        i("159b"),
        i("cffa"))
          , o = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("a", {
                staticClass: "main-cta",
                on: {
                    click: e.handleClick
                }
            }, [i("Letters", {
                attrs: {
                    caption: e.$t("common.menu")
                }
            })], 1)
        }
          , l = []
          , u = i("63fd")
          , h = {
            name: "MainCta",
            components: {
                Letters: u["a"]
            },
            methods: {
                handleClick: function() {
                    this.$root.menuOpened = !0
                }
            }
        }
          , c = h
          , d = (i("3451"),
        i("2877"))
          , m = Object(d["a"])(c, o, l, !1, null, "cb137e28", null)
          , p = m.exports
          , g = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "main-menu"
            }, [i("MapCta"), i("div", {
                staticClass: "background"
            }), i("a", {
                staticClass: "close fade-helper",
                on: {
                    click: e.normalClose
                }
            }, [e._v(e._s(e.$t("common.close")))]), i("img", {
                staticClass: "main-logo fade-helper",
                attrs: {
                    src: "/assets/images/logo-2x.png"
                }
            }), i("div", {
                staticClass: "main-section"
            }, [i("div", {
                staticClass: "indicator"
            }, [i("div", {
                ref: "thumb",
                staticClass: "thumb"
            })]), i("a", {
                attrs: {
                    to: {
                        name: "Home"
                    }
                },
                on: {
                    click: function(t) {
                        return e.close(t, 0, {
                            name: "Home"
                        })
                    },
                    mouseleave: function(t) {
                        return e.handleMouseLeave(0)
                    },
                    mouseenter: function(t) {
                        return e.handleMouseEnter(0)
                    }
                }
            }, [e._v(e._s(e.$t("common.thePlots")))]), i("a", {
                attrs: {
                    to: {
                        name: "Vin",
                        params: {
                            slug: "sainte-anne"
                        }
                    }
                },
                on: {
                    click: function(t) {
                        return e.close(t, 1, {
                            name: "Vin",
                            params: {
                                slug: "sainte-anne"
                            }
                        })
                    },
                    mouseleave: function(t) {
                        return e.handleMouseLeave(1)
                    },
                    mouseenter: function(t) {
                        return e.handleMouseEnter(1)
                    }
                }
            }, [e._v(">" + e._s(e.$t("common.theWines")))]), i("a", {
                attrs: {
                    to: {
                        name: "History"
                    }
                },
                on: {
                    click: function(t) {
                        return e.close(t, 2, {
                            name: "History"
                        })
                    },
                    mouseleave: function(t) {
                        return e.handleMouseLeave(2)
                    },
                    mouseenter: function(t) {
                        return e.handleMouseEnter(2)
                    }
                }
            }, [e._v(">" + e._s(e.$t("common.history")))]), i("a", {
                attrs: {
                    to: {
                        name: "Contact"
                    }
                },
                on: {
                    click: function(t) {
                        return e.close(t, 3, {
                            name: "Contact"
                        })
                    },
                    mouseleave: function(t) {
                        return e.handleMouseLeave(3)
                    },
                    mouseenter: function(t) {
                        return e.handleMouseEnter(3)
                    }
                }
            }, [e._v(">" + e._s(e.$t("common.contact")))]), i("CanvasText", {
                ref: "canvasText",
                attrs: {
                    captions: [this.$t("common.thePlots"), this.$t("common.theWines"), this.$t("common.history"), this.$t("common.contact")],
                    stase: !0,
                    "font-size": 4.5,
                    "text-align": "left",
                    shifting: 1,
                    mobile: {
                        fontSize: 1.875,
                        letterSpacing: .2
                    },
                    highlight: !0,
                    "die-on-leave": !0
                }
            })], 1), i("div", {
                staticClass: "footer fade-helper"
            }, [i("div", {
                staticClass: "mobile"
            }, [i("div", {
                staticClass: "row-mobile"
            }, [i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: "LegalNotice"
                    }
                },
                nativeOn: {
                    click: function(t) {
                        return function(t) {
                            return e.normalClose(t)
                        }(t)
                    }
                }
            }, [e._v(e._s(e.$t("legals.title")))])], 1), e._m(0), e._m(1), e._m(2)]), i("div", {
                staticClass: "sect"
            }, [i("div", {
                staticClass: "langs"
            }, [i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: e.$route.name,
                        params: Object.assign({}, e.$route.params, {
                            locale: "fr"
                        })
                    }
                },
                nativeOn: {
                    click: function(t) {
                        return function(t) {
                            return e.normalClose(t)
                        }(t)
                    }
                }
            }, [e._v("FR")]), i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: e.$route.name,
                        params: Object.assign({}, e.$route.params, {
                            locale: "en"
                        })
                    }
                },
                nativeOn: {
                    click: function(t) {
                        return function(t) {
                            return e.normalClose(t)
                        }(t)
                    }
                }
            }, [e._v("EN")]), i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: e.$route.name,
                        params: Object.assign({}, e.$route.params, {
                            locale: "jp"
                        })
                    }
                },
                nativeOn: {
                    click: function(t) {
                        return function(t) {
                            return e.normalClose(t)
                        }(t)
                    }
                }
            }, [e._v("JP")])], 1), i("a", {
                staticClass: "underline desktop",
                on: {
                    click: function(t) {
                        return e.close(t, 2, {
                            name: "LegalNotice"
                        })
                    }
                }
            }, [e._v(e._s(e.$t("legals.title")))]), i("a", {
                staticClass: "made underline desktop",
                attrs: {
                    href: "https://immersive-g.com/",
                    target: "_blank"
                }
            }, [e._v("Website by Immersive Garden")])]), e._m(3)])], 1)
        }
          , v = [function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "row-mobile"
            }, [i("a", {
                staticClass: "underline",
                attrs: {
                    href: "https://www.facebook.com/Chartogne-Taillet-Champagne-1127780083929146",
                    target: "_blank"
                }
            }, [e._v("FACEBOOK")])])
        }
        , function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "row-mobile"
            }, [i("a", {
                staticClass: "underline",
                attrs: {
                    href: "https://instagram.com/chartognetaillet?igshid=n2q8shjqt9i0",
                    target: "_blank"
                }
            }, [e._v("INSTAGRAM")])])
        }
        , function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "row-mobile"
            }, [i("a", {
                staticClass: "made underline",
                attrs: {
                    href: "https://immersive-g.com/",
                    target: "_blank"
                }
            }, [e._v("Website by Immersive Garden")])])
        }
        , function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "sect sharing desktop"
            }, [i("a", {
                staticClass: "underline",
                attrs: {
                    href: "https://www.facebook.com/Chartogne-Taillet-Champagne-1127780083929146",
                    target: "_blank"
                }
            }, [e._v("FACEBOOK")]), i("a", {
                staticClass: "underline",
                attrs: {
                    href: "https://instagram.com/chartognetaillet?igshid=n2q8shjqt9i0",
                    target: "_blank"
                }
            }, [e._v("INSTAGRAM")])])
        }
        ]
          , f = i("caff")
          , b = i("0002")
          , x = {
            name: "MainMenu",
            components: {
                CanvasText: f["a"],
                MapCta: b["a"]
            },
            data: function() {
                return {
                    idx: -1
                }
            },
            computed: {
                defaultIdx: function() {
                    return "Home" === this.$route.name || "Home" === this.$route.meta.belongTo ? 0 : "Vin" === this.$route.name || "Vin" === this.$route.meta.belongTo ? 1 : "History" === this.$route.name ? 2 : "Contact" === this.$route.name ? 3 : -1
                }
            },
            mounted: function() {
                r["a"].set(this.$refs.thumb, {
                    yPercent: 100 * this.defaultIdx
                })
            },
            methods: {
                close: function(e, t, i) {
                    var a = this;
                    this.$root.menuOpened = !1,
                    i.name !== this.$route.name ? (r["a"].to(this.$refs.thumb, {
                        yPercent: 100 * t
                    }),
                    this.$nextTick((function() {
                        a.$router.push(i)
                    }
                    ))) : this.$root.needResume = !0
                },
                normalClose: function() {
                    this.$root.needResume = !0,
                    this.$root.menuOpened = !1
                },
                handleMouseEnter: function(e) {
                    var t = this;
                    this.$refs.canvasText && (this.idx = e,
                    r["a"].to(this.$refs.canvasText.opacities[e], {
                        opacity: 1,
                        onUpdate: function() {
                            t.$refs.canvasText && (t.$refs.canvasText.draw(),
                            t.$refs.canvasText.$refs.perlin.texture.needsUpdate = !0,
                            t.$refs.canvasText.$refs.perlin.handleRender())
                        }
                    }))
                },
                handleMouseLeave: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.$refs.canvasText && r["a"].to(this.$refs.canvasText.opacities[t], {
                        opacity: 0,
                        onUpdate: function() {
                            e.$refs.canvasText && (e.$refs.canvasText.draw(),
                            e.$refs.canvasText.$refs.perlin.texture.needsUpdate = !0,
                            e.$refs.canvasText.$refs.perlin.handleRender())
                        }
                    })
                }
            }
        }
          , y = x
          , w = (i("59d2"),
        Object(d["a"])(y, g, v, !1, null, "21040962", null))
          , T = w.exports
          , S = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "cookie-banner"
            }, [i("p", [e._v("This website use cookies to ensure that you get the best experience. For more info check our Privacy Policy.")]), i("button", {
                on: {
                    click: e.acceptCookie
                }
            }, [e._v("Accept")])])
        }
          , k = []
          , P = {
            props: {
                href: {
                    type: String
                }
            },
            methods: {
                acceptCookie: function() {
                    this.$parent.cookieAccepted = !0,
                    localStorage.setItem("cookieAccepted", !0)
                }
            }
        }
          , C = P
          , z = (i("eca6"),
        Object(d["a"])(C, S, k, !1, null, "1bee10f1", null))
          , R = z.exports
          , F = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "scene"
            }, [i("canvas", {
                ref: "canvas"
            }), i("transition", {
                attrs: {
                    appear: "",
                    duration: {
                        enter: 4300,
                        leave: 4300
                    }
                }
            }, [e.showIntro && "Home" === e.$route.name ? i("div", {
                staticClass: "intro"
            }, [i("div", {
                staticClass: "logo"
            }), i("div", {
                staticClass: "content"
            }, [i("div", {
                staticClass: "content-inner"
            }, e._l(e.description, (function(t, a) {
                return i("span", {
                    key: a,
                    staticClass: "word"
                }, [e._l(t, (function(t, s) {
                    return i("span", {
                        key: a + s,
                        staticClass: "letter",
                        style: "transition-delay: " + t.delay + "s"
                    }, [e._v(e._s(t.value))])
                }
                )), e._v(" "), i("span", {
                    staticClass: "dot"
                }, [e._v(".")])], 2)
            }
            )), 0)]), i("button", {
                staticClass: "enter-button",
                on: {
                    click: function(t) {
                        return t.preventDefault(),
                        e.enterClick(t)
                    }
                }
            }, [i("span", {
                staticClass: "label"
            }, [i("span", {
                staticClass: "black",
                domProps: {
                    innerHTML: e._s(e.enterWording)
                }
            }), i("span", {
                staticClass: "red",
                domProps: {
                    innerHTML: e._s(e.enterWording)
                }
            })]), i("span", {
                staticClass: "icon"
            }, [i("span", {
                staticClass: "black"
            }, [i("span", {
                staticClass: "bar bar-1"
            }), i("span", {
                staticClass: "bar bar-2"
            })]), i("span", {
                staticClass: "red"
            }, [i("span", {
                staticClass: "bar bar-1"
            }), i("span", {
                staticClass: "bar bar-2"
            })])])]), i("div", {
                staticClass: "navigation"
            }, [i("div", {
                staticClass: "langs"
            }, [i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: e.$route.name,
                        params: Object.assign({}, e.$route.params, {
                            locale: "fr"
                        })
                    }
                }
            }, [e._v("FR")]), i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: e.$route.name,
                        params: Object.assign({}, e.$route.params, {
                            locale: "en"
                        })
                    }
                }
            }, [e._v("EN")]), i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: e.$route.name,
                        params: Object.assign({}, e.$route.params, {
                            locale: "jp"
                        })
                    }
                }
            }, [e._v("JP")])], 1), i("router-link", {
                staticClass: "underline",
                attrs: {
                    to: {
                        name: "LegalNotice"
                    }
                }
            }, [e._v(e._s(e.$t("legals.title")))])], 1)]) : e._e()])], 1)
        }
          , A = []
          , L = (i("a15b"),
        i("ac1f"),
        i("1276"),
        i("b85c"))
          , E = {
            merfy: {
                0: "les-barres",
                1: "les-oriseaux",
                2: "beaux-sens",
                3: "le-chemin-de-reims",
                4: "les-grands-champs",
                5: "les-bermonts",
                6: "les-fontaines",
                7: "les-ricordantes",
                8: "les-brets",
                9: "le-closet",
                10: "le-mont-age",
                11: "les-alliees",
                12: "les-couarres",
                13: "les-heurtes-bises"
            },
            avize: {
                0: "cote-des-blancs",
                1: "cote-des-blancs",
                2: "cote-des-blancs",
                3: "cote-des-blancs",
                4: "cote-des-blancs",
                5: "cote-des-blancs",
                6: "cote-des-blancs",
                7: "cote-des-blancs",
                8: "cote-des-blancs",
                9: "cote-des-blancs",
                10: "cote-des-blancs",
                11: "cote-des-blancs",
                12: "cote-des-blancs"
            }
        }
          , M = (i("4de4"),
        i("caad"),
        i("2532"),
        i("466d"),
        i("d4ec"))
          , O = i("bee2")
          , B = i("262e")
          , I = i("2caf")
          , q = i("5a89")
          , D = i("8992")
          , V = i("3191")
          , N = i.n(V)
          , H = i("257e")
          , _ = i("ee6c")
          , j = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                if (Object(M["a"])(this, i),
                a = t.call(this),
                a.throttle = "undefined" !== typeof e.throttle ? e.throttle : 0,
                a.viewport = {},
                a.paused = !1,
                a.$sizeViewport = document.createElement("div"),
                a.$sizeViewport.classList.add("sizes-viewport-dummy"),
                a.$sizeViewport.style.width = "100vw",
                a.$sizeViewport.style.position = "absolute",
                a.$sizeViewport.style.top = 0,
                a.$sizeViewport.style.left = 0,
                a.$sizeViewport.style.pointerEvents = "none",
                a.$sizeViewport.style.backgroundColor = "red",
                a.$sizeViewport.style.zIndex = 999,
                a.resize = a.resize.bind(Object(H["a"])(a)),
                a.throttle) {
                    var s = null;
                    window.addEventListener("resize", (function() {
                        s && window.clearTimeout(s),
                        s = window.setTimeout((function() {
                            s = null,
                            a.resize()
                        }
                        ), a.throttle)
                    }
                    ))
                } else
                    window.addEventListener("resize", a.resize);
                return a.resize(),
                a
            }
            return Object(O["a"])(i, [{
                key: "resize",
                value: function() {
                    var e = .01 * window.innerHeight;
                    document.documentElement.style.setProperty("--vh", "".concat(e, "px")),
                    document.body.appendChild(this.$sizeViewport),
                    this.viewport.width = this.$sizeViewport.offsetWidth,
                    this.viewport.height = this.$sizeViewport.offsetHeight,
                    document.body.removeChild(this.$sizeViewport),
                    this.width = window.innerWidth,
                    this.height = window.innerHeight,
                    this.paused || this.trigger("resize")
                }
            }]),
            i
        }(_["a"])
          , U = i("1a27")
          , W = (i("7db0"),
        i("4d63"),
        i("25f0"),
        i("2909"))
          , G = i("34ad")
          , Y = i("8710")
          , $ = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i() {
                var e;
                return Object(M["a"])(this, i),
                e = t.call(this),
                e.setLoaders(),
                e.toLoad = 0,
                e.loaded = 0,
                e.items = {},
                e
            }
            return Object(O["a"])(i, [{
                key: "setLoaders",
                value: function() {
                    var e = this;
                    this.loaders = [],
                    this.loaders.push({
                        extensions: ["jpg", "png"],
                        action: function(t) {
                            var i = new Image;
                            i.addEventListener("load", (function() {
                                e.fileLoadEnd(t, i)
                            }
                            )),
                            i.addEventListener("error", (function() {
                                e.fileLoadEnd(t, i)
                            }
                            )),
                            i.src = t.source
                        }
                    }),
                    this.loaders.push({
                        extensions: ["mp3"],
                        action: function(t) {
                            var i = new Audio
                              , a = window.setTimeout((function() {
                                e.fileLoadEnd(t, i)
                            }
                            ), 5e3);
                            i.addEventListener("canplaythrough", (function() {
                                e.fileLoadEnd(t, i),
                                window.clearTimeout(a)
                            }
                            )),
                            i.addEventListener("error", (function() {
                                e.fileLoadEnd(t, i),
                                window.clearTimeout(a)
                            }
                            )),
                            i.src = t.source,
                            i.load()
                        }
                    });
                    var t = new G["a"];
                    this.loaders.push({
                        extensions: ["glb", "gltf"],
                        action: function(i) {
                            t.load(i.source, (function(t) {
                                e.fileLoadEnd(i, t)
                            }
                            ))
                        }
                    });
                    var i = new Y["a"];
                    this.loaders.push({
                        extensions: ["fbx"],
                        action: function(t) {
                            i.load(t.source, (function(i) {
                                e.fileLoadEnd(t, i)
                            }
                            ))
                        }
                    })
                }
            }, {
                key: "load",
                value: function() {
                    var e, t = this, i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], a = Object(L["a"])(i);
                    try {
                        for (a.s(); !(e = a.n()).done; ) {
                            var s = e.value;
                            this.toLoad++;
                            var n = s.source.match(/\.([a-z0-9]+)$/);
                            "undefined" !== typeof n[1] ? function() {
                                var e = n[1]
                                  , i = t.loaders.find((function(t) {
                                    return t.extensions.find((function(t) {
                                        return t === e
                                    }
                                    ))
                                }
                                ));
                                i ? i.action(s) : console.warn("Cannot found loader for ".concat(s))
                            }() : console.warn("Cannot found extension of ".concat(s))
                        }
                    } catch (r) {
                        a.e(r)
                    } finally {
                        a.f()
                    }
                }
            }, {
                key: "fileLoadEnd",
                value: function(e, t) {
                    this.loaded++,
                    this.items[e.name] = t,
                    this.trigger("fileEnd", [e, t]),
                    this.loaded === this.toLoad && this.trigger("end")
                }
            }]),
            i
        }(_["a"])
          , X = i("9037")
          , J = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                return Object(M["a"])(this, i),
                a = t.call(this),
                a.items = {},
                a.loader = new $({
                    renderer: a.renderer
                }),
                a.groups = {},
                a.groups.assets = e,
                a.groups.current = null,
                a.loadNextGroup(),
                a.loader.on("fileEnd", (function(e, t) {
                    if (a.items[e.name] = t,
                    "texture" === e.type) {
                        var i = new q["Ib"](t);
                        i.needsUpdate = !0,
                        a.items["".concat(e.name, "Texture")] = i
                    }
                    a.groups.current.loaded++,
                    a.trigger("progress", [a.groups.current])
                }
                )),
                a.loader.on("end", (function() {
                    "intro" === a.groups.current.name && (a.items.perlinTexture.wrapS = q["xb"],
                    a.items.perlinTexture.wrapT = q["xb"],
                    a.items.paperTexture.wrapS = q["xb"],
                    a.items.paperTexture.wrapT = q["xb"]),
                    "rest" === a.groups.current.name && (a.items.blazonDataTexture.flipY = !1,
                    a.items.blazonDataTexture.magFilter = q["ab"],
                    a.items.blazonDataTexture.minFilter = q["J"],
                    a.items.fieldsGeometries = a.extractGeometry(a.items.fieldsModel.scene.children, [{
                        name: "all",
                        regex: new RegExp("^.","i")
                    }]),
                    a.items.avizeFieldLabelTexture.minFilter = q["ab"],
                    a.items.avizeFieldLabelTexture.magFilter = q["ab"],
                    a.items.avizeFieldSubTitleTexture.magFilter = q["J"],
                    a.items.avizeFieldSubTitleTexture.minFilter = q["J"],
                    a.items.avizeField01TitleTexture.magFilter = q["J"],
                    a.items.avizeField01TitleTexture.minFilter = q["J"],
                    a.items.avizeField02TitleTexture.magFilter = q["J"],
                    a.items.avizeField02TitleTexture.minFilter = q["J"],
                    a.items.avizeField03TitleTexture.magFilter = q["J"],
                    a.items.avizeField03TitleTexture.minFilter = q["J"],
                    a.items.avizeField04TitleTexture.magFilter = q["J"],
                    a.items.avizeField04TitleTexture.minFilter = q["J"],
                    a.items.avizeField05TitleTexture.magFilter = q["J"],
                    a.items.avizeField05TitleTexture.minFilter = q["J"],
                    a.items.avizeField06TitleTexture.magFilter = q["J"],
                    a.items.avizeField06TitleTexture.minFilter = q["J"],
                    a.items.avizeField07TitleTexture.magFilter = q["J"],
                    a.items.avizeField07TitleTexture.minFilter = q["J"],
                    a.items.avizeVillageInstancedMeshes = a.createInstancedMeshes(a.items.avizeVillageModel.scene.children, [{
                        name: "trees",
                        regex: new RegExp("^tree","i")
                    }, {
                        name: "buildings",
                        regex: new RegExp("^house|cube","i")
                    }]),
                    a.items.merfyVillageInstancedMeshes = a.createInstancedMeshes(a.items.merfyVillageModel.scene.children, [{
                        name: "trees",
                        regex: new RegExp("^tree","i")
                    }, {
                        name: "buildings",
                        regex: new RegExp("^house|cube","i")
                    }])),
                    a.trigger("groupEnd", [a.groups.current]),
                    a.groups.assets.length > 0 ? a.loadNextGroup() : a.trigger("end")
                }
                )),
                a
            }
            return Object(O["a"])(i, [{
                key: "loadNextGroup",
                value: function() {
                    this.groups.current = this.groups.assets.shift(),
                    this.groups.current.toLoad = this.groups.current.items.length,
                    this.groups.current.loaded = 0,
                    this.loader.load(this.groups.current.items)
                }
            }, {
                key: "createInstancedMeshes",
                value: function(e, t) {
                    var i, a = [], s = Object(L["a"])(t);
                    try {
                        for (s.s(); !(i = s.n()).done; ) {
                            var n = i.value;
                            a.push({
                                name: n.name,
                                regex: n.regex,
                                meshesGroups: [],
                                instancedMeshes: []
                            })
                        }
                    } catch (b) {
                        s.e(b)
                    } finally {
                        s.f()
                    }
                    var r, o = Object(W["a"])(e), l = [], u = Object(L["a"])(o);
                    try {
                        var h = function() {
                            var e = r.value;
                            if (e instanceof q["T"]) {
                                var t = l.find((function(t) {
                                    return t.geometry === e.geometry
                                }
                                ));
                                t || (t = {
                                    name: e.name,
                                    geometry: e.geometry,
                                    matrices: []
                                },
                                l.push(t)),
                                e.updateMatrixWorld(),
                                t.matrices.push(e.matrixWorld)
                            }
                        };
                        for (u.s(); !(r = u.n()).done; )
                            h()
                    } catch (b) {
                        u.e(b)
                    } finally {
                        u.f()
                    }
                    for (var c = function() {
                        var e = m[d];
                        e.instancedMesh = new q["z"](e.geometry,new q["U"]({
                            color: 255
                        }),e.matrices.length);
                        var t, i = 0, s = Object(L["a"])(e.matrices);
                        try {
                            for (s.s(); !(t = s.n()).done; ) {
                                var n = t.value;
                                e.instancedMesh.setMatrixAt(i, n),
                                i++
                            }
                        } catch (b) {
                            s.e(b)
                        } finally {
                            s.f()
                        }
                        var r = a.find((function(t) {
                            return e.name.match(t.regex)
                        }
                        ));
                        r && r.instancedMeshes.push(e.instancedMesh)
                    }, d = 0, m = l; d < m.length; d++)
                        c();
                    for (var p = {}, g = 0, v = a; g < v.length; g++) {
                        var f = v[g];
                        p[f.name] = f.instancedMeshes
                    }
                    return p
                }
            }, {
                key: "extractGeometry",
                value: function(e, t) {
                    var i, a = [], s = Object(L["a"])(t);
                    try {
                        for (s.s(); !(i = s.n()).done; ) {
                            var n = i.value;
                            a.push({
                                name: n.name,
                                regex: n.regex,
                                geometries: [],
                                geometry: null
                            })
                        }
                    } catch (b) {
                        s.e(b)
                    } finally {
                        s.f()
                    }
                    var r, o = Object(W["a"])(e), l = [], u = Object(L["a"])(o);
                    try {
                        var h = function() {
                            var e = r.value;
                            if (e instanceof q["T"]) {
                                var t = l.find((function(t) {
                                    return t === e.geometry
                                }
                                ));
                                t || l.push(e.geometry)
                            }
                        };
                        for (u.s(); !(r = u.n()).done; )
                            h()
                    } catch (b) {
                        u.e(b)
                    } finally {
                        u.f()
                    }
                    var c, d = Object(L["a"])(o);
                    try {
                        var m = function() {
                            var e = c.value;
                            if (e instanceof q["T"]) {
                                var t, i = Object(L["a"])(a);
                                try {
                                    for (i.s(); !(t = i.n()).done; ) {
                                        var s = t.value;
                                        if (e.name.match(s.regex)) {
                                            var n = l.find((function(t) {
                                                return t === e.geometry
                                            }
                                            ));
                                            e.updateMatrixWorld();
                                            var r = n.clone();
                                            r.applyMatrix4(e.matrixWorld),
                                            s.geometries.push(r)
                                        }
                                    }
                                } catch (b) {
                                    i.e(b)
                                } finally {
                                    i.f()
                                }
                            }
                        };
                        for (d.s(); !(c = d.n()).done; )
                            m()
                    } catch (b) {
                        d.e(b)
                    } finally {
                        d.f()
                    }
                    for (var p = {}, g = 0, v = a; g < v.length; g++) {
                        var f = v[g];
                        p[f.name] = X["a"].mergeBufferGeometries(f.geometries)
                    }
                    return p
                }
            }, {
                key: "destroy",
                value: function() {
                    for (var e in this.items) {
                        var t = this.items[e];
                        t instanceof q["Ib"] && t.dispose()
                    }
                }
            }]),
            i
        }(_["a"])
          , Q = i("a5cf")
          , K = i("5530")
          , Z = (i("d81d"),
        "#define GLSLIFY 1\nvarying vec3 vColor;\n\nvoid main()\n{\n    gl_FragColor = vec4(vColor, 1.0);\n}\n")
          , ee = "#define GLSLIFY 1\nuniform vec3 uColor;\nuniform float uAlpha;\n\nvarying vec3 vColor;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n\n    // Color\n    vColor = uColor;\n    vColor.r = uAlpha;\n}\n"
          , te = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uColor: {
                    value: null
                },
                uAlpha: {
                    value: null
                }
            };
            t.uColor.value = e.color,
            t.uAlpha.value = e.alpha;
            var i = {}
              , a = new q["zb"]({
                transparent: !1,
                depthTest: !1,
                depthWrite: !1,
                uniforms: t,
                defines: i,
                vertexShader: ee,
                fragmentShader: Z,
                lights: !1,
                vertexColors: !0
            });
            return a
        }
          , ie = "#define GLSLIFY 1\nuniform float uTime;\nuniform sampler2D uMask;\nuniform sampler2D uLabel;\nuniform float uMaskStep;\nuniform vec3 uPencilColor;\nuniform vec3 uPaperColor;\nuniform vec3 uPlaceholderColor;\nuniform vec2 uParallax;\nuniform sampler2D uRevealTexture;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\nuniform float uRevealProgress;\nuniform float uLabelProgress;\nuniform float uPlaceholderProgress;\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    // Label perlin progress\n    float labelPerlinProgress = getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uLabelProgress, uTime);\n\n    // Reveal perlin progress\n    float revealPerlinProgress = getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uRevealProgress, uTime);\n\n    // Reveal placeholder progress\n    float placeholderPerlinProgress = getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uPlaceholderProgress, uTime);\n\n    // Parallax\n    vec2 parallaxUv = vUv;\n    parallaxUv -= vec2(0.5);\n    parallaxUv *= vec2(0.92);\n    parallaxUv += vec2(0.5);\n    parallaxUv += uParallax * 0.08;\n\n    vec3 labelColor = mix(uPencilColor * 0.7, uPaperColor, texture2D(uLabel, parallaxUv).r);\n\n    // Placeholder color\n    labelColor = mix(uPlaceholderColor, labelColor, placeholderPerlinProgress);\n\n    // Reveal\n    vec3 color = mix(uPencilColor * 0.8, labelColor, labelPerlinProgress);\n\n    // Mask\n    float maskStrength = step(uMaskStep, texture2D(uMask, vUv).r);\n\n    // Final color\n    gl_FragColor = vec4(color, maskStrength * revealPerlinProgress);\n}\n"
          , ae = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    vUv = vec2(uv.x, 1.0 - uv.y);\n}\n"
          , se = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uTime: {
                    value: null
                },
                uMask: {
                    value: null
                },
                uLabel: {
                    value: null
                },
                uMaskStep: {
                    value: null
                },
                uPencilColor: {
                    value: null
                },
                uPaperColor: {
                    value: null
                },
                uPlaceholderColor: {
                    value: null
                },
                uParallax: {
                    value: null
                },
                uRevealTexture: {
                    value: null
                },
                uRevealTextureFrequency: {
                    value: null
                },
                uRevealRandomFrequency: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                },
                uLabelProgress: {
                    value: null
                },
                uPlaceholderProgress: {
                    value: null
                }
            };
            t.uTime.value = 0,
            t.uLabel.value = e.label,
            t.uMask.value = e.mask,
            t.uMaskStep.value = e.maskStep,
            t.uPencilColor.value = e.pencilColor,
            t.uPaperColor.value = e.paperColor,
            t.uPlaceholderColor.value = e.placeholderColor,
            t.uParallax.value = new q["Qb"],
            t.uRevealTexture.value = e.revealTexture,
            t.uRevealTextureFrequency.value = e.textureFrequency,
            t.uRevealRandomFrequency.value = e.randomFrequency,
            t.uRevealProgress.value = 1,
            t.uLabelProgress.value = 0,
            t.uPlaceholderProgress.value = 0;
            var i = {}
              , a = new q["zb"]({
                transparent: !0,
                depthTest: !1,
                depthWrite: !1,
                lights: !1,
                uniforms: t,
                defines: i,
                vertexShader: ae,
                fragmentShader: ie
            });
            return a
        }
          , ne = "#define GLSLIFY 1\nuniform sampler2D uMask;\nuniform vec3 uColor;\n// uniform vec3 uRevealColor;\nuniform sampler2D uRevealTexture;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\nuniform float uRevealProgress;\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    // Perlin progress\n    float perlinProgress1 = getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uRevealProgress, 0.0);\n    // perlinProgress1 = perlinProgress1 * 2.0 - 1.0;\n    // perlinProgress1 = perlinProgress1 * 6.0 - 5.0;\n    // perlinProgress1 = clamp(0.0, 1.0, perlinProgress1);\n\n    // float perlinProgress2 = getPerlinProgress(vUv + 10.0, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uRevealProgress, 0.0);\n    // perlinProgress2 = perlinProgress2 * 2.0;\n    // perlinProgress2 = perlinProgress2 * 6.0 - 5.0;\n    // perlinProgress2 = clamp(0.0, 1.0, perlinProgress2);\n\n    // Mask\n    float maskStrength = texture2D(uMask, vUv).r;\n\n    // Reveal\n    // float alpha = mix(0.0, maskStrength, perlinProgress2);\n    // vec3 color = mix(uRevealColor, uColor * 0.4, perlinProgress1);\n    // gl_FragColor = vec4(color, alpha);\n\n    float alpha = mix(0.0, maskStrength, perlinProgress1);\n    gl_FragColor = vec4(uColor, alpha);\n}\n"
          , re = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    vUv = vec2(uv.x, 1.0 - uv.y);\n}\n"
          , oe = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uMask: {
                    value: null
                },
                uColor: {
                    value: null
                },
                uRevealTexture: {
                    value: null
                },
                uRevealTextureFrequency: {
                    value: null
                },
                uRevealRandomFrequency: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                }
            };
            t.uMask.value = e.mask,
            t.uColor.value = e.color,
            t.uRevealTexture.value = e.revealTexture,
            t.uRevealTextureFrequency.value = e.textureFrequency,
            t.uRevealRandomFrequency.value = e.randomFrequency,
            t.uRevealProgress.value = 0;
            var i = {}
              , a = new q["zb"]({
                transparent: !0,
                depthTest: !1,
                depthWrite: !1,
                lights: !1,
                uniforms: t,
                defines: i,
                vertexShader: re,
                fragmentShader: ne
            });
            return a
        }
          , le = "#define GLSLIFY 1\nuniform sampler2D uMask;\nuniform vec3 uColor;\nuniform float uRevealProgress;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    float maskStrength = texture2D(uMask, vUv).b;\n    maskStrength *= step(vUv.y + 0.1 + ((vUv.x - 0.5) * 0.2), uRevealProgress * 1.1);\n    gl_FragColor = vec4(uColor, maskStrength);\n}\n"
          , ue = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    vUv = vec2(uv.x, 1.0 - uv.y);\n}\n"
          , he = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uMask: {
                    value: null
                },
                uColor: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                }
            };
            t.uMask.value = e.mask,
            t.uColor.value = e.color,
            t.uRevealProgress.value = 0;
            var i = {}
              , a = new q["zb"]({
                transparent: !0,
                depthTest: !1,
                depthWrite: !1,
                uniforms: t,
                defines: i,
                vertexShader: ue,
                fragmentShader: le,
                lights: !1
            });
            return a
        }
          , ce = new q["jb"](1,1,1,1);
        ce.translate(0, .5, 0);
        var de = new q["jb"](1,1,1,1)
          , me = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                return Object(M["a"])(this, i),
                a = t.call(this),
                a.sizes = e.sizes,
                a.time = e.time,
                a.resources = e.resources,
                a.renderer = e.renderer,
                a.camera = e.camera,
                a.colors = e.colors,
                a.fieldShapesMeshes = e.fieldShapesMeshes,
                a.modelName = e.modelName,
                a.index = e.index,
                a.data = e.data,
                a.category = e.category,
                a.cameraRotationY = e.cameraRotationY,
                a.cameraRotationX = e.cameraRotationX,
                a.cameraElevation = e.cameraElevation,
                a.subTitleTexture = a.resources.items[e.subTitleTexture],
                a.titleTexture = a.resources.items[e.titleTexture],
                a.labelTexture = a.resources.items[e.labelTexture],
                a.timeOffset = 1e3 * Math.random(),
                a.mode = "hidden",
                a.active = !1,
                a.playing = !0,
                a.visible = !1,
                a.shapeMesh = a.fieldShapesMeshes.find((function(e) {
                    return e.name === a.modelName
                }
                )),
                a.position = a.shapeMesh.position.clone(),
                a.setBlazonContainer(),
                a.setCoordinates(),
                a.setHighlight(),
                a.setBlazon(),
                a.setBorder(),
                a.setShadow(),
                a.setTitle(),
                a.setSubTitle(),
                a
            }
            return Object(O["a"])(i, [{
                key: "reset",
                value: function() {
                    this.blazon.material.uniforms.uLabelProgress.value = 0,
                    this.blazon.material.uniforms.uRevealProgress.value = 1,
                    this.border.material.uniforms.uRevealProgress.value = 0,
                    this.title.material.uniforms.uRevealProgress.value = 0,
                    this.subTitle.material.uniforms.uRevealProgress.value = 0
                }
            }, {
                key: "setBlazonContainer",
                value: function() {
                    var e = this;
                    this.blazonContainer = new q["x"],
                    this.blazonContainer.visible = !1,
                    this.blazonContainer.rotation.order = "YXZ",
                    this.blazonContainer.position.copy(this.position),
                    this.time.on("tick", (function() {
                        if (e.active && e.playing && e.blazonContainer.visible) {
                            var t = e.camera.instance.position.clone();
                            t.x += 5 * Math.sin(e.camera.instance.rotation.y) * (1 - e.camera.zoom.value),
                            t.z += 5 * Math.cos(e.camera.instance.rotation.y) * (1 - e.camera.zoom.value);
                            var i = Math.atan2(t.x - e.blazonContainer.position.x, t.z - e.blazonContainer.position.z);
                            e.blazonContainer.rotation.y = i,
                            e.blazonContainer.rotation.x = e.camera.animation.rotation.value.x
                        }
                    }
                    ))
                }
            }, {
                key: "setCoordinates",
                value: function() {
                    this.coordinates = {},
                    this.coordinates.cameraFocus = {},
                    this.coordinates.cameraFocus.position = this.position.clone(),
                    this.coordinates.cameraFocus.position.x += .25 * Math.sin(this.cameraRotationY),
                    this.coordinates.cameraFocus.position.y += this.cameraElevation,
                    this.coordinates.cameraFocus.position.z += .25 * Math.cos(this.cameraRotationY),
                    this.coordinates.cameraFocus.rotation = new q["r"],
                    this.coordinates.cameraFocus.rotation.x = this.cameraRotationX,
                    this.coordinates.cameraFocus.rotation.y = this.cameraRotationY,
                    this.coordinates.cameraField = {},
                    this.coordinates.cameraField.position = this.coordinates.cameraFocus.position.clone(),
                    this.coordinates.cameraField.position.multiplyScalar(.5),
                    this.coordinates.cameraField.rotation = this.coordinates.cameraFocus.rotation.clone(),
                    this.coordinates.cameraField.rotation.x = this.cameraRotationX,
                    this.coordinates.cameraField.rotation.y = this.cameraRotationY
                }
            }, {
                key: "setHighlight",
                value: function() {
                    var e = this;
                    this.highlight = {},
                    this.highlight.mesh = this.shapeMesh,
                    this.highlight.mesh.matrixAutoUpdate = !1,
                    this.highlight.mesh.updateMatrix(),
                    this.highlight.mesh.visible = !1,
                    this.highlight.material = new te({
                        alpha: 0,
                        color: new q["j"]("#ff0000")
                    }),
                    this.highlight.mesh.material = this.highlight.material,
                    this.highlight.show = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        e.highlight.mesh.visible = !0,
                        r["a"].killTweensOf(e.highlight.material.uniforms.uAlpha),
                        r["a"].to(e.highlight.material.uniforms.uAlpha, {
                            value: t,
                            duration: .15
                        })
                    }
                    ,
                    this.highlight.hide = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        r["a"].killTweensOf(e.highlight.material.uniforms.uAlpha),
                        t ? (e.highlight.material.uniforms.uAlpha.value = 0,
                        e.highlight.mesh.visible = !1) : r["a"].to(e.highlight.material.uniforms.uAlpha, {
                            value: 0,
                            duration: .3,
                            onComplete: function() {
                                e.highlight.mesh.visible = !1
                            }
                        })
                    }
                }
            }, {
                key: "setBlazon",
                value: function() {
                    var e = this;
                    this.blazon = {},
                    this.blazon.size = .08,
                    this.blazon.parallaxActive = !0,
                    this.blazon.color = this.colors.pencil.three.clone(),
                    this.blazon.color.multiplyScalar(.85),
                    this.blazon.geometry = ce,
                    this.labelTexture && (this.labelTexture.flipY = !1,
                    this.labelTexture.magFilter = q["ab"],
                    this.labelTexture.minFilter = q["J"]),
                    this.blazon.material = new se({
                        mask: this.resources.items.blazonDataTexture,
                        label: this.labelTexture,
                        maskStep: this.data.hasContent ? .25 : .75,
                        pencilColor: this.colors.pencil.three,
                        paperColor: this.colors.paper.three,
                        placeholderColor: new q["j"](11314580),
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](4,.65),
                        randomFrequency: new q["Qb"](7,3)
                    }),
                    this.blazon.mesh = new q["T"](this.blazon.geometry,this.blazon.material),
                    this.blazon.mesh.matrixAutoUpdate = !1,
                    this.blazon.mesh.scale.set(1e-5, 1e-5, 1e-5),
                    this.blazon.mesh.updateMatrix(),
                    this.blazonContainer.add(this.blazon.mesh),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.blazonContainer.visible && (e.blazon.material.uniforms.uTime.value = 5e-4 * e.time.elapsed + e.timeOffset,
                        e.blazon.parallaxActive && (e.blazon.material.uniforms.uParallax.value.x = -e.camera.floating.value.x,
                        e.blazon.material.uniforms.uParallax.value.y = -e.camera.floating.value.y))
                    }
                    ))
                }
            }, {
                key: "setBorder",
                value: function() {
                    this.border = {},
                    this.border.size = .08,
                    this.border.color = this.colors.pencil.three.clone(),
                    this.border.color.multiplyScalar(.2),
                    this.border.geometry = ce,
                    this.border.material = new he({
                        mask: this.resources.items.blazonDataTexture,
                        color: this.blazon.color
                    }),
                    this.border.mesh = new q["T"](this.border.geometry,this.border.material),
                    this.border.mesh.scale.set(this.border.size, this.border.size, this.border.size),
                    this.border.mesh.matrixAutoUpdate = !1,
                    this.border.mesh.updateMatrix(),
                    this.blazonContainer.add(this.border.mesh)
                }
            }, {
                key: "setShadow",
                value: function() {
                    this.shadow = {},
                    this.shadow.size = .15,
                    this.shadow.color = this.colors.pencil.three.clone(),
                    this.shadow.color.multiplyScalar(.7),
                    this.shadow.geometry = de,
                    this.shadow.material = new q["U"]({
                        depthTest: !1,
                        depthWrite: !1,
                        transparent: !0,
                        opacity: .5,
                        alphaMap: this.resources.items.blazonDataTexture,
                        color: this.shadow.color
                    }),
                    this.shadow.mesh = new q["T"](this.shadow.geometry,this.shadow.material),
                    this.shadow.mesh.scale.set(this.shadow.size, this.shadow.size, this.shadow.size),
                    this.shadow.mesh.rotation.x = .5 * -Math.PI,
                    this.shadow.mesh.matrixAutoUpdate = !1,
                    this.shadow.mesh.updateMatrix(),
                    this.blazonContainer.add(this.shadow.mesh)
                }
            }, {
                key: "setTitle",
                value: function() {
                    var e = this;
                    this.title = {},
                    this.title.visible = !1,
                    this.title.size = .0055,
                    this.title.ratio = .0625,
                    this.title.resizeRatio = 1,
                    this.title.y = this.title.size * this.title.ratio * .25,
                    this.title.z = 1.1 * -this.camera.originalCamera.near,
                    this.title.geometry = de,
                    this.titleTexture.flipY = !1,
                    this.title.material = new oe({
                        mask: this.titleTexture,
                        color: this.data.hasContent ? this.colors.darkerPencil.three : this.colors.pencil.three,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](6,4),
                        randomFrequency: new q["Qb"](3,8)
                    }),
                    this.title.mesh = new q["T"](this.title.geometry,this.title.material),
                    this.title.mesh.visible = !1,
                    this.title.mesh.position.y = this.title.y,
                    this.title.mesh.position.z = this.title.z,
                    this.title.mesh.matrixAutoUpdate = !1,
                    this.camera.originalCamera.add(this.title.mesh),
                    this.title.resize = function() {
                        var t = 2.2;
                        e.sizes.viewport.width < 800 && (t = 1.6),
                        e.title.resizeRatio = e.sizes.viewport.width / e.sizes.viewport.height < t ? 1 - (t - e.sizes.viewport.width / e.sizes.viewport.height) / t : 1,
                        e.title.mesh.scale.set(e.title.size * e.title.resizeRatio, e.title.size * e.title.ratio * e.title.resizeRatio, 1),
                        e.title.mesh.updateMatrix()
                    }
                    ,
                    this.title.resize(),
                    this.sizes.on("resize", this.title.resize),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.title.visible && (e.title.mesh.position.y = e.title.y + 5e-4 * e.camera.floating.value.y,
                        e.title.mesh.position.x = 5e-4 * -e.camera.floating.value.x,
                        e.title.mesh.updateMatrix())
                    }
                    ))
                }
            }, {
                key: "setSubTitle",
                value: function() {
                    var e = this;
                    this.subTitle = {},
                    this.subTitle.visible = !1,
                    this.subTitle.size = .0015,
                    this.subTitle.ratio = 48 / 1024,
                    this.subTitle.resizeRatio = 1,
                    this.subTitle.y = this.title.size * this.title.mesh.scale.y * 1,
                    this.subTitle.z = 1.1 * -this.camera.originalCamera.near,
                    this.subTitle.color = this.colors.pencil.three.clone(),
                    this.subTitle.color.multiplyScalar(.2),
                    this.subTitle.geometry = de,
                    this.subTitleTexture.flipY = !1,
                    this.subTitle.material = new oe({
                        mask: this.subTitleTexture,
                        color: this.data.hasContent ? this.colors.darkerPencil.three : this.colors.pencil.three,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](.65,2),
                        randomFrequency: new q["Qb"](4,5)
                    }),
                    this.subTitle.mesh = new q["T"](this.subTitle.geometry,this.subTitle.material),
                    this.subTitle.mesh.visible = !1,
                    this.subTitle.mesh.position.y = this.subTitle.y,
                    this.subTitle.mesh.position.z = this.subTitle.z,
                    this.subTitle.mesh.matrixAutoUpdate = !1,
                    this.camera.originalCamera.add(this.subTitle.mesh),
                    this.subTitle.resize = function() {
                        var t = 1.8;
                        e.sizes.viewport.width < 800 && (t = 1),
                        e.subTitle.resizeRatio = e.sizes.viewport.width / e.sizes.viewport.height < t ? 1 - (t - e.sizes.viewport.width / e.sizes.viewport.height) / t : 1,
                        e.subTitle.mesh.scale.set(e.subTitle.size * e.subTitle.resizeRatio, e.subTitle.size * e.subTitle.ratio * e.subTitle.resizeRatio, 1),
                        e.subTitle.y = 1e-4 + e.title.size * e.title.mesh.scale.y * 150,
                        e.subTitle.mesh.position.y = e.subTitle.y,
                        e.subTitle.mesh.updateMatrix()
                    }
                    ,
                    this.subTitle.resize(),
                    this.sizes.on("resize", this.subTitle.resize),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.title.visible && (e.subTitle.mesh.position.y = e.subTitle.y + 42e-5 * e.camera.floating.value.y,
                        e.subTitle.mesh.position.x = 42e-5 * -e.camera.floating.value.x,
                        e.subTitle.mesh.updateMatrix())
                    }
                    ))
                }
            }, {
                key: "setMode",
                value: function(e) {
                    var t = this
                      , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (e !== this.mode) {
                        var a = this.mode;
                        if (this.mode = e,
                        i)
                            switch (this.mode) {
                            case "hidden":
                                this.visible = !1,
                                this.highlight.hide(!0),
                                r["a"].killTweensOf(this.title.material.uniforms.uRevealProgress),
                                r["a"].killTweensOf(this.subTitle.material.uniforms.uRevealProgress),
                                this.title.visible = !1,
                                this.subTitle.visible = !1,
                                this.title.material.uniforms.uRevealProgress.value = 0,
                                this.subTitle.material.uniforms.uRevealProgress.value = 0,
                                r["a"].killTweensOf(this.blazon.mesh.scale),
                                this.blazon.mesh.scale.x = 1e-4,
                                this.blazon.mesh.scale.y = 1e-4,
                                this.blazon.mesh.scale.z = 1e-4,
                                this.blazon.mesh.updateMatrix();
                                break
                            }
                        else
                            switch (this.mode) {
                            case "enter":
                                this.highlight.show(),
                                this.title.visible = !0,
                                this.subTitle.visible = !0,
                                r["a"].killTweensOf(this.title.material.uniforms.uRevealProgress),
                                r["a"].killTweensOf(this.subTitle.material.uniforms.uRevealProgress),
                                r["a"].to(this.title.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    duration: 1
                                }),
                                r["a"].to(this.subTitle.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    duration: 1,
                                    delay: .1
                                }),
                                r["a"].to(this.blazon.material.uniforms.uLabelProgress, {
                                    value: .2,
                                    duration: 1
                                });
                                break;
                            case "enter-side":
                                this.highlight.show(.5);
                                break;
                            case "leave":
                                this.highlight.hide();
                                var s = function() {
                                    t.title.visible = !1,
                                    t.subTitle.visible = !1
                                };
                                r["a"].killTweensOf(this.title.material.uniforms.uRevealProgress),
                                r["a"].killTweensOf(this.subTitle.material.uniforms.uRevealProgress),
                                r["a"].killTweensOf(this.blazon.material.uniforms.uLabelProgress),
                                r["a"].to(this.title.material.uniforms.uRevealProgress, {
                                    value: 0,
                                    duration: .5,
                                    onComplete: s
                                }),
                                r["a"].to(this.subTitle.material.uniforms.uRevealProgress, {
                                    value: 0,
                                    duration: .5
                                }),
                                r["a"].to(this.blazon.material.uniforms.uLabelProgress, {
                                    value: .4,
                                    duration: 1
                                });
                                break;
                            case "hidden":
                                var n = function() {
                                    t.visible = !1
                                };
                                if (this.highlight.hide(),
                                this.title.visible) {
                                    var o = function() {
                                        t.title.visible = !1,
                                        t.subTitle.visible = !1
                                    };
                                    r["a"].killTweensOf(this.title.material.uniforms.uRevealProgress),
                                    r["a"].killTweensOf(this.subTitle.material.uniforms.uRevealProgress),
                                    r["a"].to(this.title.material.uniforms.uRevealProgress, {
                                        value: 0,
                                        duration: 3,
                                        delay: .2,
                                        onComplete: o
                                    }),
                                    r["a"].to(this.subTitle.material.uniforms.uRevealProgress, {
                                        value: 0,
                                        duration: 3,
                                        delay: .2
                                    })
                                }
                                r["a"].killTweensOf(this.blazon.mesh.scale),
                                r["a"].to(this.blazon.mesh.scale, {
                                    x: 1e-4,
                                    y: 1e-4,
                                    z: 1e-4,
                                    duration: .5,
                                    onUpdate: function() {
                                        t.blazon.mesh.updateMatrix()
                                    },
                                    onComplete: n
                                });
                                break;
                            case "free":
                                if (this.visible = !0,
                                "enter" !== a) {
                                    var l = function() {
                                        t.title.visible = !1,
                                        t.subTitle.visible = !1
                                    };
                                    r["a"].killTweensOf(this.title.material.uniforms.uRevealProgress),
                                    r["a"].killTweensOf(this.subTitle.material.uniforms.uRevealProgress),
                                    r["a"].to(this.title.material.uniforms.uRevealProgress, {
                                        value: 0,
                                        duration: 3,
                                        delay: .2,
                                        onComplete: l
                                    }),
                                    r["a"].to(this.subTitle.material.uniforms.uRevealProgress, {
                                        value: 0,
                                        duration: 3,
                                        delay: .2
                                    })
                                }
                                r["a"].killTweensOf(this.blazon.mesh.scale),
                                r["a"].killTweensOf(this.blazon.material.uniforms.uLabelProgress),
                                r["a"].killTweensOf(this.blazon.material.uniforms.uPlaceholderProgress),
                                r["a"].to(this.blazon.mesh.scale, {
                                    x: this.blazon.size,
                                    y: this.blazon.size,
                                    z: this.blazon.size,
                                    duration: .5,
                                    onUpdate: function() {
                                        t.blazon.mesh.updateMatrix()
                                    }
                                }),
                                r["a"].to(this.blazon.material.uniforms.uLabelProgress, {
                                    value: .4,
                                    duration: 3
                                }),
                                this.data.hasContent ? r["a"].to(this.blazon.material.uniforms.uPlaceholderProgress, {
                                    value: 0,
                                    duration: 2.2
                                }) : r["a"].to(this.blazon.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    duration: 4
                                }),
                                r["a"].killTweensOf(this.border.material.uniforms.uRevealProgress),
                                r["a"].to(this.border.material.uniforms.uRevealProgress, {
                                    value: 0,
                                    duration: 3
                                });
                                break;
                            case "focus":
                                this.blazon.parallaxActive = !0,
                                this.title.visible = !0,
                                this.subTitle.visible = !0,
                                r["a"].killTweensOf(this.title.material.uniforms.uRevealProgress),
                                r["a"].killTweensOf(this.subTitle.material.uniforms.uRevealProgress),
                                r["a"].to(this.title.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    duration: 1
                                }),
                                r["a"].to(this.subTitle.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    duration: 1,
                                    delay: .1
                                }),
                                r["a"].killTweensOf(this.blazon.mesh.scale),
                                r["a"].killTweensOf(this.blazon.material.uniforms.uLabelProgress),
                                r["a"].killTweensOf(this.blazon.material.uniforms.uRevealProgress),
                                r["a"].killTweensOf(this.blazon.material.uniforms.uPlaceholderProgress),
                                this.data.hasContent ? (r["a"].to(this.blazon.material.uniforms.uLabelProgress, {
                                    value: 1,
                                    duration: 4
                                }),
                                r["a"].to(this.blazon.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    duration: 4
                                }),
                                r["a"].to(this.blazon.material.uniforms.uPlaceholderProgress, {
                                    value: 1,
                                    duration: 3
                                })) : r["a"].to(this.blazon.material.uniforms.uRevealProgress, {
                                    value: 0,
                                    duration: 4
                                }),
                                r["a"].killTweensOf(this.border.material.uniforms.uRevealProgress),
                                r["a"].to(this.border.material.uniforms.uRevealProgress, {
                                    value: 1,
                                    delay: 1,
                                    duration: 2,
                                    ease: "power2.inOut"
                                });
                                break;
                            case "field":
                                var u = function() {
                                    t.blazon.parallaxActive = !1
                                };
                                r["a"].to(this.shadow.material, {
                                    opacity: 0,
                                    duration: 4
                                }),
                                r["a"].to(this.blazon.material.uniforms.uRevealProgress, {
                                    value: 0,
                                    duration: 4,
                                    onComplete: u
                                });
                                break
                            }
                    }
                }
            }, {
                key: "enter",
                value: function() {
                    this.trigger("enter")
                }
            }, {
                key: "leave",
                value: function() {
                    this.trigger("leave")
                }
            }, {
                key: "click",
                value: function() {
                    this.trigger("click")
                }
            }, {
                key: "getDistanceToCamera",
                value: function() {
                    return this.blazonContainer.position.distanceTo(this.camera.animation.position.value)
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.active = !1
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                        this.highlight.mesh.visible = !0,
                        this.blazonContainer.visible = !1,
                        this.title.mesh.visible = !1,
                        this.subTitle.mesh.visible = !1;
                        break;
                    case "terrain":
                    case "composition":
                        this.highlight.mesh.visible = !1,
                        this.blazonContainer.visible = !1,
                        this.title.mesh.visible = !1,
                        this.subTitle.mesh.visible = !1;
                        break;
                    case "overlay":
                        this.highlight.mesh.visible = !1,
                        this.blazonContainer.visible = this.visible,
                        this.title.mesh.visible = this.title.visible,
                        this.subTitle.mesh.visible = this.subTitle.visible;
                        break
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    ce.dispose(),
                    de.dispose(),
                    this.blazon.material.dispose(),
                    this.border.material.dispose(),
                    this.shadow.material.dispose(),
                    this.title.material.dispose(),
                    this.subTitle.material.dispose()
                }
            }]),
            i
        }(_["a"])
          , pe = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.domElement = t.domElement,
                this.resources = t.resources,
                this.renderer = t.renderer,
                this.container = t.container,
                this.camera = t.camera,
                this.colors = t.colors,
                this.fieldShapesModel = t.fieldShapesModel,
                this.fieldOptions = t.fieldOptions,
                this.active = !1,
                this.playing = !0,
                this.interactivesActive = !0,
                this.setItems()
            }
            return Object(O["a"])(e, [{
                key: "setItems",
                value: function() {
                    this.items = [];
                    var e, t = Object(W["a"])(this.fieldShapesModel.scene.children), i = 0, a = Object(L["a"])(this.fieldOptions);
                    try {
                        for (a.s(); !(e = a.n()).done; ) {
                            var s = e.value
                              , n = new me(Object(K["a"])({
                                sizes: this.sizes,
                                time: this.time,
                                resources: this.resources,
                                renderer: this.renderer,
                                camera: this.camera,
                                colors: this.colors,
                                fieldShapesMeshes: t,
                                index: i++,
                                data: s
                            }, s));
                            this.container.add(n.highlight.mesh),
                            this.container.add(n.blazonContainer),
                            this.items.push(n)
                        }
                    } catch (r) {
                        a.e(r)
                    } finally {
                        a.f()
                    }
                    this.interactiveMeshes = this.items.map((function(e) {
                        return e.highlight.mesh
                    }
                    ))
                }
            }, {
                key: "testPointer",
                value: function(e) {
                    if (!this.interactivesActive)
                        return null;
                    var t, i = Object(L["a"])(this.interactiveMeshes);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value;
                            a.visible = !0
                        }
                    } catch (l) {
                        i.e(l)
                    } finally {
                        i.f()
                    }
                    var s, n = e.intersectObjects(this.interactiveMeshes), r = Object(L["a"])(this.interactiveMeshes);
                    try {
                        for (r.s(); !(s = r.n()).done; ) {
                            var o = s.value;
                            o.visible = !1
                        }
                    } catch (l) {
                        r.e(l)
                    } finally {
                        r.f()
                    }
                    return n.length ? this.items.find((function(e) {
                        return e.modelName === n[0].object.name
                    }
                    )) : null
                }
            }, {
                key: "getFieldByIndex",
                value: function(e) {
                    return this.items[e]
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    var t, i = Object(L["a"])(this.items);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value;
                            a.setForPass(e)
                        }
                    } catch (s) {
                        i.e(s)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0;
                    var e, t = Object(L["a"])(this.items);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.activate()
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.active = !1;
                    var e, t = Object(L["a"])(this.items);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.deactivate()
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    var e, t = Object(L["a"])(this.items);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.destroy()
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }]),
            e
        }()
          , ge = i("4721")
          , ve = function() {
            function e(t) {
                for (var i in Object(M["a"])(this, e),
                this.segments = [],
                t) {
                    var a = parseInt(i)
                      , s = t[a]
                      , n = t[a + 1 >= t.length ? 0 : a + 1];
                    this.segments.push({
                        a: s,
                        b: n
                    })
                }
            }
            return Object(O["a"])(e, [{
                key: "segmentIntersectSegment",
                value: function(e, t) {
                    var i = {
                        x: null,
                        y: null,
                        onLineA: !1,
                        onLineB: !1,
                        intersect: !1
                    }
                      , a = (t.b.y - t.a.y) * (e.b.x - e.a.x) - (t.b.x - t.a.x) * (e.b.y - e.a.y);
                    if (0 === a)
                        return i;
                    var s = e.a.y - t.a.y
                      , n = e.a.x - t.a.x
                      , r = (t.b.x - t.a.x) * s - (t.b.y - t.a.y) * n
                      , o = (e.b.x - e.a.x) * s - (e.b.y - e.a.y) * n;
                    return s = r / a,
                    n = o / a,
                    i.x = e.a.x + s * (e.b.x - e.a.x),
                    i.y = e.a.y + s * (e.b.y - e.a.y),
                    s > 0 && s < 1 && (i.onLineA = !0),
                    n > 0 && n < 1 && (i.onLineB = !0),
                    i.onLineA && i.onLineB && (i.intersect = !0),
                    i
                }
            }, {
                key: "segmentIntersect",
                value: function(e) {
                    var t, i = {
                        x: null,
                        y: null,
                        intersect: !1
                    }, a = Object(L["a"])(this.segments);
                    try {
                        for (a.s(); !(t = a.n()).done; ) {
                            var s = t.value
                              , n = this.segmentIntersectSegment(e, s);
                            n.intersect && (i.x = n.x,
                            i.y = n.y,
                            i.intersect = !0)
                        }
                    } catch (r) {
                        a.e(r)
                    } finally {
                        a.f()
                    }
                    return i
                }
            }]),
            e
        }()
          , fe = function() {
            function e(t) {
                var i = this;
                Object(M["a"])(this, e),
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.domElement = t.domElement,
                this.originalCamera = t.originalCamera,
                this.notFound = t.notFound,
                this.time = t.time,
                this.scene = t.scene,
                this.terrainData2Texture = t.terrainData2Texture,
                this.notFoundPosition = t.notFoundPosition,
                this.notFoundRotation = t.notFoundRotation,
                this.introPositionStart = t.introPositionStart,
                this.introRotationStart = t.introRotationStart,
                this.introPositionEnd = t.introPositionEnd,
                this.introRotationEnd = t.introRotationEnd,
                this.outroPositionEnd = t.outroPositionEnd,
                this.outroRotationEnd = t.outroRotationEnd,
                this.boundingPoints = t.boundingPoints,
                this.debug && (this.debugFolder = this.debug.addFolder("camera")),
                this.active = !1,
                this.playing = !0,
                this.mode = null,
                this.setInstance(),
                this.setControls(),
                this.setDrag(),
                this.setZoom(),
                this.setFloating(),
                this.setDive(),
                this.setAnimation(),
                this.time.on("tick", (function() {
                    i.active && i.playing && (i.originalCamera.position.copy(i.instance.position),
                    i.originalCamera.quaternion.copy(i.instance.quaternion))
                }
                ))
            }
            return Object(O["a"])(e, [{
                key: "setInstance",
                value: function() {
                    var e = this;
                    this.instance = this.originalCamera.clone(),
                    this.instance.rotation.order = "YXZ",
                    this.scene.add(this.instance),
                    this.instancePreviousPosition = this.instance.position.clone(),
                    this.instanceSpeed = 0,
                    this.sizes.on("resize", (function() {
                        e.instance.aspect = e.sizes.viewport.width / e.sizes.viewport.height,
                        e.instance.updateProjectionMatrix()
                    }
                    )),
                    this.time.on("tick", (function() {
                        e.active && e.playing && (e.controls && e.controls.active ? (e.instance.position.copy(e.controls.instance.position),
                        e.instance.quaternion.copy(e.controls.instance.quaternion)) : (e.instance.position.copy(e.animation.instance.position),
                        e.instance.quaternion.copy(e.animation.instance.quaternion)),
                        e.instanceSpeed = e.instancePreviousPosition.distanceTo(e.instance.position) * e.time.delta,
                        e.instancePreviousPosition.copy(e.instance.position))
                    }
                    ))
                }
            }, {
                key: "setControls",
                value: function() {
                    var e = this;
                    this.debug && (this.controls = {},
                    this.controls.active = !1,
                    this.controls.instance = this.instance.clone(),
                    this.controls.mapControls = new ge["a"](this.controls.instance,this.domElement),
                    this.controls.mapControls.enabled = this.controls.active,
                    this.controls.mapControls.enableDamping = !0,
                    this.controls.mapControls.dampingFactor = .1,
                    this.controls.mapControls.screenSpacePanning = !0,
                    this.controls.mapControls.zoomSpeed = .5,
                    this.controls.target = new q["T"](new q["Db"](.1,8,8),new q["U"]({
                        color: 16711680,
                        wireframe: !0
                    })),
                    this.controls.target.position.y = 0,
                    this.controls.target.position.x = 0,
                    this.controls.target.position.z = 0,
                    this.controls.mapControls.target = this.controls.target.position,
                    this.controls.mapControls.update(),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.controls.mapControls.update()
                    }
                    )),
                    this.debug && this.debugFolder.add(this.controls, "active").name("controlsActive").onChange((function() {
                        e.controls.mapControls.enabled = e.controls.active
                    }
                    )))
                }
            }, {
                key: "setDrag",
                value: function() {
                    var e = this;
                    this.drag = {},
                    this.drag.dragging = !1,
                    this.drag.previous = {},
                    this.drag.previous.x = 0,
                    this.drag.previous.y = 0,
                    this.drag.delta = {},
                    this.drag.delta.x = 0,
                    this.drag.delta.y = 0,
                    this.drag.start = function(t, i) {
                        e.drag.dragging = !0,
                        e.drag.previous.x = t,
                        e.drag.previous.y = i
                    }
                    ,
                    this.drag.move = function(t, i) {
                        e.drag.dragging && (e.drag.delta.x += (t - e.drag.previous.x) / Math.max(e.sizes.viewport.width, 600),
                        e.drag.delta.y += (i - e.drag.previous.y) / Math.max(e.sizes.viewport.height, 600),
                        e.drag.previous.x = t,
                        e.drag.previous.y = i)
                    }
                    ,
                    this.drag.end = function() {
                        e.drag.dragging = !1
                    }
                }
            }, {
                key: "setZoom",
                value: function() {
                    this.zoom = {},
                    this.zoom.speed = .001,
                    this.zoom.value = 0,
                    this.zoom.switchValue = .8
                }
            }, {
                key: "setFloating",
                value: function() {
                    var e = this;
                    this.floating = {},
                    this.floating.strength = 0,
                    this.floating.ratio = {},
                    this.floating.ratio.x = 0,
                    this.floating.ratio.y = 0,
                    this.floating.value = {},
                    this.floating.value.x = 0,
                    this.floating.value.y = 0,
                    this.floating.target = {},
                    this.floating.target.x = 0,
                    this.floating.target.y = 0,
                    this.floating.easing = .004,
                    this.floating.amplitude = {},
                    this.floating.amplitude.min = .0275,
                    this.floating.amplitude.max = .11,
                    this.floating.amplitude.value = .11,
                    window.addEventListener("mousemove", (function(t) {
                        e.active && e.playing && (e.floating.target.x = t.clientX / e.sizes.viewport.width - .5,
                        e.floating.target.y = t.clientY / e.sizes.viewport.height - .5)
                    }
                    )),
                    this.time.on("tick", (function() {
                        e.active && e.playing && (e.floating.value.x += (e.floating.target.x - e.floating.value.x) * e.floating.easing * e.time.delta,
                        e.floating.value.y += (e.floating.target.y - e.floating.value.y) * e.floating.easing * e.time.delta)
                    }
                    ))
                }
            }, {
                key: "setDive",
                value: function() {
                    this.dive = {},
                    this.dive.value = 0,
                    this.dive.amplitude = -.03
                }
            }, {
                key: "setAnimation",
                value: function() {
                    var e = this;
                    this.animation = {},
                    this.animation.easing = {
                        min: 0,
                        max: .004,
                        value: .004
                    },
                    this.animation.instance = this.instance.clone(),
                    this.animation.instance.rotation.order = "YXZ",
                    this.animation.elevation = {},
                    this.animation.elevation.mapSize = 10,
                    this.animation.elevation.amplitude = .75,
                    this.animation.elevation.min = 0,
                    this.animation.elevation.max = 6,
                    this.animation.elevation.offset = .75,
                    this.animation.elevation.canvasSize = 32,
                    this.animation.elevation.canvas = document.createElement("canvas"),
                    this.animation.elevation.canvas.width = this.animation.elevation.canvasSize,
                    this.animation.elevation.canvas.height = this.animation.elevation.canvasSize,
                    this.animation.elevation.context = this.animation.elevation.canvas.getContext("2d"),
                    this.animation.elevation.context.drawImage(this.terrainData2Texture.image, 0, 0, this.animation.elevation.canvasSize, this.animation.elevation.canvasSize),
                    this.animation.bounding = new ve(this.boundingPoints),
                    this.animation.position = {},
                    this.animation.position.value = new q["Rb"](1,5,1),
                    this.animation.position.targetValue = this.animation.position.value.clone(),
                    this.animation.rotation = {},
                    this.animation.rotation.value = new q["r"],
                    this.animation.rotation.value.order = "YXZ",
                    this.animation.rotation.targetValue = this.animation.rotation.value.clone(),
                    this.animation.rotation.tilt = {},
                    this.animation.rotation.tilt.min = -.15,
                    this.animation.rotation.tilt.amplitude = -.35,
                    this.animation.rotation.tilt.power = 3,
                    this.animation.rotation.pan = {},
                    this.animation.rotation.pan.speed = 2.25,
                    this.animation.map = {},
                    this.animation.map.speed = 2.25,
                    this.time.on("tick", (function() {
                        if (e.active && e.playing) {
                            var t = Math.min(Math.max(e.instance.position.x / e.animation.elevation.mapSize + .5, 0), 1) * e.animation.elevation.canvasSize
                              , i = Math.min(Math.max(e.instance.position.z / e.animation.elevation.mapSize + .5, 0), 1) * e.animation.elevation.canvasSize
                              , a = e.animation.elevation.context.getImageData(t, i, 1, 1)
                              , s = a.data[2] / 255 * e.animation.elevation.amplitude;
                            if (e.animation.elevation.min += (s - e.animation.elevation.min) * e.animation.easing.value * e.time.delta,
                            "free" === e.mode || "focus" === e.mode) {
                                if ("free" === e.mode) {
                                    e.animation.position.targetValue.y = Math.max((1 - e.zoom.value) * e.animation.elevation.max, e.animation.elevation.min) + e.animation.elevation.offset;
                                    var n = e.drag.delta.y * (-1 * e.animation.map.speed) * (1 - e.zoom.value + 1);
                                    if (e.animation.position.targetValue.z += Math.cos(e.animation.instance.rotation.y) * n,
                                    e.animation.position.targetValue.x += Math.sin(e.animation.instance.rotation.y) * n,
                                    e.zoom.value < e.zoom.switchValue) {
                                        var r = e.drag.delta.x * (-1 * e.animation.map.speed) * (1 - e.zoom.value + 1);
                                        e.animation.position.targetValue.z += Math.cos(e.animation.instance.rotation.y + .5 * Math.PI) * r,
                                        e.animation.position.targetValue.x += Math.sin(e.animation.instance.rotation.y + .5 * Math.PI) * r
                                    } else
                                        e.animation.rotation.targetValue.y += e.drag.delta.x * e.animation.rotation.pan.speed;
                                    e.animation.rotation.targetValue.x = 1 - e.zoom.value,
                                    e.animation.rotation.targetValue.x = 1 - Math.pow(1 - e.animation.rotation.targetValue.x, e.animation.rotation.tilt.power),
                                    e.animation.rotation.targetValue.x = e.animation.rotation.tilt.min * Math.PI + e.animation.rotation.targetValue.x * e.animation.rotation.tilt.amplitude * Math.PI;
                                    var o = {
                                        a: {
                                            x: 0,
                                            y: 0
                                        },
                                        b: {
                                            x: 10,
                                            y: 10
                                        }
                                    };
                                    o.b.x = e.animation.position.targetValue.x,
                                    o.b.y = e.animation.position.targetValue.z;
                                    var l = e.animation.bounding.segmentIntersect(o);
                                    l.intersect && (e.animation.position.targetValue.x = l.x,
                                    e.animation.position.targetValue.z = l.y)
                                }
                                e.animation.position.value.x += (e.animation.position.targetValue.x - e.animation.position.value.x) * e.animation.easing.value * e.time.delta,
                                e.animation.position.value.y += (e.animation.position.targetValue.y - e.animation.position.value.y) * e.animation.easing.value * e.time.delta,
                                e.animation.position.value.z += (e.animation.position.targetValue.z - e.animation.position.value.z) * e.animation.easing.value * e.time.delta,
                                e.animation.rotation.value.x += (e.animation.rotation.targetValue.x - e.animation.rotation.value.x) * e.animation.easing.value * e.time.delta,
                                e.animation.rotation.value.y += (e.animation.rotation.targetValue.y - e.animation.rotation.value.y) * e.animation.easing.value * e.time.delta,
                                e.animation.rotation.value.z += (e.animation.rotation.targetValue.z - e.animation.rotation.value.z) * e.animation.easing.value * e.time.delta
                            } else
                                "animated" === e.mode && (e.animation.position.targetValue.copy(e.animation.position.value),
                                e.animation.rotation.targetValue.copy(e.animation.rotation.value));
                            e.animation.instance.position.copy(e.animation.position.value),
                            e.animation.instance.rotation.copy(e.animation.rotation.value),
                            e.animation.instance.translateX(e.floating.value.x * e.floating.amplitude.value),
                            e.animation.instance.translateY(-e.floating.value.y * e.floating.amplitude.value + e.dive.value * e.dive.amplitude),
                            e.drag.delta.x = 0,
                            e.drag.delta.y = 0
                        }
                    }
                    ))
                }
            }, {
                key: "setMode",
                value: function(e) {
                    e !== this.mode && (this.mode = e,
                    this.mode)
                }
            }, {
                key: "goFocus",
                value: function(e) {
                    var t = this
                      , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (this.setMode("focus"),
                    i)
                        this.floating.amplitude.value = this.floating.amplitude.min,
                        this.animation.position.targetValue.x = e.coordinates.cameraFocus.position.x,
                        this.animation.position.targetValue.y = e.coordinates.cameraFocus.position.y,
                        this.animation.position.targetValue.z = e.coordinates.cameraFocus.position.z,
                        this.animation.rotation.targetValue.x = e.coordinates.cameraFocus.rotation.x,
                        this.animation.rotation.targetValue.y = e.coordinates.cameraFocus.rotation.y,
                        this.animation.rotation.targetValue.z = e.coordinates.cameraFocus.rotation.z,
                        this.animation.position.value.x = this.animation.position.targetValue.x,
                        this.animation.position.value.y = this.animation.position.targetValue.y,
                        this.animation.position.value.z = this.animation.position.targetValue.z,
                        this.animation.rotation.value.x = this.animation.rotation.targetValue.x,
                        this.animation.rotation.value.y = this.animation.rotation.targetValue.y,
                        this.animation.rotation.value.z = this.animation.rotation.targetValue.z;
                    else {
                        r["a"].to(this.floating.amplitude, {
                            value: this.floating.amplitude.min,
                            duration: 1
                        });
                        var a = r["a"].to(this.animation.position.targetValue, {
                            x: e.coordinates.cameraFocus.position.x,
                            y: e.coordinates.cameraFocus.position.y,
                            z: e.coordinates.cameraFocus.position.z,
                            duration: 2,
                            ease: "power2.inOut",
                            onUpdate: function() {
                                var e = .5 * Math.cos(a.progress() * Math.PI * 2 + Math.PI) + .5;
                                t.animation.position.targetValue.y += .2 * e
                            }
                        });
                        r["a"].to(this.animation.rotation.targetValue, {
                            x: e.coordinates.cameraFocus.rotation.x,
                            y: e.coordinates.cameraFocus.rotation.y,
                            duration: 2,
                            ease: "power2.inOut"
                        })
                    }
                }
            }, {
                key: "goFree",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.setMode("free"),
                    r["a"].fromTo(this.floating.amplitude, {
                        value: this.floating.amplitude.min
                    }, {
                        value: this.floating.amplitude.max,
                        duration: e,
                        ease: "power2.in"
                    }),
                    r["a"].fromTo(this.animation.easing, {
                        value: this.animation.easing.min
                    }, {
                        value: this.animation.easing.max,
                        duration: e,
                        ease: "power2.in"
                    })
                }
            }, {
                key: "playIntro",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    if (this.mode = "animated",
                    this.notFound)
                        return this.floating.amplitude.value = this.floating.amplitude.min,
                        this.animation.position.value.copy(this.notFoundPosition),
                        this.animation.rotation.value.set(this.notFoundRotation.x, this.notFoundRotation.y, 0),
                        void (this.notFound = !1);
                    this.animation.position.value.copy(this.introPositionStart),
                    r["a"].to(this.animation.position.value, Object(K["a"])(Object(K["a"])({}, this.introPositionEnd), {}, {
                        duration: 3
                    })),
                    this.animation.rotation.value.set(this.introRotationStart.x, this.introRotationStart.y, 0),
                    r["a"].to(this.animation.rotation.value, Object(K["a"])(Object(K["a"])({}, this.introRotationEnd), {}, {
                        duration: 3,
                        ease: "power1.inOut",
                        onComplete: function() {
                            e.zoom.value = 1,
                            "function" === typeof t && t()
                        }
                    }))
                }
            }, {
                key: "playOutro",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    this.mode = "animated",
                    r["a"].to(this.animation.position.value, Object(K["a"])(Object(K["a"])({}, this.outroPositionEnd), {}, {
                        duration: 3,
                        ease: "power2.in"
                    })),
                    r["a"].to(this.animation.rotation.value, Object(K["a"])(Object(K["a"])({}, this.outroRotationEnd), {}, {
                        duration: 3,
                        ease: "power1.inOut",
                        onComplete: function() {
                            "function" === typeof e && e()
                        }
                    }))
                }
            }, {
                key: "reset",
                value: function() {
                    this.animation.position.value.x = this.introPositionEnd.x,
                    this.animation.position.value.y = this.introPositionEnd.y,
                    this.animation.position.value.z = this.introPositionEnd.z,
                    this.animation.rotation.value.x = this.introRotationEnd.x,
                    this.animation.rotation.value.y = this.introRotationEnd.y,
                    this.animation.position.targetValue.copy(this.animation.position.value),
                    this.animation.rotation.targetValue.copy(this.animation.rotation.value)
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.active = !1
                }
            }, {
                key: "destroy",
                value: function() {
                    this.debug && (this.controls.mapControls.dispose(),
                    this.controls.target.material.dispose(),
                    this.controls.target.geometry.dispose())
                }
            }]),
            e
        }()
          , be = (i("d3b7"),
        i("cfc3"),
        i("9a8c"),
        i("a975"),
        i("735e"),
        i("c1ac"),
        i("d139"),
        i("3a7b"),
        i("d5d6"),
        i("82f8"),
        i("e91f"),
        i("60bd"),
        i("5f96"),
        i("3280"),
        i("3fcc"),
        i("ca91"),
        i("25a1"),
        i("cd26"),
        i("3c5d"),
        i("2954"),
        i("649e"),
        i("219c"),
        i("170b"),
        i("b39a"),
        i("72f7"),
        "#define GLSLIFY 1\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n// Custom start\nuniform mat3 normalMatrix;\n\nuniform sampler2D tPerlin;\nuniform vec3 uPencilColor;\nuniform vec3 uPaperColor;\nuniform sampler2D uTerrainData1;\nuniform sampler2D uTerrainData2;\nuniform float uTerrainAlphaMultiplier;\n\n#ifndef USE_STROKES_FALLBACK\n    varying vec3 vModelPosition;\n    varying vec3 vTangent;\n#endif\n\nvarying float vDepth;\nvarying vec2 vWorldUv;\nvarying float vAlpha;\n\n#ifndef USE_NORMALMAP\n    varying vec2 vUv;\n#endif\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nuniform float uSubdivision;\nuniform float uStrokeUvDim;\nuniform float uStrokeSmoothDepthAmplitude;\nuniform float uStrokeSmoothDepthOffset;\nuniform float uStrokeSmoothDepthMin;\nuniform float uStrokeSmoothDepthMax;\nuniform float uStrokeLightOffset;\nuniform float uStrokeLightMultiplier;\nuniform float uStrokeTreshold;\nuniform vec3 uStrokeDirection;\nuniform float uStrokeStrengthOffset;\nuniform float uStrokeStrengthAmplitude;\n\nfloat getPencilStrength(float _baseStrength, vec3 _position, vec3 _tangent, vec3 _biTangent, vec2 _uv, float _depth)\n{\n    vec3 farPoint = uStrokeDirection * 100.0;\n\n    // // Create far points\n    // if(length(farPoint) == 0.0)\n    // {\n    //     vec3 xFarPoint = _biTangent.xyz * 100.0;\n    //     vec3 yFarPoint = _tangent.xyz * 100.0;\n    //     farPoint = xFarPoint + yFarPoint;\n    // }\n\n    // Dim with uv Y\n    float uvDim = _uv.y * uStrokeUvDim;\n\n    // Base strength\n    float baseStrength = _baseStrength;\n    baseStrength += uStrokeLightOffset;\n    baseStrength *= uStrokeLightMultiplier;\n    baseStrength += uvDim * 0.2;\n\n    // Stroke\n    float stroke = distance(_position, farPoint);\n\n    stroke *= uSubdivision;\n    stroke = abs(mod(stroke, 1.0) - 0.5) * 2.0;\n    stroke += baseStrength;\n    stroke = clamp(stroke, 0.0, 1.0);\n    stroke = pow(stroke, 0.1);\n\n    stroke = mix(0.0, uStrokeTreshold, stroke);\n\n    // Stroke strength\n    float strokeStrength = 1.0 - clamp((_depth - uStrokeStrengthOffset) / uStrokeStrengthAmplitude, 0.0, 1.0);\n\n    // Final\n    float final = mix(clamp(_baseStrength, 0.0, 1.0), stroke, strokeStrength);\n\n    return final;\n}\n\n// Custom end\n\nvoid main()\n{\n    #include <clipping_planes_fragment>\n\n    vec4 diffuseColor = vec4(diffuse, opacity);\n    ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\n    vec3 totalEmissiveRadiance = emissive;\n\n    #include <logdepthbuf_fragment>\n    #include <map_fragment>\n    #include <color_fragment>\n    #include <alphamap_fragment>\n    #include <alphatest_fragment>\n    #include <specularmap_fragment>\n    #include <normal_fragment_begin>\n    #include <normal_fragment_maps>\n    #include <emissivemap_fragment>\n\n    // accumulation\n    #include <lights_phong_fragment>\n    #include <lights_fragment_begin>\n    #include <lights_fragment_maps>\n    #include <lights_fragment_end>\n\n    // modulation\n    #include <aomap_fragment>\n\n    vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n    // Custom start\n    vec4 terrainColor1 = texture2D(uTerrainData1, vWorldUv);\n    vec4 terrainColor2 = texture2D(uTerrainData2, vWorldUv);\n    float alpha = terrainColor2.r * (1.0 - terrainColor1.r * uTerrainAlphaMultiplier) * vAlpha;\n    // float alpha = mix(terrainColor2.r * (1.0 - terrainColor2.r), 1.0, 1.0 - uTerrainAlphaMultiplier);\n    // float alpha = terrainColor2.r * (1.0 - terrainColor2.r);\n\n    // Strokes\n    float baseStrength = 1.0 - (vColor.r * outgoingLight.r);\n\n    #ifdef USE_STROKES_FALLBACK\n        float pencilStrength = baseStrength;\n    #else\n        vec3 worldNormal = inverseTransformDirection(vNormal, viewMatrix);\n        vec3 worldTangent = inverseTransformDirection(vTangent, viewMatrix);\n        vec3 worldBiTangent = cross(worldTangent, worldNormal);\n        float pencilStrength = getPencilStrength(baseStrength, vModelPosition, worldTangent, worldBiTangent, vUv, vDepth);\n    #endif\n\n    // Normal\n    // vec3 normal = vNormal;\n\n    // #ifdef USE_NORMALMAP\n    //     normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n    // #endif\n\n    float normalStrength = packNormalToRGB(normal).r;\n\n    // Depth\n    float depth = 1.0 - clamp(vDepth * 0.4, 0.0, 1.0);\n\n    // Final color\n    vec3 color = vec3(normalStrength, pencilStrength, depth);\n    gl_FragColor = vec4(color, diffuseColor.a * alpha * vAlpha);\n    // Custom end\n\n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n    #include <fog_fragment>\n    #include <premultiplied_alpha_fragment>\n    #include <dithering_fragment>\n}\n")
          , xe = "#define GLSLIFY 1\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n// #ifndef FLAT_SHADED\n\n//     varying vec3 vNormal;\n\n// #endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// Custom start\nuniform sampler2D uTerrainData2;\nuniform float uTerrainSize;\nuniform float uTerrainElevation;\nuniform float uTerrainAlphaMultiplier;\nuniform float uWindTimeFrequency;\nuniform float uWindHeightStrength;\nuniform float uWindZFrequency;\nuniform float uWindXFrequency;\n\n#ifdef USE_WIND\n    uniform float uTime;\n#endif\n\nuniform float uRevealFar;\nuniform float uRevealAmplitude;\nuniform float uRevealRandomnessAmplitude;\nuniform float uRevealReverseFactor;\nuniform float uRevealProgress;\n\nattribute vec4 tangent;\n\n#ifndef USE_STROKES_FALLBACK\n    varying vec3 vModelPosition;\n    varying vec3 vTangent;\n#endif\n\nvarying float vDepth;\nvarying vec2 vWorldUv;\nvarying vec3 vNormal;\nvarying float vAlpha;\n\n#ifndef USE_NORMALMAP\n    uniform mat3 uvTransform;\n    varying vec2 vUv;\n#endif\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getRevealProgress(vec3 _position, vec3 _cameraPosition, float _far, float _amplitude, float _progress, float _randomnessAmplitude, float _reverseFactor)\n{\n    // Distance to camera\n    float distanceToCamera = distance(_cameraPosition.xz, _position.xz);\n\n    // Reverse\n    float progress = abs(_reverseFactor - _progress);\n\n    float randomness = (random2d(_position.xz) - 0.5) * _randomnessAmplitude;\n\n    // Base\n    float revealProgress = (distanceToCamera - (progress * (_far + _amplitude * 2.0 + _randomnessAmplitude) - _amplitude - _randomnessAmplitude * 0.5) + randomness) / (_amplitude);\n\n    // Clamp\n    revealProgress = clamp(revealProgress, 0.0, 1.0);\n\n    // Reverse\n    revealProgress = 1.0 - abs(_reverseFactor - revealProgress);\n\n    // Ease\n    revealProgress = 1.0 - pow(1.0 - revealProgress, 2.0);\n\n    return revealProgress;\n}\n\n// Custom end\n\nvoid main()\n{\n    #include <uv_vertex>\n    #include <uv2_vertex>\n    #include <color_vertex>\n\n    #include <beginnormal_vertex>\n    #include <morphnormal_vertex>\n    #include <skinbase_vertex>\n    #include <skinnormal_vertex>\n    #include <defaultnormal_vertex>\n\n// #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n//     vNormal = normalize( transformedNormal );\n\n// #endif\n\n    #include <begin_vertex>\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n\n    // Custom start\n    vNormal = normalize( transformedNormal );\n    vec4 worldPosition = modelMatrix * vec4(transformed, 1.0);\n\n    #ifdef USE_INSTANCING\n\n        worldPosition = instanceMatrix * worldPosition;\n\n    #endif\n\n    vec4 baseWorldPosition = worldPosition;\n\n    #ifndef USE_STROKES_FALLBACK\n        vModelPosition = worldPosition.xyz;\n    #endif\n\n    vec2 worldUv = worldPosition.xz / uTerrainSize + 0.5;\n    worldUv.y = 1.0 - worldUv.y;\n    vWorldUv = worldUv;\n\n    vec4 terrainColor = texture2D(uTerrainData2, worldUv);\n    float elevation = terrainColor.b * uTerrainElevation;\n    worldPosition.y += elevation;\n\n    #ifdef USE_WIND\n\n        float windHeightStrength = clamp(abs(worldPosition.y - elevation) * uWindHeightStrength, 0.0, 1.0);\n        worldPosition.x += sin(uTime * uWindTimeFrequency + worldPosition.z * uWindZFrequency) * windHeightStrength;\n        worldPosition.z += sin(uTime * uWindTimeFrequency + worldPosition.x * uWindXFrequency) * windHeightStrength;\n\n    #endif\n\n    // Reveal\n    float revealProgress = getRevealProgress(worldPosition.xyz, cameraPosition, uRevealFar, uRevealAmplitude, uRevealProgress, uRevealRandomnessAmplitude, uRevealReverseFactor);\n\n    // Alpha\n    vAlpha = revealProgress;\n\n    vec4 mvPosition = viewMatrix * worldPosition;\n    gl_Position = projectionMatrix * mvPosition;\n    // Custom end\n\n    // #include <project_vertex>\n    #include <logdepthbuf_vertex>\n    #include <clipping_planes_vertex>\n\n    vViewPosition = - mvPosition.xyz;\n\n    // Custom start\n    // vec4 temp = modelMatrix * tangent;\n    #ifndef USE_STROKES_FALLBACK\n        vTangent = normalize(normalMatrix * tangent.xyz);\n    #endif\n\n    #ifndef USE_NORMALMAP\n        vUv = (uvTransform * vec3(uv, 1)).xy;\n    #endif\n    // Custom end\n\n    // #include <worldpos_vertex>\n    #include <envmap_vertex>\n\n    worldPosition = baseWorldPosition;\n    #include <shadowmap_vertex>\n\n    // // Custom start\n    // #ifdef USE_SHADOWMAP\n    //     #if 2 > 0\n\n    //         vDirectionalShadowCoord[ 0 ] = directionalShadowMatrix[ 0 ] * baseWorldPosition;\n\n    //         vDirectionalShadowCoord[ 1 ] = directionalShadowMatrix[ 1 ] * baseWorldPosition;\n\n    //     #endif\n    //     #if 0 > 0\n\n    //     #endif\n    //     #if 0 > 0\n\n    //     #endif\n    // #endif\n\n    vDepth = gl_Position.w;\n    // Custom end\n\n    #include <fog_vertex>\n}\n"
          , ye = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = q["Pb"].merge([q["Ob"].common, q["Ob"].specularmap, q["Ob"].envmap, q["Ob"].aomap, q["Ob"].lightmap, q["Ob"].emissivemap, q["Ob"].bumpmap, q["Ob"].normalmap, q["Ob"].displacementmap, q["Ob"].gradientmap, q["Ob"].fog, q["Ob"].lights, Object(K["a"])({
                emissive: {
                    value: new q["j"](0)
                },
                specular: {
                    value: new q["j"](0)
                },
                shininess: {
                    value: 1
                },
                tPerlin: {
                    value: null
                },
                uTerrainData1: {
                    value: null
                },
                uTerrainData2: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                },
                uTerrainAlphaMultiplier: {
                    value: null
                },
                uPencilColor: {
                    value: null
                },
                uPaperColor: {
                    value: null
                },
                uSubdivision: {
                    value: null
                },
                uStrokeUvDim: {
                    value: null
                },
                uStrokeSmoothDepthAmplitude: {
                    value: null
                },
                uStrokeSmoothDepthOffset: {
                    value: null
                },
                uStrokeSmoothDepthMin: {
                    value: null
                },
                uStrokeSmoothDepthMax: {
                    value: null
                },
                uStrokeLightOffset: {
                    value: null
                },
                uStrokeLightMultiplier: {
                    value: null
                },
                uStrokeTreshold: {
                    value: null
                },
                uStrokeDirection: {
                    value: null
                },
                uStrokeStrengthOffset: {
                    value: null
                },
                uStrokeStrengthAmplitude: {
                    value: null
                },
                uWindTimeFrequency: {
                    value: null
                },
                uWindHeightStrength: {
                    value: null
                },
                uWindZFrequency: {
                    value: null
                },
                uWindXFrequency: {
                    value: null
                },
                uTime: {
                    value: null
                },
                uRevealFar: {
                    value: null
                },
                uRevealAmplitude: {
                    value: null
                },
                uRevealRandomnessAmplitude: {
                    value: null
                },
                uRevealReverseFactor: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                }
            }, e.uniforms)]);
            t.diffuse.value = new q["j"](e.color),
            t.emissive.value = new q["j"](e.emissive),
            t.specular.value = new q["j"](0),
            t.normalMap.value = e.normalMap,
            t.tPerlin.value = e.perlin,
            t.uTerrainData1.value = e.terrainData1,
            t.uTerrainData2.value = e.terrainData2,
            t.uTerrainSize.value = e.terrainSize,
            t.uTerrainElevation.value = e.terrainElevation,
            t.uTerrainAlphaMultiplier.value = e.terrainAlphaMultiplier,
            t.uPencilColor.value = e.pencilColor,
            t.uPaperColor.value = e.paperColor,
            t.uSubdivision.value = e.subdivision,
            t.uStrokeUvDim.value = e.strokeUvDim,
            t.uStrokeSmoothDepthAmplitude.value = e.strokeSmoothDepthAmplitude,
            t.uStrokeSmoothDepthOffset.value = e.strokeSmoothDepthOffset,
            t.uStrokeSmoothDepthMin.value = e.strokeSmoothDepthMin,
            t.uStrokeSmoothDepthMax.value = e.strokeSmoothDepthMax,
            t.uStrokeLightOffset.value = e.strokeLightOffset,
            t.uStrokeLightMultiplier.value = e.strokeLightMultiplier,
            t.uStrokeTreshold.value = e.strokeTreshold,
            t.uStrokeDirection.value = e.strokeDirection,
            t.uStrokeStrengthOffset.value = e.strokeStrengthOffset,
            t.uStrokeStrengthAmplitude.value = e.strokeStrengthAmplitude,
            t.uWindTimeFrequency.value = e.windTimeFrequency,
            t.uWindHeightStrength.value = e.windHeightStrength,
            t.uWindZFrequency.value = e.windZFrequency,
            t.uWindXFrequency.value = e.windXFrequency,
            t.uTime.value = 0,
            t.uRevealFar.value = 9,
            t.uRevealAmplitude.value = 4,
            t.uRevealRandomnessAmplitude.value = 0,
            t.uRevealReverseFactor.value = 1,
            t.uRevealProgress.value = 1,
            t.normalScale.value.x = 1,
            t.normalScale.value.y = 1;
            var i = {
                derivatives: !0,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            }
              , a = {
                PHONG: "",
                USE_COLOR: ""
            };
            e.wind && (a.USE_WIND = ""),
            e.instancing && (a.USE_INSTANCING = "");
            var s = new q["zb"]({
                wireframe: !1,
                transparent: !0,
                depthTest: !0,
                depthWrite: !0,
                uniforms: t,
                extensions: i,
                defines: a,
                lights: !0,
                vertexShader: xe,
                fragmentShader: be
            });
            return s
        }
          , we = "#define GLSLIFY 1\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\n\t#endif\n\n}\n"
          , Te = "#define GLSLIFY 1\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// Custom start\nuniform sampler2D uTerrainData2;\nuniform float uTerrainSize;\nuniform float uTerrainElevation;\n// Custom end\n\nvoid main() {\n\n    #include <uv_vertex>\n\n    #include <skinbase_vertex>\n\n    #ifdef USE_DISPLACEMENTMAP\n\n        #include <beginnormal_vertex>\n        #include <morphnormal_vertex>\n        #include <skinnormal_vertex>\n\n    #endif\n\n    #include <begin_vertex>\n    #include <morphtarget_vertex>\n    #include <skinning_vertex>\n    #include <displacementmap_vertex>\n\n    // Custom start\n    vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n    #ifdef USE_INSTANCING\n\n        worldPosition = instanceMatrix * worldPosition;\n\n    #endif\n\n    vec2 worldUv = worldPosition.xz / uTerrainSize + 0.5;\n    worldUv.y = 1.0 - worldUv.y;\n\n    vec4 terrainColor = texture2D(uTerrainData2, worldUv);\n    worldPosition.y += terrainColor.b * uTerrainElevation;\n\n    vec4 mvPosition = viewMatrix * worldPosition;\n    gl_Position = projectionMatrix * mvPosition;\n    // Custom end\n\n    // #include <project_vertex>\n    #include <logdepthbuf_vertex>\n    #include <clipping_planes_vertex>\n\n}\n"
          , Se = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = Object(K["a"])(Object(K["a"])({}, q["Ob"].common), {}, {
                uTerrainData2: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                }
            });
            t.uTerrainData2.value = e.terrainData2,
            t.uTerrainSize.value = e.terrainSize,
            t.uTerrainElevation.value = e.terrainElevation;
            var i = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            }
              , a = {};
            e.instancing && (a.USE_INSTANCING = "");
            var s = new q["zb"]({
                wireframe: !1,
                transparent: !1,
                depthTest: !1,
                depthWrite: !1,
                lights: !1,
                uniforms: t,
                extensions: i,
                defines: a,
                vertexShader: Te,
                fragmentShader: we
            });
            return s.side = q["o"],
            s.depthPacking = q["rb"],
            s.blending = q["db"],
            s
        }
          , ke = "#define GLSLIFY 1\nuniform sampler2D uStreetsTexture;\nuniform vec3 uPencilColor;\nuniform vec3 uPaperColor;\nuniform float uAlpha;\n\nvarying vec2 vUv;\nvarying float vAlpha;\n\nvoid main()\n{\n    vec4 streetsColor = texture2D(uStreetsTexture, vUv);\n    vec3 color = mix(uPencilColor, uPaperColor, streetsColor.r);\n\n    gl_FragColor = vec4(color, streetsColor.a * uAlpha * vAlpha);\n}\n"
          , Pe = "#define GLSLIFY 1\nuniform sampler2D uTerrainData2;\nuniform float uTerrainSize;\nuniform float uTerrainElevation;\n\nvarying vec2 vUv;\nvarying float vAlpha;\n\nvoid main()\n{\n    /**\n     * World UV\n     */\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    vec2 worldUv = modelPosition.xz / uTerrainSize + 0.5;\n    worldUv.y = 1.0 - worldUv.y;\n\n    vec4 terrainColor = texture2D(uTerrainData2, worldUv);\n\n    /**\n     * Position\n     */\n    // Terrain elevation\n    modelPosition.y += terrainColor.b * uTerrainElevation;\n\n    // Projection\n    vec4 viewPosition = viewMatrix * modelPosition;\n    gl_Position = projectionMatrix * viewPosition;\n\n    /**\n     * UV\n     */\n    vUv = vec2(uv.x, 1.0 - uv.y);\n\n    /**\n     * Alpha\n     */\n    vec2 screenPosition = gl_Position.xy / gl_Position.w;\n    vAlpha = 1.0 - clamp((distance(screenPosition, vec2(0.0)) - 0.5) * 1.5, 0.0, 1.0);\n}\n"
          , Ce = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uTerrainData2: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                },
                uStreetsTexture: {
                    value: null
                },
                uPencilColor: {
                    value: null
                },
                uPaperColor: {
                    value: null
                },
                uAlpha: {
                    value: null
                }
            };
            t.uTerrainData2.value = e.terrainData2,
            t.uTerrainSize.value = e.terrainSize,
            t.uTerrainElevation.value = e.terrainElevation,
            t.uStreetsTexture.value = e.streetsTexture,
            t.uPencilColor.value = e.pencilColor,
            t.uPaperColor.value = e.paperColor,
            t.uAlpha.value = e.alpha;
            var i = {}
              , a = new q["zb"]({
                transparent: !0,
                depthTest: !1,
                depthWrite: !1,
                lights: !1,
                uniforms: t,
                defines: i,
                vertexShader: Pe,
                fragmentShader: ke
            });
            return a
        }
          , ze = "#define GLSLIFY 1\nuniform vec3 uColor;\n\nvarying float vAlpha;\n\nvoid main()\n{\n    gl_FragColor = vec4(uColor, vAlpha);\n}\n"
          , Re = "#define GLSLIFY 1\nuniform sampler2D uTerrainData2;\nuniform float uTerrainSize;\nuniform float uTerrainElevation;\nuniform vec3 uCameraPosition;\nuniform float uWingTimeFrequency;\nuniform float uWingAmplitude;\nuniform float uAlpha;\nuniform float uAlphaDistanceAmplitude;\nuniform float uAlphaDistanceMin;\nuniform float uAlphaCameraAmplitude;\nuniform float uAlphaCameraMin;\nuniform float uTime;\n\nattribute float wingDistance;\n\nvarying float vAlpha;\n\nvoid main()\n{\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    #ifdef USE_INSTANCING\n\n        modelPosition = instanceMatrix * modelPosition;\n\n    #endif\n\n    // World UV\n    vec2 worldUv = modelPosition.xz / uTerrainSize + 0.5;\n    worldUv.y = 1.0 - worldUv.y;\n\n    // Elevation\n    vec4 terrainColor = texture2D(uTerrainData2, worldUv);\n    float elevation = terrainColor.b * uTerrainElevation;\n    modelPosition.y += elevation;\n\n    // Wing\n    modelPosition.y += sin(uTime * uWingTimeFrequency - wingDistance * 2.0) * uWingAmplitude * wingDistance;\n    // modelPosition.y += sin(uTime * uWingTimeFrequency + 0.25) * 0.0025;\n\n    // Alpha\n    float distanceToCenter = distance(modelPosition.xz, vec2(0.0));\n    float distanceAlpha = 1.0 - clamp((distanceToCenter - uAlphaDistanceMin) / uAlphaDistanceAmplitude, 0.0, 1.0);\n\n    float distanceToCamera = distance(modelPosition.xyz, uCameraPosition);\n    float cameraAlpha = clamp((distanceToCamera - uAlphaCameraMin) / uAlphaCameraAmplitude, 0.0, 1.0);\n\n    vAlpha = min(distanceAlpha, cameraAlpha) * uAlpha;\n\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\n}\n"
          , Fe = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uTerrainData2: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                },
                uCameraPosition: {
                    value: null
                },
                uColor: {
                    value: null
                },
                uWingTimeFrequency: {
                    value: null
                },
                uWingAmplitude: {
                    value: null
                },
                uAlpha: {
                    value: null
                },
                uAlphaDistanceAmplitude: {
                    value: null
                },
                uAlphaDistanceMin: {
                    value: null
                },
                uAlphaCameraAmplitude: {
                    value: null
                },
                uAlphaCameraMin: {
                    value: null
                },
                uTime: {
                    value: null
                }
            };
            t.uTerrainData2.value = e.terrainData2,
            t.uTerrainSize.value = e.terrainSize,
            t.uTerrainElevation.value = e.terrainElevation,
            t.uCameraPosition.value = new q["Rb"],
            t.uColor.value = e.color,
            t.uWingTimeFrequency.value = .005,
            t.uWingAmplitude.value = .01,
            t.uAlpha.value = 1,
            t.uAlphaDistanceAmplitude.value = .5,
            t.uAlphaDistanceMin.value = 3,
            t.uAlphaCameraAmplitude.value = .2,
            t.uAlphaCameraMin.value = .45,
            t.uTime.value = 0;
            var i = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            }
              , a = {
                USE_INSTANCING: ""
            }
              , s = new q["zb"]({
                wireframe: !1,
                transparent: !0,
                depthTest: !0,
                depthWrite: !0,
                lights: !1,
                side: q["o"],
                uniforms: t,
                extensions: i,
                defines: a,
                vertexShader: Re,
                fragmentShader: ze
            });
            return s
        }
          , Ae = "#define GLSLIFY 1\nuniform vec3 uColor;\n\nvoid main()\n{\n    gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}\n"
          , Le = "#define GLSLIFY 1\nuniform float uTime;\nuniform float uPositionAmplitude;\nuniform float uPointSize;\nuniform float uPointSizeProximityOffset;\nuniform float uPointSizeProximityAmplitude;\nuniform float uWindSpeed;\nuniform float uWindTurbulenceAmplitude;\nuniform float uWindTurbulenceFrequency;\n\nattribute float random;\n// #pragma glslify: random = require(../partials/random.glsl)\n\nvoid main()\n{\n    /**\n     * Position\n     */\n    vec3 newPosition = position;\n    float angle = 1.0;\n    newPosition.x += sin(angle) * uTime * uWindSpeed;\n    newPosition.z += cos(angle) * uTime * uWindSpeed;\n    newPosition.y += cos(uTime * uWindTurbulenceFrequency + position.x * 6.0) * uWindTurbulenceAmplitude;\n    newPosition -= cameraPosition;\n\n    newPosition = mod(newPosition.xyz, vec3(uPositionAmplitude * 2.0));\n    newPosition -= vec3(uPositionAmplitude);\n\n    vec4 viewPosition = modelViewMatrix * vec4(newPosition, 1.0);\n    gl_Position = projectionMatrix * viewPosition;\n\n    /**\n     * Size\n     */\n    // Base size\n    gl_PointSize = uPointSize;\n\n    // Distance attenuation\n    gl_PointSize *= 1.0 - clamp(- viewPosition.z / uPositionAmplitude, 0.0, 1.0);\n\n    // Proximity attenuation\n    float proximityAttenuation = clamp((- viewPosition.z - uPointSizeProximityOffset) / uPointSizeProximityAmplitude, 0.0, 1.0);\n    gl_PointSize *= proximityAttenuation;\n    gl_PointSize *= step(1.0, gl_PointSize);\n\n    // Random\n    gl_PointSize *= random;\n}\n"
          , Ee = function() {
            var e = {
                uTime: {
                    value: null
                },
                uColor: {
                    value: null
                },
                uPositionAmplitude: {
                    value: null
                },
                uPointSize: {
                    value: null
                },
                uPointSizeProximityOffset: {
                    value: null
                },
                uPointSizeProximityAmplitude: {
                    value: null
                },
                uWindSpeed: {
                    value: null
                },
                uWindTurbulenceAmplitude: {
                    value: null
                },
                uWindTurbulenceFrequency: {
                    value: null
                }
            }
              , t = {}
              , i = new q["zb"]({
                lights: !1,
                uniforms: e,
                defines: t,
                vertexShader: Le,
                fragmentShader: Ae
            });
            return i
        }
          , Me = "#define GLSLIFY 1\nuniform sampler2D uTerrainData1;\nuniform sampler2D uTerrainData2;\nuniform sampler2D uNormalMap;\nuniform float uNormalMultiplier;\nuniform float uPencilMultiplier;\nuniform float uPencilStep;\nuniform float uShadowMultiplier;\n\nvarying float vDepth;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying float vAlpha;\n\nvec3 packNormalToRGB(const in vec3 normal)\n{\n    return normalize( normal ) * 0.5 + 0.5;\n}\n\nvoid main()\n{\n    vec4 terrainColor1 = texture2D(uTerrainData1, vUv);\n    vec4 terrainColor2 = texture2D(uTerrainData2, vUv);\n\n    // Normal\n    vec3 normal = vNormal;\n    normal = texture2D(uNormalMap, vUv).xyz * 2.0 - 1.0;\n    float normalStrength = packNormalToRGB(normal).r;\n    normalStrength *= uNormalMultiplier;\n\n    // Pencil\n    float pencilStrength = step(uPencilStep, terrainColor1.g) * uPencilMultiplier; // Fields and trees color\n    pencilStrength += (1.0 - terrainColor1.b) * uShadowMultiplier; // Shadow\n    \n    // Depth\n    float depth = 1.0 - clamp(vDepth * 0.4, 0.0, 1.0);\n\n    // Final color\n    vec4 color = vec4(normalStrength, pencilStrength, depth, (1.0 - terrainColor1.r) * terrainColor2.r * vAlpha);\n    gl_FragColor = color;\n}\n"
          , Oe = "#define GLSLIFY 1\nuniform vec3 uCameraPosition;\nuniform sampler2D uTerrainData2;\nuniform float uTerrainElevation;\n\nuniform float uRevealFar;\nuniform float uRevealAmplitude;\nuniform float uRevealRandomnessAmplitude;\nuniform float uRevealReverseFactor;\nuniform float uRevealProgress;\n\nvarying float vDepth;\nvarying float vAlpha;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getRevealProgress(vec3 _position, vec3 _cameraPosition, float _far, float _amplitude, float _progress, float _randomnessAmplitude, float _reverseFactor)\n{\n    // Distance to camera\n    float distanceToCamera = distance(_cameraPosition.xz, _position.xz);\n\n    // Reverse\n    float progress = abs(_reverseFactor - _progress);\n\n    float randomness = (random2d(_position.xz) - 0.5) * _randomnessAmplitude;\n\n    // Base\n    float revealProgress = (distanceToCamera - (progress * (_far + _amplitude * 2.0 + _randomnessAmplitude) - _amplitude - _randomnessAmplitude * 0.5) + randomness) / (_amplitude);\n\n    // Clamp\n    revealProgress = clamp(revealProgress, 0.0, 1.0);\n\n    // Reverse\n    revealProgress = 1.0 - abs(_reverseFactor - revealProgress);\n\n    // Ease\n    revealProgress = 1.0 - pow(1.0 - revealProgress, 2.0);\n\n    return revealProgress;\n}\n\nvoid main()\n{\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n    vec4 terrainColor = texture2D(uTerrainData2, uv);\n    float elevation = terrainColor.b * uTerrainElevation;\n    modelPosition.y += elevation;\n\n    // Reveal\n    float revealProgress = getRevealProgress(modelPosition.xyz, uCameraPosition, uRevealFar, uRevealAmplitude, uRevealProgress, uRevealRandomnessAmplitude, uRevealReverseFactor);\n\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\n\n    // Alpha\n    vAlpha = revealProgress;\n\n    // Normal\n    vec3 transformedNormal = normalMatrix * normal;\n    vNormal = normalize(transformedNormal);\n\n    // UV\n    vUv = uv;\n\n    // Depth\n    vDepth = gl_Position.w;\n}\n"
          , Be = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uCameraPosition: {
                    value: null
                },
                uTerrainData1: {
                    value: null
                },
                uTerrainData2: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                },
                uTerrainAlphaMultiplier: {
                    value: null
                },
                uNormalMap: {
                    value: null
                },
                uNormalMultiplier: {
                    value: null
                },
                uPencilMultiplier: {
                    value: null
                },
                uPencilStep: {
                    value: null
                },
                uShadowMultiplier: {
                    value: null
                },
                uRevealFar: {
                    value: null
                },
                uRevealAmplitude: {
                    value: null
                },
                uRevealRandomnessAmplitude: {
                    value: null
                },
                uRevealReverseFactor: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                }
            };
            t.uCameraPosition.value = new q["Rb"],
            t.uTerrainData1.value = e.terrainData1,
            t.uTerrainData2.value = e.terrainData2,
            t.uTerrainSize.value = e.terrainSize,
            t.uTerrainElevation.value = e.terrainElevation,
            t.uTerrainAlphaMultiplier.value = e.terrainAlphaMultiplier,
            t.uNormalMap.value = e.normalMap,
            t.uNormalMultiplier.value = 1.2,
            t.uPencilMultiplier.value = .4,
            t.uPencilStep.value = .09,
            t.uShadowMultiplier.value = 1,
            t.uRevealFar.value = 9,
            t.uRevealAmplitude.value = 4,
            t.uRevealRandomnessAmplitude.value = 0,
            t.uRevealReverseFactor.value = 1,
            t.uRevealProgress.value = 0;
            var i = {
                derivatives: !1,
                fragDepth: !1,
                drawBuffers: !1,
                shaderTextureLOD: !1
            }
              , a = {}
              , s = new q["zb"]({
                wireframe: !1,
                transparent: !0,
                depthTest: !0,
                depthWrite: !0,
                lights: !1,
                uniforms: t,
                extensions: i,
                defines: a,
                vertexShader: Oe,
                fragmentShader: Me
            });
            return s
        }
          , Ie = "#define GLSLIFY 1\nuniform sampler2D uBase;\nuniform float uStrength;\nuniform float uResolution;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    float offset = 1.0 / uResolution;\n\n    float heightSampleCenter = texture2D(uBase, vUv).g;\n    float heightSampleRight = texture2D(uBase, vUv + vec2(offset, 0.0)).g;\n    float heightSampleUp = texture2D(uBase, vUv + vec2(0.0, offset)).g;\n\n    float sampleDeltaRight = heightSampleRight - heightSampleCenter;\n    float sampleDeltaUp = heightSampleUp - heightSampleCenter;\n\n    vec3 normal = cross(\n        vec3(1.0, 0.0, sampleDeltaRight * uStrength),\n        vec3(0.0, 1.0, sampleDeltaUp * uStrength)\n    );\n\n    normal = normalize(normal);\n\n    normal += 1.0;\n    normal /= 2.0;\n\n    gl_FragColor = vec4(vec3(normal), 1.0);\n}\n"
          , qe = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = vec4(position * 2.0, 1.0);\n}\n"
          , De = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return new q["zb"]({
                transparent: !1,
                lights: !1,
                uniforms: {
                    uResolution: {
                        type: "f",
                        value: e.resolution
                    },
                    uBase: {
                        type: "t",
                        value: e.base
                    },
                    uStrength: {
                        type: "f",
                        value: e.strength
                    }
                },
                vertexShader: qe,
                fragmentShader: Ie
            })
        }
          , Ve = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.renderer = t.renderer,
                this.resolution = t.resolution,
                this.base = t.base,
                this.strength = t.strength,
                this.scene = new q["yb"],
                this.camera = new q["gb"](-1,1,1,-1,.1,10),
                this.camera.position.z = 3,
                this.renderTarget = new q["Ub"](this.resolution,this.resolution,{
                    minFilter: q["J"],
                    magFilter: q["J"]
                }),
                this.geometry = new q["jb"](1,1,1,1),
                this.material = new De({
                    resolution: this.resolution,
                    base: this.base,
                    strength: this.strength
                }),
                this.mesh = new q["T"](this.geometry,this.material),
                this.mesh.matrixAutoUpdate = !1,
                this.scene.add(this.mesh)
            }
            return Object(O["a"])(e, [{
                key: "render",
                value: function() {
                    this.renderer.instance.setRenderTarget(this.renderTarget),
                    this.renderer.instance.render(this.scene, this.camera),
                    this.renderer.instance.setRenderTarget(null)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.scene.dispose(),
                    this.renderTarget.dispose(),
                    this.geometry.dispose(),
                    this.material.dispose()
                }
            }]),
            e
        }();
        i("fb2c");
        function Ne(e, t, i, a) {
            var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};
            q["f"].call(this),
            this.parameters = {
                width: e,
                height: t,
                widthSegments: i,
                heightSegments: a
            },
            this.type = "PlaneBufferGeometry";
            var n, r, o = e || 1, l = t || 1, u = o / 2, h = l / 2, c = Math.floor(i) || 1, d = Math.floor(a) || 1, m = c + 1, p = d + 1, g = o / c, v = l / d, f = m * p, b = new Float32Array(3 * f), x = new Float32Array(3 * f), y = new Float32Array(2 * f), w = new Float32Array(f), T = new Uint32Array(6 * f), S = 0;
            for (r = 0; r < p; r++) {
                var k = r * v - h;
                for (n = 0; n < m; n++) {
                    var P = n * g - u;
                    b[3 * S + 0] = P,
                    b[3 * S + 1] = -k,
                    b[3 * S + 2] = 0,
                    s.normal && (x[3 * S + 0] = 0,
                    x[3 * S + 1] = 0,
                    x[3 * S + 2] = 1),
                    s.uv && (y[2 * S + 0] = n / c,
                    y[2 * S + 1] = 1 - r / d),
                    s.random && (w[2 * S] = Math.random()),
                    S += 1
                }
            }
            for (S = 0,
            r = 0; r < d; r++)
                for (n = 0; n < c; n++) {
                    var C = n + m * r
                      , z = n + m * (r + 1)
                      , R = n + 1 + m * (r + 1)
                      , F = n + 1 + m * r;
                    T[6 * S + 0] = C,
                    T[6 * S + 1] = z,
                    T[6 * S + 2] = F,
                    T[6 * S + 3] = z,
                    T[6 * S + 4] = R,
                    T[6 * S + 5] = F,
                    S++
                }
            this.setIndex(new q["e"](T,1,!1)),
            this.setAttribute("position", new q["u"](b,3)),
            s.normal && this.setAttribute("normal", new q["u"](x,3)),
            s.uv && this.setAttribute("uv", new q["u"](y,2)),
            s.random && this.setAttribute("random", new q["u"](w,1))
        }
        function He(e, t, i, a) {
            q["f"].call(this),
            this.parameters = {
                width: e,
                depth: t,
                count: a
            },
            this.type = "BirdBufferGeometry";
            for (var s = 8, n = 3 * s, r = 6 * s, o = new Float32Array(a * n), l = new Uint32Array(a * r), u = new Float32Array(a * s), h = 0; h < a; h++) {
                u[h * s + 0] = 0,
                u[h * s + 1] = 0,
                u[h * s + 2] = .5,
                u[h * s + 3] = .5,
                u[h * s + 4] = 1,
                u[h * s + 5] = 1,
                u[h * s + 6] = .5,
                u[h * s + 7] = .5;
                var c = h * n;
                o[0 * c] = 0,
                o[c + 1] = 0,
                o[c + 2] = i,
                o[c + 3] = 0,
                o[c + 4] = 0,
                o[c + 5] = 1 * t + i,
                o[c + 6] = .5 * e,
                o[c + 7] = 0,
                o[c + 8] = .5 * i,
                o[c + 9] = -.5 * e,
                o[c + 10] = 0,
                o[c + 11] = .5 * i,
                o[c + 12] = 1 * e,
                o[c + 13] = 0,
                o[c + 14] = 0,
                o[c + 15] = -1 * e,
                o[c + 16] = 0,
                o[c + 17] = 0,
                o[c + 18] = .5 * e,
                o[c + 19] = 0,
                o[c + 20] = .5 * t + .5 * i,
                o[c + 21] = -.5 * e,
                o[c + 22] = 0,
                o[c + 23] = .5 * t + .5 * i;
                var d = h * r;
                l[d + 0] = 1,
                l[d + 1] = 6,
                l[d + 2] = 0,
                l[d + 3] = 7,
                l[d + 4] = 1,
                l[d + 5] = 0,
                l[d + 6] = 6,
                l[d + 7] = 2,
                l[d + 8] = 0,
                l[d + 9] = 3,
                l[d + 10] = 7,
                l[d + 11] = 0,
                l[d + 12] = 6,
                l[d + 13] = 4,
                l[d + 14] = 2,
                l[d + 15] = 5,
                l[d + 16] = 7,
                l[d + 17] = 3
            }
            this.setIndex(new q["e"](l,1,!1)),
            this.setAttribute("position", new q["u"](o,3)),
            this.setAttribute("wingDistance", new q["u"](u,1))
        }
        Ne.prototype = Object.create(q["f"].prototype),
        Ne.prototype.constructor = Ne,
        He.prototype = Object.create(q["f"].prototype),
        He.prototype.constructor = He;
        var _e = "#define GLSLIFY 1\nuniform sampler2D uMaskTexture;\nuniform vec3 uColor;\nuniform sampler2D uRevealTexture;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\nuniform float uRevealProgress;\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    // Reveal perlin progress\n    float revealPerlinProgress = getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uRevealProgress, 0.0);\n\n    // Reveal\n    float mask = texture2D(uMaskTexture, vUv).r;\n\n    // Final color\n    gl_FragColor = vec4(uColor, mask * revealPerlinProgress);\n}\n"
          , je = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    vUv = vec2(uv.x, 1.0 - uv.y);\n}\n"
          , Ue = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uMaskTexture: {
                    value: null
                },
                uColor: {
                    value: null
                },
                uRevealTexture: {
                    value: null
                },
                uRevealTextureFrequency: {
                    value: null
                },
                uRevealRandomFrequency: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                }
            };
            t.uMaskTexture.value = e.maskTexture,
            t.uColor.value = e.color,
            t.uRevealTexture.value = e.revealTexture,
            t.uRevealTextureFrequency.value = e.revealTextureFrequency,
            t.uRevealRandomFrequency.value = e.revealRandomFrequency,
            t.uRevealProgress.value = e.revealProgress;
            var i = {}
              , a = new q["zb"]({
                transparent: !0,
                depthTest: !0,
                depthWrite: !0,
                lights: !1,
                uniforms: t,
                defines: i,
                vertexShader: je,
                fragmentShader: _e
            });
            return a
        }
          , We = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.resources = t.resources,
                this.time = t.time,
                this.camera = t.camera,
                this.colors = t.colors,
                this.x = t.x,
                this.y = t.y,
                this.z = t.z,
                this.url = t.url,
                this.blazonTexture = this.resources.items[t.blazonTexture],
                this.labelTexture = this.resources.items[t.labelTexture],
                this.active = !0,
                this.visible = !1,
                this.setContainer(),
                this.setBlazon(),
                this.setLabel(),
                this.setInteractive()
            }
            return Object(O["a"])(e, [{
                key: "setContainer",
                value: function() {
                    var e = this;
                    this.container = new q["x"],
                    this.container.rotation.order = "YXZ",
                    this.container.position.x = this.x,
                    this.container.position.y = this.y,
                    this.container.position.z = this.z,
                    this.container.matrixAutoUpdate = !1,
                    this.container.updateMatrix(),
                    this.time.on("tick", (function() {
                        if (e.active && e.container.visible) {
                            var t = e.camera.instance.position.clone();
                            t.x += 5 * Math.sin(e.camera.instance.rotation.y) * (1 - e.camera.zoom.value),
                            t.z += 5 * Math.cos(e.camera.instance.rotation.y) * (1 - e.camera.zoom.value);
                            var i = Math.atan2(t.x - e.container.position.x, t.z - e.container.position.z);
                            e.container.rotation.y = i,
                            e.container.rotation.x = e.camera.animation.rotation.value.x,
                            e.container.updateMatrix()
                        }
                    }
                    ))
                }
            }, {
                key: "setBlazon",
                value: function() {
                    this.blazon = {},
                    this.blazon.size = .09,
                    this.blazon.geometry = new q["jb"](1,1,1,1),
                    this.blazon.geometry.translate(0, .5, 0),
                    this.blazon.material = new q["U"]({
                        map: this.blazonTexture,
                        transparent: !0
                    }),
                    this.blazon.mesh = new q["T"](this.blazon.geometry,this.blazon.material),
                    this.blazon.mesh.scale.set(1e-4, 1e-4, 1e-4),
                    this.blazon.mesh.matrixAutoUpdate = !1,
                    this.blazon.mesh.updateMatrix(),
                    this.blazon.mesh.visible = !0,
                    this.container.add(this.blazon.mesh)
                }
            }, {
                key: "setLabel",
                value: function() {
                    this.label = {},
                    this.label.size = .3,
                    this.label.ratio = 4,
                    this.label.geometry = new q["jb"](1,1,1,1),
                    this.labelTexture.flipY = !1,
                    this.label.material = new Ue({
                        maskTexture: this.labelTexture,
                        color: this.colors.darkerPencil.three,
                        revealTexture: this.resources.items.perlinTexture,
                        revealTextureFrequency: new q["Qb"](4,.65),
                        revealRandomFrequency: new q["Qb"](7,3),
                        revealProgress: .25
                    }),
                    this.label.mesh = new q["T"](this.label.geometry,this.label.material),
                    this.label.mesh.scale.set(this.label.size, this.label.size / this.label.ratio, 1),
                    this.label.mesh.position.y = 1.6 * this.blazon.size,
                    this.label.mesh.matrixAutoUpdate = !1,
                    this.label.mesh.updateMatrix(),
                    this.label.mesh.visible = !0,
                    this.container.add(this.label.mesh)
                }
            }, {
                key: "setInteractive",
                value: function() {
                    this.interactive = {},
                    this.interactive.size = .16,
                    this.interactive.geometry = new q["jb"](1,1,1,1),
                    this.interactive.material = new q["U"]({
                        color: 16711680,
                        wireframe: !0
                    }),
                    this.interactive.mesh = new q["T"](this.interactive.geometry,this.interactive.material),
                    this.interactive.mesh.scale.set(this.interactive.size, this.interactive.size, this.interactive.size),
                    this.interactive.mesh.position.y = .5 * this.blazon.size,
                    this.interactive.mesh.matrixAutoUpdate = !1,
                    this.interactive.mesh.updateMatrix(),
                    this.interactive.mesh.visible = !1,
                    this.container.add(this.interactive.mesh)
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                    case "terrain":
                    case "composition":
                        this.container.visible = !1;
                        break;
                    case "overlay":
                        this.container.visible = this.active && this.visible;
                        break
                    }
                }
            }, {
                key: "enter",
                value: function() {
                    r["a"].to(this.label.material.uniforms.uRevealProgress, {
                        duration: .7,
                        value: .85
                    })
                }
            }, {
                key: "leave",
                value: function() {
                    r["a"].to(this.label.material.uniforms.uRevealProgress, {
                        duration: .7,
                        value: .25
                    })
                }
            }, {
                key: "click",
                value: function() {
                    this.url && window.open(this.url, "_blank")
                }
            }, {
                key: "show",
                value: function() {
                    var e = this;
                    this.visible = !0,
                    r["a"].killTweensOf(this.blazon.mesh.scale),
                    r["a"].to(this.blazon.mesh.scale, {
                        x: this.blazon.size,
                        y: this.blazon.size,
                        z: this.blazon.size,
                        duration: .5,
                        onUpdate: function() {
                            e.blazon.mesh.updateMatrix()
                        }
                    })
                }
            }, {
                key: "hide",
                value: function() {
                    var e = this;
                    r["a"].killTweensOf(this.blazon.mesh.scale),
                    r["a"].to(this.blazon.mesh.scale, {
                        x: 1e-4,
                        y: 1e-4,
                        z: 1e-4,
                        duration: .5,
                        onUpdate: function() {
                            e.blazon.mesh.updateMatrix()
                        },
                        onComplete: function() {
                            e.visible = !1
                        }
                    })
                }
            }]),
            e
        }()
          , Ge = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                return Object(M["a"])(this, i),
                a = t.call(this),
                a.config = e.config,
                a.debug = e.debug,
                a.sizes = e.sizes,
                a.time = e.time,
                a.domElement = e.domElement,
                a.resources = e.resources,
                a.renderer = e.renderer,
                a.camera = e.camera,
                a.scene = e.scene,
                a.container = e.container,
                a.colors = e.colors,
                a.terrainData1Texture = e.terrainData1Texture,
                a.terrainData2Texture = e.terrainData2Texture,
                a.villageInstancedMeshes = e.villageInstancedMeshes,
                a.streetsModel = e.streetsModel,
                a.streetsTexture = e.streetsTexture,
                a.nextVillageLength = e.nextVillageLength,
                a.nextVillageY = e.nextVillageY,
                a.nextVillageTexture = e.nextVillageTexture,
                a.placesOptions = e.placesOptions,
                a.showReims = e.showReims,
                a.active = !1,
                a.playing = !0,
                a.visible = !0,
                a.objects = [],
                a.debug && (a.debugFolder = a.debug.addFolder("pencil village")),
                a.setElevation(),
                a.setMaterials(),
                a.setLights(),
                a.setTerrainData(),
                a.setTerrainDataFallback(),
                a.setBuildings(),
                a.setClouds(),
                a.setStreets(),
                a.setNextVillage(),
                a.setBirds(),
                a.setParticles(),
                a.setPlaces(),
                a.setReims(),
                a
            }
            return Object(O["a"])(i, [{
                key: "setElevation",
                value: function() {
                    var e = this;
                    this.elevation = {},
                    this.elevation.min = 0,
                    this.elevation.max = .75,
                    this.elevation.value = this.elevation.max,
                    this.elevation.offset = .25,
                    this.elevation.listenToCamera = !1,
                    this.elevation.setMin = function() {
                        e.elevation.value = e.elevation.min,
                        e.elevation.update()
                    }
                    ,
                    this.elevation.setMax = function() {
                        e.elevation.value = e.elevation.max,
                        e.elevation.update()
                    }
                    ,
                    this.elevation.update = function() {
                        e.materials.depth.uniforms.uTerrainElevation.value = e.elevation.value,
                        e.materials.instancedDepth.uniforms.uTerrainElevation.value = e.elevation.value;
                        var t, i = Object(L["a"])(e.materials.options);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a = t.value;
                                e.materials[a.name].uniforms.uTerrainElevation.value = e.elevation.value
                            }
                        } catch (s) {
                            i.e(s)
                        } finally {
                            i.f()
                        }
                        e.streets.material.uniforms.uTerrainElevation.value = e.elevation.value,
                        e.birds.material.uniforms.uTerrainElevation.value = e.elevation.value,
                        e.terrainFallback.material.uniforms.uTerrainElevation.value = e.elevation.value
                    }
                    ,
                    this.debug && this.debugFolder.add(this.elevation, "value").min(this.elevation.min).max(this.elevation.max).step(.001).name("elevation").onChange(this.elevation.update),
                    this.time.on("tick", (function() {
                        if (e.active && e.playing && e.elevation.listenToCamera) {
                            var t = Math.min(Math.max(1 - (1 - e.camera.free.zoom.value - e.elevation.offset) / (1 - e.elevation.offset), 0), 1)
                              , i = e.elevation.min + t * (e.elevation.max - e.elevation.min);
                            i !== e.elevation.value && (e.elevation.value = i,
                            e.elevation.update())
                        }
                    }
                    ))
                }
            }, {
                key: "updateShadows",
                value: function() {
                    var e = this;
                    this.elevation.setMin(),
                    this.renderer.instance.shadowMap.needsUpdate = !0,
                    window.requestAnimationFrame((function() {
                        e.elevation.setMax()
                    }
                    ))
                }
            }, {
                key: "setMaterials",
                value: function() {
                    var e = this;
                    this.materials = {},
                    this.materials.windTimeFrequency = 5e-4,
                    this.materials.windHeightStrength = .2,
                    this.materials.windZFrequency = 10,
                    this.materials.windXFrequency = 6.78,
                    this.materials.change = function() {
                        var t, i = Object(L["a"])(e.materials.options);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a = t.value;
                                e.materials[a.name].uniforms.uWindTimeFrequency.value = e.materials.windTimeFrequency,
                                e.materials[a.name].uniforms.uWindHeightStrength.value = e.materials.windHeightStrength,
                                e.materials[a.name].uniforms.uWindZFrequency.value = e.materials.windZFrequency,
                                e.materials[a.name].uniforms.uWindXFrequency.value = e.materials.windXFrequency
                            }
                        } catch (s) {
                            i.e(s)
                        } finally {
                            i.f()
                        }
                    }
                    ,
                    this.debug && (this.materials.debugFolder = this.debugFolder.addFolder("materials"),
                    this.materials.debugFolder.add(this.materials, "windTimeFrequency").min(0).max(.01).step(1e-5).name("wind time frequency").onChange(this.materials.change),
                    this.materials.debugFolder.add(this.materials, "windHeightStrength").min(0).max(1).step(.001).name("wind height strength").onChange(this.materials.change),
                    this.materials.debugFolder.add(this.materials, "windZFrequency").min(0).max(50).step(.1).name("wind z frequency").onChange(this.materials.change),
                    this.materials.debugFolder.add(this.materials, "windXFrequency").min(0).max(50).step(.1).name("wind x frequency").onChange(this.materials.change)),
                    this.materials.depth = new Se({
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value
                    }),
                    this.materials.instancedDepth = new Se({
                        instancing: !0,
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value
                    }),
                    this.materials.normalMap = {},
                    this.materials.normalMap.map = new Ve({
                        renderer: this.renderer,
                        resolution: 4096,
                        base: this.terrainData1Texture,
                        strength: 20
                    }),
                    this.materials.normalMap.texture = this.materials.normalMap.map.renderTarget.texture,
                    this.materials.normalMap.texture.generateMipmaps = SVGComponentTransferFunctionElement,
                    this.materials.normalMap.texture.minFilter = q["K"],
                    this.materials.normalMap.texture.magFilter = q["J"],
                    this.materials.normalMap.map.render(),
                    this.materials.normalMap.plane = new q["T"](new q["jb"](1,1,1,1),new q["U"]({
                        map: this.materials.normalMap.texture
                    })),
                    this.materials.normalMap.plane.visible = !1,
                    this.materials.normalMap.plane.position.y = .5,
                    this.materials.normalMap.plane.position.z = .2,
                    this.materials.normalMap.plane.matrixAutoUpdate = !1,
                    this.materials.normalMap.plane.updateMatrix(),
                    this.container.add(this.materials.normalMap.plane),
                    this.debug && (this.materials.normalMap.debugFolder = this.materials.debugFolder.addFolder("normal map"),
                    this.materials.normalMap.debugFolder.add(this.materials.normalMap.map.material.uniforms.uStrength, "value").min(0).max(10).step(.001).name("strength").onChange((function() {
                        e.materials.normalMap.map.render()
                    }
                    )),
                    this.materials.normalMap.debugFolder.add(this.materials.normalMap.plane, "visible").name("plane visible")),
                    this.materials.all = [],
                    this.materials.options = [{
                        name: "houses",
                        color: 16777215,
                        pencilColor: this.colors.pencil.three,
                        paperColor: this.colors.paper.three,
                        emissive: 0,
                        perlin: this.resources.items.perlinTexture,
                        terrainData1: this.terrainData1Texture,
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value,
                        terrainAlphaMultiplier: 0,
                        subdivision: 200,
                        strokeUvDim: 1,
                        strokeSmoothDepthAmplitude: 1,
                        strokeSmoothDepthOffset: 0,
                        strokeSmoothDepthMin: 0,
                        strokeSmoothDepthMax: 1,
                        strokeLightOffset: -.7,
                        strokeLightMultiplier: 3,
                        strokeTreshold: .75,
                        strokeDirection: new q["Rb"](0,0,0),
                        strokeStrengthOffset: .7,
                        strokeStrengthAmplitude: 1.5,
                        wind: !1,
                        instancing: !0
                    }, {
                        name: "trees",
                        color: 16777215,
                        pencilColor: this.colors.pencil.three,
                        paperColor: this.colors.paper.three,
                        emissive: 0,
                        perlin: this.resources.items.perlinTexture,
                        terrainData1: this.terrainData1Texture,
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value,
                        terrainAlphaMultiplier: 0,
                        subdivision: 200,
                        strokeUvDim: 1,
                        strokeSmoothDepthAmplitude: 1,
                        strokeSmoothDepthOffset: 0,
                        strokeSmoothDepthMin: 0,
                        strokeSmoothDepthMax: 1,
                        strokeLightOffset: -.7,
                        strokeLightMultiplier: 3,
                        strokeTreshold: .75,
                        strokeDirection: new q["Rb"](0,1,0),
                        strokeStrengthOffset: .7,
                        strokeStrengthAmplitude: 1.5,
                        wind: !0,
                        instancing: !0,
                        windTimeFrequency: this.materials.windTimeFrequency,
                        windHeightStrength: this.materials.windHeightStrength,
                        windZFrequency: this.materials.windZFrequency,
                        windXFrequency: this.materials.windXFrequency
                    }, {
                        name: "terrain",
                        color: 16777215,
                        normalMap: this.materials.normalMap.texture,
                        pencilColor: this.colors.pencil.three,
                        paperColor: this.colors.paper.three,
                        emissive: 0,
                        perlin: this.resources.items.perlinTexture,
                        terrainData1: this.terrainData1Texture,
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value,
                        terrainAlphaMultiplier: 1,
                        subdivision: 300,
                        strokeUvDim: 0,
                        strokeSmoothDepthAmplitude: 1,
                        strokeSmoothDepthOffset: 0,
                        strokeSmoothDepthMin: 0,
                        strokeSmoothDepthMax: 1,
                        strokeLightOffset: -.5,
                        strokeLightMultiplier: 3,
                        strokeTreshold: .7,
                        strokeDirection: new q["Rb"](0,0,0),
                        strokeStrengthOffset: 10,
                        strokeStrengthAmplitude: 0,
                        wind: !1
                    }];
                    var t, i = Object(L["a"])(this.materials.options);
                    try {
                        var a = function() {
                            var i = t.value
                              , a = new ye(i);
                            if (e.materials[i.name] = a,
                            e.materials.all.push(a),
                            e.time.on("tick", (function() {
                                e.active && e.playing && "undefined" !== typeof a.defines.USE_WIND && (a.uniforms.uTime.value = e.time.elapsed)
                            }
                            )),
                            e.debug) {
                                var s = e.materials.debugFolder.addFolder("material ".concat(i.name));
                                s.add(a, "wireframe").name("wireframe"),
                                s.add(a.uniforms.uSubdivision, "value").min(0).max(1e3).step(.1).name("subdivision"),
                                s.add(a.uniforms.uStrokeUvDim, "value").min(0).max(1).step(.001).name("stroke UV dim"),
                                s.add(a.uniforms.uStrokeSmoothDepthAmplitude, "value").min(0).max(2).step(.001).name("stroke smooth depth amplitude"),
                                s.add(a.uniforms.uStrokeSmoothDepthOffset, "value").min(-2).max(2).step(.001).name("stroke smooth depth offset"),
                                s.add(a.uniforms.uStrokeSmoothDepthMin, "value").min(0).max(1).step(.001).name("stroke smooth depth min"),
                                s.add(a.uniforms.uStrokeSmoothDepthMax, "value").min(0).max(1).step(.001).name("stroke smooth depth max"),
                                s.add(a.uniforms.uStrokeLightOffset, "value").min(-2).max(2).step(.001).name("stroke light offset"),
                                s.add(a.uniforms.uStrokeLightMultiplier, "value").min(0).max(10).step(.001).name("stroke light multiplier"),
                                s.add(a.uniforms.uStrokeTreshold, "value").min(0).max(1).step(.001).name("stroke treshold"),
                                s.add(a.uniforms.uStrokeStrengthOffset, "value").min(0).max(10).step(.001).name("stroke strength offset"),
                                s.add(a.uniforms.uStrokeStrengthAmplitude, "value").min(0).max(10).step(.001).name("stroke strength amplitude")
                            }
                        };
                        for (i.s(); !(t = i.n()).done; )
                            a()
                    } catch (s) {
                        i.e(s)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "setLights",
                value: function() {
                    var e = this;
                    this.lights = {},
                    this.lights.mapSize = 1024,
                    this.debug && (this.lights.debugFolder = this.debugFolder.addFolder("lights")),
                    this.lights.items = [],
                    this.lights.options = [{
                        terrainShadowActive: !0,
                        distance: 1.4,
                        intensity: 3.75,
                        angle: 1.777,
                        elevation: .5,
                        visibleHelper: !1,
                        shadow: !0
                    }, {
                        terrainShadowActive: !1,
                        distance: 1.2,
                        intensity: 2.1,
                        angle: -1,
                        elevation: 1,
                        visibleHelper: !1,
                        shadow: !1
                    }];
                    var t, i = 0, a = Object(L["a"])(this.lights.options);
                    try {
                        var s = function() {
                            var a = t.value
                              , s = {};
                            if (s.instance = new q["m"],
                            s.instance.shadow.camera.near = .1,
                            s.instance.shadow.camera.far = 10,
                            s.instance.castShadow = a.shadow,
                            s.instance.shadow.camera.top = 5,
                            s.instance.shadow.camera.right = 5,
                            s.instance.shadow.camera.bottom = -5,
                            s.instance.shadow.camera.left = -5,
                            e.container.add(s.instance),
                            s.helper = new q["n"](s.instance,.1),
                            e.container.add(s.helper),
                            s.change = function() {
                                s.instance.position.x = Math.cos(a.angle) * a.distance,
                                s.instance.position.y = a.elevation,
                                s.instance.position.z = Math.sin(a.angle) * a.distance,
                                s.instance.position.normalize(),
                                s.instance.position.multiplyScalar(5),
                                s.instance.intensity = a.intensity,
                                s.helper.visible = a.visibleHelper,
                                window.requestAnimationFrame((function() {
                                    s.helper.update()
                                }
                                ))
                            }
                            ,
                            s.change(),
                            e.debug) {
                                var n = e.lights.debugFolder.addFolder(i);
                                n.open(),
                                n.add(a, "visibleHelper").name("visible helper").onChange(s.change),
                                n.add(a, "intensity").min(0).max(10).step(.001).name("intensity").onChange(s.change),
                                n.add(a, "angle").min(-Math.PI).max(Math.PI).step(.001).name("angle").onChange(s.change),
                                n.add(a, "elevation").min(0).max(10).step(.001).name("elevation").onChange(s.change),
                                n.add(a, "distance").min(0).max(10).step(.001).name("distance").onChange(s.change)
                            }
                            e.lights.items.push(s),
                            i++
                        };
                        for (a.s(); !(t = a.n()).done; )
                            s()
                    } catch (n) {
                        a.e(n)
                    } finally {
                        a.f()
                    }
                }
            }, {
                key: "setTerrainData",
                value: function() {
                    if (this.terrain = {},
                    this.terrain.visible = !1,
                    this.terrain.geometry = new Ne(10,10,20,20,{
                        uv: !0,
                        normal: !0
                    }),
                    X["a"].computeTangents(this.terrain.geometry),
                    this.terrain.material = this.materials.terrain,
                    this.terrain.mesh = new q["T"](this.terrain.geometry,this.terrain.material),
                    this.terrain.mesh.rotation.x = .5 * -Math.PI,
                    this.terrain.mesh.receiveShadow = !0,
                    this.terrain.mesh.castShadow = !0,
                    this.terrain.mesh.customDepthMaterial = this.materials.depth,
                    this.terrain.mesh.matrixAutoUpdate = !1,
                    this.terrain.mesh.updateMatrix(),
                    this.container.add(this.terrain.mesh),
                    this.debug) {
                        var e = this.debugFolder.addFolder("terrain");
                        e.add(this.terrain, "visible").name("visible")
                    }
                }
            }, {
                key: "setBuildings",
                value: function() {
                    this.buildings = {},
                    this.buildings.container = new q["fb"],
                    this.buildings.container.matrixAutoUpdate = !1,
                    this.buildings.container.updateMatrix(),
                    this.container.add(this.buildings.container),
                    this.buildings.trees = {},
                    this.buildings.trees.visible = !0,
                    this.buildings.trees.material = this.materials.trees,
                    this.buildings.trees.meshes = this.villageInstancedMeshes.trees;
                    var e, t = Object(L["a"])(this.buildings.trees.meshes);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.receiveShadow = !0,
                            i.castShadow = !0,
                            i.material = this.buildings.trees.material,
                            i.customDepthMaterial = this.materials.instancedDepth,
                            i.matrixAutoUpdate = !1,
                            this.buildings.container.add(i)
                        }
                    } catch (o) {
                        t.e(o)
                    } finally {
                        t.f()
                    }
                    this.buildings.houses = {},
                    this.buildings.houses.visible = !0,
                    this.buildings.houses.material = this.materials.houses,
                    this.buildings.houses.meshes = this.villageInstancedMeshes.buildings;
                    var a, s = Object(L["a"])(this.buildings.houses.meshes);
                    try {
                        for (s.s(); !(a = s.n()).done; ) {
                            var n = a.value;
                            n.receiveShadow = !0,
                            n.castShadow = !0,
                            n.material = this.buildings.houses.material,
                            n.customDepthMaterial = this.materials.instancedDepth,
                            n.matrixAutoUpdate = !1,
                            this.buildings.container.add(n)
                        }
                    } catch (o) {
                        s.e(o)
                    } finally {
                        s.f()
                    }
                    if (this.debug) {
                        var r = this.debugFolder.addFolder("model");
                        r.add(this.buildings.container.rotation, "y").min(-Math.PI).max(Math.PI).step(.001).name("rotation y")
                    }
                }
            }, {
                key: "setClouds",
                value: function() {
                    var e = this;
                    this.clouds = {},
                    this.clouds.count = 5,
                    this.clouds.angleBetween = 2.6 * Math.PI,
                    this.clouds.scaleBetween = .2,
                    this.clouds.maxRotationSpeed = 2e-5,
                    this.clouds.radius = 15,
                    this.clouds.width = 2,
                    this.clouds.height = 8,
                    this.clouds.y = 2,
                    this.clouds.subdivision = 6,
                    this.clouds.items = [],
                    this.clouds.geometry = new q["kb"](1,this.clouds.height,this.clouds.subdivision,1);
                    var t, i = Object(L["a"])(this.clouds.geometry.vertices);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value
                              , s = a.x
                              , n = Math.cos(s * this.clouds.width) * this.clouds.radius
                              , r = Math.sin(s * this.clouds.width) * this.clouds.radius;
                            a.x = n,
                            a.z = r
                        }
                    } catch (o) {
                        i.e(o)
                    } finally {
                        i.f()
                    }
                    this.clouds.material = new q["U"]({
                        wireframe: !1,
                        alphaMap: this.resources.items.cloudsTexture,
                        transparent: !0
                    }),
                    this.clouds.material.color = new q["j"]("#00FF00"),
                    this.clouds.material.depthTest = !0,
                    this.clouds.material.depthWrite = !1,
                    this.clouds.create = function() {
                        for (var t = 0; t < e.clouds.count; t++) {
                            var i = {};
                            i.rotationSpeed = 2 * (Math.random() - .5) * e.clouds.maxRotationSpeed,
                            i.mesh = new q["T"](e.clouds.geometry,e.clouds.material),
                            i.mesh.position.y = e.clouds.y,
                            i.mesh.rotation.y = t * e.clouds.angleBetween,
                            i.mesh.scale.x = 1 + t * e.clouds.scaleBetween,
                            i.mesh.scale.z = 1 + t * e.clouds.scaleBetween,
                            i.mesh.matrixAutoUpdate = !1,
                            i.mesh.updateMatrix(),
                            e.container.add(i.mesh),
                            e.clouds.items.push(i)
                        }
                    }
                    ,
                    this.clouds.create(),
                    this.time.on("tick", (function() {
                        if (e.active && e.playing) {
                            var t, i = Object(L["a"])(e.clouds.items);
                            try {
                                for (i.s(); !(t = i.n()).done; ) {
                                    var a = t.value;
                                    a.mesh.rotation.y += e.time.delta * a.rotationSpeed,
                                    a.mesh.updateMatrix()
                                }
                            } catch (o) {
                                i.e(o)
                            } finally {
                                i.f()
                            }
                        }
                    }
                    ))
                }
            }, {
                key: "setStreets",
                value: function() {
                    var e = this;
                    if (this.streets = {},
                    this.streets.visible = !0,
                    this.streets.distanceMin = 1.25,
                    this.streets.distanceAmplitude = .25,
                    this.streets.angleMin = .2,
                    this.streets.angleAmplitude = .15,
                    this.streets.mesh = this.streetsModel.scene.children[0],
                    this.streets.mesh.position.y = 0,
                    this.container.add(this.streets.mesh),
                    this.streets.material = new Ce({
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value,
                        streetsTexture: this.streetsTexture,
                        pencilColor: this.colors.pencil.three,
                        paperColor: this.colors.paper.three,
                        alpha: 1
                    }),
                    this.streets.mesh.material = this.streets.material,
                    this.streetsTexture.minFilter = q["ab"],
                    this.time.on("tick", (function() {
                        if (e.active && e.playing) {
                            var t = new q["Rb"](0,1,0);
                            t.applyQuaternion(e.camera.instance.quaternion).normalize();
                            var i = t.dot(new q["Rb"](0,1,0))
                              , a = 1 - Math.min(Math.max((i - e.streets.angleMin) / e.streets.angleAmplitude, 0), 1)
                              , s = Math.min(Math.max((e.camera.instance.position.y - e.streets.distanceMin) / e.streets.distanceAmplitude, 0), 1)
                              , n = a * s;
                            n !== e.streets.material.uniforms.uAlpha.value && (e.streets.material.uniforms.uAlpha.value = n)
                        }
                    }
                    )),
                    this.debug) {
                        var t = this.debugFolder.addFolder("streets");
                        t.add(this.streets, "visible").name("visible"),
                        t.add(this.streets, "distanceMin").min(0).max(2).step(.001).name("distanceMin"),
                        t.add(this.streets, "distanceAmplitude").min(0).max(2).step(.001).name("distanceAmplitude"),
                        t.add(this.streets, "angleMin").min(0).max(.5).step(.001).name("angleMin"),
                        t.add(this.streets, "angleAmplitude").min(0).max(1).step(.001).name("angleAmplitude")
                    }
                }
            }, {
                key: "setNextVillage",
                value: function() {
                    var e = this;
                    this.nextVillage = {},
                    this.nextVillage.visible = !0,
                    this.nextVillage.geometry = new q["jb"](1,1,1,1),
                    this.nextVillage.color = {},
                    this.nextVillage.color.black = this.colors.darkPencil.three,
                    this.nextVillage.color.red = this.colors.highlight.three,
                    this.nextVillage.color.progress = 0,
                    this.nextVillage.color.mix = this.nextVillage.color.black.clone(),
                    this.nextVillage.color.update = function() {
                        e.nextVillage.color.mix.copy(e.nextVillage.color.black),
                        e.nextVillage.color.mix.lerp(e.nextVillage.color.red, e.nextVillage.color.progress)
                    }
                    ,
                    this.nextVillage.container = new q["x"],
                    this.nextVillage.container.position.x = this.camera.outroPositionEnd.x,
                    this.nextVillage.container.position.y = this.nextVillageY,
                    this.nextVillage.container.position.z = this.camera.outroPositionEnd.z,
                    this.nextVillage.container.position.setLength(this.nextVillageLength);
                    var t = Math.atan2(this.nextVillage.container.position.x, this.nextVillage.container.position.z) + Math.PI;
                    this.nextVillage.container.rotation.y = t,
                    this.nextVillage.container.matrixAutoUpdate = !1,
                    this.nextVillage.container.updateMatrix(),
                    this.container.add(this.nextVillage.container),
                    this.nextVillage.interactive = {},
                    this.nextVillage.interactive.material = new q["U"]({
                        color: this.colors.highlight.three
                    }),
                    this.nextVillage.interactive.mesh = new q["T"](this.nextVillage.geometry,this.nextVillage.interactive.material),
                    this.nextVillage.interactive.mesh.rotation.x = .5 * -Math.PI,
                    this.nextVillage.interactive.mesh.scale.set(1.4, .7, 1.2),
                    this.nextVillage.interactive.mesh.position.y = -.01,
                    this.nextVillage.interactive.mesh.matrixAutoUpdate = !1,
                    this.nextVillage.interactive.mesh.updateMatrix(),
                    this.nextVillage.interactive.mesh.visible = !1,
                    this.nextVillage.container.add(this.nextVillage.interactive.mesh),
                    this.nextVillage.text = {},
                    this.nextVillage.text.ratio = 48 / 1024,
                    this.nextVillage.text.material = new q["U"]({
                        transparent: !0,
                        alphaMap: this.nextVillageTexture,
                        opacity: 0
                    }),
                    this.nextVillage.text.material.color = this.nextVillage.color.mix,
                    this.nextVillage.text.mesh = new q["T"](this.nextVillage.geometry,this.nextVillage.text.material),
                    this.nextVillage.text.mesh.rotation.x = .5 * -Math.PI,
                    this.nextVillage.text.mesh.scale.x = 2,
                    this.nextVillage.text.mesh.scale.y = -this.nextVillage.text.mesh.scale.x * this.nextVillage.text.ratio,
                    this.nextVillage.text.mesh.position.z = .1,
                    this.nextVillage.text.mesh.matrixAutoUpdate = !1,
                    this.nextVillage.text.mesh.updateMatrix(),
                    this.nextVillage.container.add(this.nextVillage.text.mesh),
                    this.nextVillage.arrow = {},
                    this.nextVillage.arrow.material = new q["U"]({
                        transparent: !0,
                        alphaMap: this.resources.items.compassArrowTexture,
                        opacity: 0
                    }),
                    this.nextVillage.arrow.material.color = this.nextVillage.color.mix,
                    this.nextVillage.arrow.mesh = new q["T"](this.nextVillage.geometry,this.nextVillage.arrow.material),
                    this.nextVillage.arrow.mesh.rotation.x = .5 * -Math.PI,
                    this.nextVillage.arrow.mesh.scale.set(.1, .1, .1),
                    this.nextVillage.arrow.mesh.position.z = -.15,
                    this.nextVillage.arrow.mesh.matrixAutoUpdate = !1,
                    this.nextVillage.arrow.mesh.updateMatrix(),
                    this.nextVillage.container.add(this.nextVillage.arrow.mesh),
                    this.nextVillage.enter = function() {
                        r["a"].killTweensOf(e.nextVillage.color),
                        r["a"].to(e.nextVillage.color, {
                            progress: 1,
                            onUpdate: e.nextVillage.color.update,
                            duration: .3
                        })
                    }
                    ,
                    this.nextVillage.leave = function() {
                        r["a"].killTweensOf(e.nextVillage.color),
                        r["a"].to(e.nextVillage.color, {
                            progress: 0,
                            onUpdate: e.nextVillage.color.update,
                            duration: .3
                        })
                    }
                    ,
                    this.nextVillage.show = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .3;
                        r["a"].killTweensOf(e.nextVillage.arrow.material),
                        r["a"].killTweensOf(e.nextVillage.text.material),
                        0 === t ? (e.nextVillage.arrow.material.opacity = 1,
                        e.nextVillage.text.material.opacity = 1) : (r["a"].to(e.nextVillage.arrow.material, {
                            opacity: 1,
                            duration: .3
                        }),
                        r["a"].to(e.nextVillage.text.material, {
                            opacity: 1,
                            duration: .3
                        }))
                    }
                    ,
                    this.nextVillage.hide = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .3;
                        r["a"].killTweensOf(e.nextVillage.arrow.material),
                        r["a"].killTweensOf(e.nextVillage.text.material),
                        0 === t ? (e.nextVillage.arrow.material.opacity = 0,
                        e.nextVillage.text.material.opacity = 0) : (r["a"].to(e.nextVillage.arrow.material, {
                            opacity: 0,
                            duration: .3
                        }),
                        r["a"].to(e.nextVillage.text.material, {
                            opacity: 0,
                            duration: .3
                        }))
                    }
                    ,
                    this.nextVillage.testPointer = function(t) {
                        e.nextVillage.interactive.mesh.visible = !0;
                        var i = t.intersectObjects([e.nextVillage.interactive.mesh]);
                        return e.nextVillage.interactive.mesh.visible = !1,
                        !!i.length || null
                    }
                }
            }, {
                key: "setBirds",
                value: function() {
                    var e = this;
                    if (this.birds = {},
                    this.birds.count = 100,
                    this.birds.visible = !0,
                    this.birds.speed = 5e-4,
                    this.birds.scale = .12,
                    this.birds.distanceLimit = 5,
                    this.birds.yMin = .075,
                    this.birds.yAmplitude = .5,
                    this.birds.items = [],
                    this.birds.container = new q["fb"],
                    this.birds.container.matrixAutoUpdate = !1,
                    this.container.add(this.birds.container),
                    this.birds.material = new Fe({
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value,
                        color: this.colors.pencil.three
                    }),
                    this.birds.reset = function() {
                        e.birds.instancedMesh && (e.birds.container.remove(e.birds.instancedMesh),
                        e.birds.items = []),
                        e.birds.geometry = new He(.1,.05,-.01,2),
                        e.birds.instancedMesh = new q["z"](e.birds.geometry,e.birds.material,e.birds.count),
                        e.birds.instancedMesh.frustrumCulled = !1,
                        e.birds.instancedMesh.instanceMatrix.setUsage(q["p"]),
                        e.birds.container.add(e.birds.instancedMesh);
                        for (var t = 0; t < e.birds.count; t++) {
                            var i = {};
                            i.position = new q["Rb"],
                            i.position.x = 10 * (Math.random() - .5),
                            i.position.y = e.birds.yMin + Math.random() * e.birds.yAmplitude,
                            i.position.z = 10 * (Math.random() - .5),
                            i.direction = Math.random() * Math.PI * 2,
                            i.quaternion = new q["pb"],
                            i.quaternion.setFromAxisAngle(new q["Rb"](0,1,0), i.direction),
                            i.scale = new q["Rb"](e.birds.scale,e.birds.scale,e.birds.scale),
                            i.matrix = new q["S"],
                            i.matrix.compose(i.position, i.quaternion, i.scale),
                            e.birds.instancedMesh.setMatrixAt(t, i.matrix),
                            e.birds.items.push(i)
                        }
                    }
                    ,
                    this.birds.reset(),
                    this.time.on("tick", (function() {
                        if (e.active && e.playing && e.birds.container.visible) {
                            e.birds.material.uniforms.uTime.value = e.time.elapsed,
                            e.birds.material.uniforms.uCameraPosition.value.copy(e.camera.instance.position);
                            var t, i = 0, a = Object(L["a"])(e.birds.items);
                            try {
                                for (a.s(); !(t = a.n()).done; ) {
                                    var s = t.value;
                                    s.position.x += Math.sin(s.direction) * e.birds.speed,
                                    s.position.z += Math.cos(s.direction) * e.birds.speed,
                                    s.position.x > e.birds.distanceLimit ? s.position.x = -e.birds.distanceLimit : s.position.x < -e.birds.distanceLimit && (s.position.x = e.birds.distanceLimit),
                                    s.position.z > e.birds.distanceLimit ? s.position.z = -e.birds.distanceLimit : s.position.z < -e.birds.distanceLimit && (s.position.z = e.birds.distanceLimit),
                                    s.matrix.compose(s.position, s.quaternion, s.scale),
                                    e.birds.instancedMesh.setMatrixAt(i, s.matrix),
                                    i++
                                }
                            } catch (n) {
                                a.e(n)
                            } finally {
                                a.f()
                            }
                            e.birds.instancedMesh.instanceMatrix.needsUpdate = !0
                        }
                    }
                    )),
                    this.debug) {
                        var t = this.debugFolder.addFolder("birds");
                        t.add(this.birds, "visible").name("visible"),
                        t.add(this.birds, "count").min(0).max(500).step(1).name("count").onFinishChange(this.birds.reset),
                        t.add(this.birds, "scale").min(0).max(3).step(.001).name("scale").onFinishChange(this.birds.reset),
                        t.add(this.birds, "speed").min(0).max(.001).step(1e-5).name("speed"),
                        t.add(this.birds, "yMin").min(0).max(1).step(.001).name("yMin").onFinishChange(this.birds.reset),
                        t.add(this.birds, "yAmplitude").min(0).max(5).step(.001).name("yAmplitude").onFinishChange(this.birds.reset),
                        t.add(this.birds.material.uniforms.uWingTimeFrequency, "value").min(0).max(.1).step(1e-4).name("wingTimeFrequency"),
                        t.add(this.birds.material.uniforms.uWingAmplitude, "value").min(0).max(.1).step(.001).name("wingAmplitude"),
                        t.add(this.birds.material.uniforms.uAlphaDistanceAmplitude, "value").min(0).max(2).step(.01).name("alphaDistanceAmplitude"),
                        t.add(this.birds.material.uniforms.uAlphaDistanceMin, "value").min(0).max(5).step(.01).name("alphaDistanceMin"),
                        t.add(this.birds.material.uniforms.uAlphaCameraAmplitude, "value").min(0).max(2).step(.01).name("alphaCameraAmplitude"),
                        t.add(this.birds.material.uniforms.uAlphaCameraMin, "value").min(0).max(2).step(.01).name("alphaCameraMin")
                    }
                }
            }, {
                key: "setTerrainDataFallback",
                value: function() {
                    var e = this;
                    if (this.terrainFallback = {},
                    this.terrainFallback.visible = !0,
                    this.terrainFallback.material = new Be({
                        terrainData1: this.terrainData1Texture,
                        terrainData2: this.terrainData2Texture,
                        terrainSize: 10,
                        terrainElevation: this.elevation.value,
                        terrainAlphaMultiplier: 1,
                        normalMap: this.materials.normalMap.texture,
                        pencilColor: this.colors.pencil.three,
                        paperColor: this.colors.paper.three
                    }),
                    this.terrainFallback.mesh = new q["T"](new q["jb"](10,10,40,40),this.terrainFallback.material),
                    this.terrainFallback.mesh.rotation.x = .5 * -Math.PI,
                    this.terrainFallback.mesh.matrixAutoUpdate = !1,
                    this.terrainFallback.mesh.updateMatrix(),
                    this.container.add(this.terrainFallback.mesh),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.terrainFallback.material.uniforms.uCameraPosition.value.copy(e.camera.instance.position)
                    }
                    )),
                    this.debug) {
                        var t = this.debugFolder.addFolder("terrainFallback");
                        t.add(this.terrainFallback, "visible").name("visible"),
                        t.add(this.terrainFallback.material.uniforms.uNormalMultiplier, "value").min(0).max(2).step(.001).name("normalMultiplier"),
                        t.add(this.terrainFallback.material.uniforms.uPencilMultiplier, "value").min(0).max(2).step(.001).name("pencilMultiplier"),
                        t.add(this.terrainFallback.material.uniforms.uPencilStep, "value").min(0).max(1).step(.001).name("pencilStep"),
                        t.add(this.terrainFallback.material.uniforms.uShadowMultiplier, "value").min(0).max(2).step(.001).name("shadowMultiplier")
                    }
                }
            }, {
                key: "updateTerrainFallback",
                value: function() {
                    this.elevation.setMin(),
                    this.camera.originalCamera.position.set(0, 4, 0),
                    this.camera.originalCamera.rotation.x = .5 * -Math.PI,
                    this.camera.originalCamera.rotation.y = 0,
                    this.camera.originalCamera.rotation.z = 0,
                    this.elevation.setMax()
                }
            }, {
                key: "setParticles",
                value: function() {
                    var e = this;
                    if (this.particles = {},
                    this.particles.count = 2e4,
                    this.particles.distance = 2,
                    this.particles.size = {},
                    this.particles.size.min = 0,
                    this.particles.size.max = 4,
                    this.particles.size.value = 0,
                    this.particles.sizeProximityOffset = 0,
                    this.particles.sizeProximityAmplitude = .3,
                    this.particles.windSpeed = 5e-5,
                    this.particles.windTurbulenceAmplitude = .02,
                    this.particles.windTurbulenceFrequency = .001,
                    this.particles.visible = !0,
                    this.particles.create = function() {
                        e.particles.points && e.container.remove(e.particles.points),
                        e.particles.geometry = new q["f"];
                        for (var t = new Float32Array(3 * e.particles.count), i = new Float32Array(e.particles.count), a = 0; a < e.particles.count; a++)
                            t[3 * a + 0] = (Math.random() - .5) * e.particles.distance * 2,
                            t[3 * a + 1] = (Math.random() - .5) * e.particles.distance * 2,
                            t[3 * a + 2] = (Math.random() - .5) * e.particles.distance * 2,
                            i[a] = Math.random();
                        e.particles.geometry.setAttribute("position", new q["e"](t,3)),
                        e.particles.geometry.setAttribute("random", new q["e"](i,1)),
                        e.particles.material = new Ee,
                        e.particles.material.uniforms.uTime.value = 0,
                        e.particles.material.uniforms.uColor.value = e.colors.pencil.three,
                        e.particles.material.uniforms.uPositionAmplitude.value = e.particles.distance,
                        e.particles.material.uniforms.uPointSizeProximityOffset.value = e.particles.sizeProximityOffset,
                        e.particles.material.uniforms.uPointSizeProximityAmplitude.value = e.particles.sizeProximityAmplitude,
                        e.particles.material.uniforms.uWindSpeed.value = e.particles.windSpeed,
                        e.particles.material.uniforms.uWindTurbulenceAmplitude.value = e.particles.windTurbulenceAmplitude,
                        e.particles.material.uniforms.uWindTurbulenceFrequency.value = e.particles.windTurbulenceFrequency,
                        e.particles.points = new q["mb"](e.particles.geometry,e.particles.material),
                        e.container.add(e.particles.points)
                    }
                    ,
                    this.particles.create(),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.particles.visible && (e.particles.material.uniforms.uTime.value = e.time.elapsed,
                        e.particles.points.position.copy(e.camera.instance.position),
                        e.particles.material.uniforms.uPointSize.value = Math.min(e.particles.size.value + 2.5 * e.camera.instanceSpeed, 10) * e.config.pixelRatio)
                    }
                    )),
                    this.debug) {
                        var t = this.debugFolder.addFolder("particles");
                        t.add(this.particles, "count").min(0).max(1e6).step(1).name("count").onChange(this.particles.create),
                        t.add(this.particles, "distance").min(0).max(5).step(.001).name("distance").onChange(this.particles.create),
                        t.add(this.particles.size, "value").min(0).max(20).step(.001).name("size").onChange(this.particles.create),
                        t.add(this.particles, "sizeProximityOffset").min(0).max(1).step(.001).name("sizeProximityOffset").onChange(this.particles.create),
                        t.add(this.particles, "sizeProximityAmplitude").min(0).max(1).step(.001).name("sizeProximityAmplitude").onChange(this.particles.create),
                        t.add(this.particles, "windSpeed").min(0).max(5e-4).step(1e-6).name("windSpeed").onChange(this.particles.create),
                        t.add(this.particles, "windTurbulenceAmplitude").min(0).max(.1).step(1e-5).name("windTurbulenceAmplitude").onChange(this.particles.create),
                        t.add(this.particles, "windTurbulenceFrequency").min(0).max(.01).step(1e-5).name("windTurbulenceFrequency").onChange(this.particles.create)
                    }
                }
            }, {
                key: "setPlaces",
                value: function() {
                    var e = this;
                    this.places = {},
                    this.places.items = [],
                    this.places.interactives = [],
                    this.places.testPointer = function(t) {
                        var i, a = Object(L["a"])(e.places.items);
                        try {
                            for (a.s(); !(i = a.n()).done; ) {
                                var s = i.value;
                                s.interactive.mesh.visible = !0
                            }
                        } catch (u) {
                            a.e(u)
                        } finally {
                            a.f()
                        }
                        var n, r = t.intersectObjects(e.places.interactives), o = Object(L["a"])(e.places.items);
                        try {
                            for (o.s(); !(n = o.n()).done; ) {
                                var l = n.value;
                                l.interactive.mesh.visible = !1
                            }
                        } catch (u) {
                            o.e(u)
                        } finally {
                            o.f()
                        }
                        return r.length ? e.places.items.find((function(e) {
                            return e.interactive.mesh === r[0].object
                        }
                        )) : null
                    }
                    ;
                    var t, i = Object(L["a"])(this.placesOptions);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value
                              , s = new We(Object(K["a"])({
                                resources: this.resources,
                                time: this.time,
                                camera: this.camera,
                                colors: this.colors
                            }, a));
                            this.places.interactives.push(s.interactive.mesh),
                            this.container.add(s.container),
                            this.places.items.push(s)
                        }
                    } catch (n) {
                        i.e(n)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "setReims",
                value: function() {
                    this.showReims && (this.reims = {},
                    this.reims.visible = !0,
                    this.reims.angle = .3 * Math.PI,
                    this.reims.distance = 5.5,
                    this.reims.size = 1,
                    this.reims.geometry = new q["jb"](1,1,1,1),
                    this.reims.container = new q["x"],
                    this.reims.container.visible = !1,
                    this.reims.container.position.x = Math.sin(this.reims.angle) * this.reims.distance,
                    this.reims.container.position.y = .2,
                    this.reims.container.position.z = Math.cos(this.reims.angle) * this.reims.distance,
                    this.reims.container.rotation.y = Math.PI + this.reims.angle,
                    this.reims.container.matrixAutoUpdate = !1,
                    this.reims.container.updateMatrix(),
                    this.container.add(this.reims.container),
                    this.reims.illustration = {},
                    this.reims.illustration.material = new q["U"]({
                        transparent: !0,
                        opacity: .75,
                        alphaMap: this.resources.items.reimsTexture
                    }),
                    this.reims.illustration.material.color = this.colors.pencil.three,
                    this.reims.illustration.mesh = new q["T"](this.reims.geometry,this.reims.illustration.material),
                    this.reims.illustration.mesh.rotation.x = .5 * -Math.PI,
                    this.reims.illustration.mesh.scale.x = this.reims.size,
                    this.reims.illustration.mesh.scale.y = this.reims.size,
                    this.reims.illustration.mesh.position.z = .1,
                    this.reims.illustration.mesh.matrixAutoUpdate = !1,
                    this.reims.illustration.mesh.updateMatrix(),
                    this.reims.container.add(this.reims.illustration.mesh))
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    var t, i = Object(L["a"])(this.places.items);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value;
                            a.setForPass(e)
                        }
                    } catch (U) {
                        i.e(U)
                    } finally {
                        i.f()
                    }
                    switch (e) {
                    case "terrain":
                        var s, n = Object(L["a"])(this.lights.items);
                        try {
                            for (n.s(); !(s = n.n()).done; ) {
                                var r = s.value;
                                r.instance.shadow.mapSize.width = 4096,
                                r.instance.shadow.mapSize.height = 4096
                            }
                        } catch (U) {
                            n.e(U)
                        } finally {
                            n.f()
                        }
                        this.terrain.mesh.visible = !0,
                        this.terrain.mesh.material = this.terrain.material;
                        var o, l = Object(L["a"])(this.buildings.trees.meshes);
                        try {
                            for (l.s(); !(o = l.n()).done; ) {
                                var u = o.value;
                                u.visible = !0
                            }
                        } catch (U) {
                            l.e(U)
                        } finally {
                            l.f()
                        }
                        var h, c = Object(L["a"])(this.buildings.houses.meshes);
                        try {
                            for (c.s(); !(h = c.n()).done; ) {
                                var d = h.value;
                                d.visible = !0,
                                d.material = this.buildings.houses.material
                            }
                        } catch (U) {
                            c.e(U)
                        } finally {
                            c.f()
                        }
                        var m, p = Object(L["a"])(this.clouds.items);
                        try {
                            for (p.s(); !(m = p.n()).done; ) {
                                var g = m.value;
                                g.mesh.visible = !1
                            }
                        } catch (U) {
                            p.e(U)
                        } finally {
                            p.f()
                        }
                        this.streets.mesh.visible = !1,
                        this.nextVillage.container.visible = !1,
                        this.reims && (this.reims.container.visible = !1),
                        this.birds.container.visible = !1,
                        this.terrainFallback.mesh.visible = !1,
                        this.particles.points.visible = !1;
                        break;
                    case "highlight":
                        this.terrain.mesh.visible = !1;
                        var v, f = Object(L["a"])(this.buildings.trees.meshes);
                        try {
                            for (f.s(); !(v = f.n()).done; ) {
                                var b = v.value;
                                b.visible = !1
                            }
                        } catch (U) {
                            f.e(U)
                        } finally {
                            f.f()
                        }
                        var x, y = Object(L["a"])(this.buildings.houses.meshes);
                        try {
                            for (y.s(); !(x = y.n()).done; ) {
                                var w = x.value;
                                w.visible = !1
                            }
                        } catch (U) {
                            y.e(U)
                        } finally {
                            y.f()
                        }
                        var T, S = Object(L["a"])(this.clouds.items);
                        try {
                            for (S.s(); !(T = S.n()).done; ) {
                                var k = T.value;
                                k.mesh.visible = !1
                            }
                        } catch (U) {
                            S.e(U)
                        } finally {
                            S.f()
                        }
                        this.streets.mesh.visible = !1,
                        this.birds.container.visible = !1,
                        this.nextVillage.container.visible = !1,
                        this.reims && (this.reims.container.visible = !1),
                        this.terrainFallback.mesh.visible = !1,
                        this.particles.points.visible = !1;
                        break;
                    case "composition":
                        this.terrain.mesh.visible = this.visible && this.terrain.visible;
                        var P, C = Object(L["a"])(this.buildings.trees.meshes);
                        try {
                            for (C.s(); !(P = C.n()).done; ) {
                                var z = P.value;
                                z.visible = this.visible
                            }
                        } catch (U) {
                            C.e(U)
                        } finally {
                            C.f()
                        }
                        var R, F = Object(L["a"])(this.buildings.houses.meshes);
                        try {
                            for (F.s(); !(R = F.n()).done; ) {
                                var A = R.value;
                                A.visible = this.visible
                            }
                        } catch (U) {
                            F.e(U)
                        } finally {
                            F.f()
                        }
                        var E, M = Object(L["a"])(this.clouds.items);
                        try {
                            for (M.s(); !(E = M.n()).done; ) {
                                var O = E.value;
                                O.mesh.visible = this.visible
                            }
                        } catch (U) {
                            M.e(U)
                        } finally {
                            M.f()
                        }
                        this.streets.mesh.visible = !1,
                        this.nextVillage.container.visible = !1,
                        this.reims && (this.reims.container.visible = !1),
                        this.birds.container.visible = !1,
                        this.terrainFallback.mesh.visible = this.visible && this.terrainFallback.visible,
                        this.particles.points.visible = this.visible && this.particles.visible;
                        break;
                    case "overlay":
                        this.terrain.mesh.visible = !1;
                        var B, I = Object(L["a"])(this.buildings.trees.meshes);
                        try {
                            for (I.s(); !(B = I.n()).done; ) {
                                var q = B.value;
                                q.visible = !1
                            }
                        } catch (U) {
                            I.e(U)
                        } finally {
                            I.f()
                        }
                        var D, V = Object(L["a"])(this.buildings.houses.meshes);
                        try {
                            for (V.s(); !(D = V.n()).done; ) {
                                var N = D.value;
                                N.visible = !1
                            }
                        } catch (U) {
                            V.e(U)
                        } finally {
                            V.f()
                        }
                        var H, _ = Object(L["a"])(this.clouds.items);
                        try {
                            for (_.s(); !(H = _.n()).done; ) {
                                var j = H.value;
                                j.mesh.visible = !1
                            }
                        } catch (U) {
                            _.e(U)
                        } finally {
                            _.f()
                        }
                        this.streets.mesh.visible = this.visible && this.streets.visible,
                        this.nextVillage.container.visible = this.visible && this.nextVillage.visible,
                        this.reims && (this.reims.container.visible = !0),
                        this.birds.container.visible = this.visible && this.birds.visible,
                        this.terrainFallback.mesh.visible = !1,
                        this.particles.points.visible = !1;
                        break
                    }
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0;
                    var e, t = Object(L["a"])(this.places.items);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.active = !0
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.active = !1;
                    var e, t = Object(L["a"])(this.places.items);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.active = !1
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.materials.depth.dispose(),
                    this.materials.instancedDepth.dispose(),
                    this.materials.normalMap.map.destroy(),
                    this.materials.normalMap.plane.geometry.dispose(),
                    this.materials.normalMap.plane.material.dispose();
                    var e, t = Object(L["a"])(this.materials.all);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.dispose()
                        }
                    } catch (r) {
                        t.e(r)
                    } finally {
                        t.f()
                    }
                    var a, s = Object(L["a"])(this.lights.items);
                    try {
                        for (s.s(); !(a = s.n()).done; ) {
                            var n = a.value;
                            n.helper.dispose()
                        }
                    } catch (r) {
                        s.e(r)
                    } finally {
                        s.f()
                    }
                    this.terrain.geometry.dispose(),
                    this.clouds.geometry.dispose(),
                    this.clouds.material.dispose(),
                    this.streets.material.dispose(),
                    this.birds.material.dispose(),
                    this.birds.geometry.dispose(),
                    this.terrainFallback.material.dispose(),
                    this.terrainFallback.mesh.geometry.dispose(),
                    this.particles.geometry.dispose(),
                    this.particles.material.dispose(),
                    this.nextVillage.geometry.dispose(),
                    this.nextVillage.material.dispose()
                }
            }]),
            i
        }(_["a"])
          , Ye = "#define GLSLIFY 1\nvarying vec4 vColor;\n\nvoid main()\n{\n    float distanceToCenter = distance(gl_PointCoord, vec2(0.5)) * 2.0;\n    float distanceToCenterAlpha = 1.0 - clamp(distanceToCenter, 0.0, 1.0);\n\n    float alpha = distanceToCenterAlpha;\n\n    if(distanceToCenter > 1.0 || vColor.a < 1.0)\n        discard;\n\n    gl_FragColor = vColor;\n    // gl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n"
          , $e = "#define GLSLIFY 1\n#ifdef USE_TEXTURE\n    uniform sampler2D uTerrainData3;\n#endif\n\nuniform vec3 uCameraPosition;\nuniform float uTime;\n\nuniform sampler2D uTerrainData2;\nuniform float uTerrainSize;\nuniform float uTerrainElevation;\nuniform float uBuildingsElevation;\nuniform float uBuildingsPower;\n\nuniform float uPointSize;\nuniform float uPointSizeRandomness;\nuniform float uPointSizeProximityNear;\nuniform float uPointSizeProximityFar;\nuniform float uPointSizeProximityAmplitude;\nuniform vec3 uPositionRandomness;\n\nuniform float uLavaPositionFrequency;\nuniform float uLavaPositionOffset;\nuniform float uLavaPositionPower;\nuniform float uLavaElevation;\nuniform float uLavaTimeFrequency;\n\nuniform float uColorRandomness;\nuniform float uColorSaturation;\nuniform float uColorLightness;\nuniform float uColorContrast;\n\nuniform float uRevealFar;\nuniform float uRevealAmplitude;\nuniform float uRevealRandomnessAmplitude;\nuniform float uRevealReverseFactor;\nuniform float uRevealProgress;\n\nuniform sampler2D uFBOTexture;\nuniform mat4 uFBOMatrix;\n\n#ifdef USE_SCREENSPACE_ATTENUATION\n    uniform sampler2D uMask;\n#endif\n\n#ifdef USE_FLOWFIELD\n    attribute vec2 position2;\n#endif\n\n#ifdef USE_POINT_SIZE_ATTENUATION\n    uniform float uPointSizeAttenuation;\n    attribute float random;\n#endif\n\nvarying vec4 vColor;\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n// #pragma glslify: noise_3d = require(../partials/noise_3d.glsl)\n\nfloat perlin_2d_2281831123(vec2 p)\n{\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(random2d(ip),random2d(ip+vec2(1.0,0.0)),u.x),\n        mix(random2d(ip+vec2(0.0,1.0)),random2d(ip+vec2(1.0,1.0)),u.x),u.y);\n    return res*res;\n}\n\nfloat getRevealProgress(vec3 _position, vec3 _cameraPosition, float _far, float _amplitude, float _progress, float _randomnessAmplitude, float _reverseFactor)\n{\n    // Distance to camera\n    float distanceToCamera = distance(_cameraPosition.xz, _position.xz);\n\n    // Reverse\n    float progress = abs(_reverseFactor - _progress);\n\n    float randomness = (random2d(_position.xz) - 0.5) * _randomnessAmplitude;\n\n    // Base\n    float revealProgress = (distanceToCamera - (progress * (_far + _amplitude * 2.0 + _randomnessAmplitude) - _amplitude - _randomnessAmplitude * 0.5) + randomness) / (_amplitude);\n\n    // Clamp\n    revealProgress = clamp(revealProgress, 0.0, 1.0);\n\n    // Reverse\n    revealProgress = 1.0 - abs(_reverseFactor - revealProgress);\n\n    // Ease\n    revealProgress = 1.0 - pow(1.0 - revealProgress, 2.0);\n\n    return revealProgress;\n}\n\nvoid main()\n{\n    vec4 initialModelPosition = modelMatrix * vec4(position, 1.0);\n\n    // FBO position\n    #ifdef USE_FLOWFIELD\n        vec4 fboData = texture2D(uFBOTexture, position2.xy);\n        vec3 fboPosition = vec4(uFBOMatrix * vec4(fboData.xyz, 1.0)).xyz;\n        vec4 modelPosition = modelMatrix * vec4(fboPosition, 1.0);\n    #else\n        vec4 modelPosition = initialModelPosition;\n    #endif\n\n    /**\n     * World UV\n     */\n    vec2 worldUv = modelPosition.xz / uTerrainSize + 0.5;\n    worldUv.y = 1.0 - worldUv.y;\n\n    vec4 terrainColor = texture2D(uTerrainData2, worldUv);\n\n    /**\n     * Position\n     */\n    // Terrain elevation\n    modelPosition.y += terrainColor.b * uTerrainElevation;\n\n    // Building elevation\n    modelPosition.y += pow(terrainColor.g, uBuildingsPower) * uBuildingsElevation;\n\n    // Distance to camera\n    float distanceToCamera = distance(uCameraPosition, modelPosition.xyz);\n\n    // Randomness\n    #ifdef USE_POSITION_RANDOMNESS\n        vec3 tempPosition = modelPosition.xyz;\n        modelPosition.x += (random2d(tempPosition.xy) - 0.5) * uPositionRandomness.x;\n        modelPosition.y += random2d(tempPosition.xz) * uPositionRandomness.y;\n        modelPosition.z += (random2d(tempPosition.yz) - 0.5) * uPositionRandomness.z;\n    #endif\n\n    // Lava\n    #ifdef USE_LAVA\n        float lavaNoise = (perlin_2d_2281831123(worldUv * uLavaPositionFrequency) + perlin_2d_2281831123(worldUv * uLavaPositionFrequency * 3.240)) / 2.0;\n        lavaNoise = pow(lavaNoise, uLavaPositionPower) + uLavaPositionOffset;\n\n        float lavaStrength = distanceToCamera * 0.2;\n\n        float lavaElevation = (sin(uTime * uLavaTimeFrequency + random2d(tempPosition.xy * 100.0) * 6.0) * 0.5 + 0.5) * lavaNoise * uLavaElevation * lavaStrength;\n\n        modelPosition.y += lavaElevation;\n    #endif\n\n    // Reveal\n    float revealProgress = getRevealProgress(initialModelPosition.xyz, uCameraPosition, uRevealFar, uRevealAmplitude, uRevealProgress, uRevealRandomnessAmplitude, uRevealReverseFactor);\n\n    modelPosition.y -= (pow(1.0 - revealProgress, 3.0)) * 0.003;\n\n    // Projection\n    vec4 viewPosition = viewMatrix * modelPosition;\n    gl_Position = projectionMatrix * viewPosition;\n\n    /**\n     * Size\n     */\n    // Base size\n    gl_PointSize = uPointSize;\n\n    // Randomness\n    // gl_PointSize *= 1.0 + (mod(position.x * 1000.0 + position.z * 567.0, 1.0) - 0.5) * (uPointSizeRandomness * 2.0);\n    gl_PointSize *= 1.0 + (1.0 - random2d(position.xz) - 0.5) * (uPointSizeRandomness * 2.0);\n\n    // Distance attenuation\n    gl_PointSize *= (1.0 / - viewPosition.z);\n\n    // Alpha attenuation\n    #ifdef USE_ALPHA_ATTENUATION\n        gl_PointSize *= terrainColor.r - random2d(position.xy) * 0.5;\n        gl_PointSize = clamp(gl_PointSize, 0.5, 100.0);\n        gl_PointSize -= 0.5;\n    #endif\n\n    // Proximity attenuation\n    #ifdef USE_SIZE_PROXIMITY\n        float nearAttenuation = clamp((distanceToCamera - uPointSizeProximityNear + uPointSizeProximityAmplitude * 0.5) / uPointSizeProximityAmplitude, 0.0, 1.0);\n        float farAttenuation = 1.0 - clamp((distanceToCamera - uPointSizeProximityFar - uPointSizeProximityAmplitude * 0.5) / uPointSizeProximityAmplitude, 0.0, 1.0);\n        float finalAttenuation = min(nearAttenuation, farAttenuation);\n        gl_PointSize *= finalAttenuation;\n    #endif\n\n    // Screen space attenuation\n    #ifdef USE_SCREENSPACE_ATTENUATION\n        vec2 screenSpacePosition = gl_Position.xy / gl_Position.w;\n        float screenSpaceAttenuation = texture2D(uMask, screenSpacePosition * 0.5 + 0.5).r;\n        gl_PointSize *= screenSpaceAttenuation;\n    #endif\n\n    // Reveal\n    gl_PointSize *= 1.0 - pow(1.0 - revealProgress, 3.0);\n\n    // Attenuation\n    #ifdef USE_POINT_SIZE_ATTENUATION\n        float scafoldingAmplitude = 7.0;\n        float attenuation = 1.0 + random * scafoldingAmplitude - uPointSizeAttenuation * (scafoldingAmplitude + 1.0);\n        attenuation = clamp(attenuation, 0.0, 1.0);\n        gl_PointSize *= attenuation;\n    #endif\n\n    // Flow field\n    #ifdef USE_FLOWFIELD\n        gl_PointSize *= min((1.0 - fboData.a) * 10.0, fboData.a);\n    #endif\n\n    vColor.a = gl_PointSize;\n\n    /**\n     * Color\n     */\n    #ifdef USE_COLOR\n        vColor.rgb = color.rgb;\n    #endif\n\n    #ifdef USE_TEXTURE\n        vec4 terrainTextureColor = texture2D(uTerrainData3, worldUv);\n        // vec3 brow = vec3(0.7, 0.5, 0.4);\n        // vec3 green = vec3(0.4, 0.75, 0.0);\n        // vColor.rgb = mix(green, brow, step(terrainTextureColor.g, 0.1));\n        vColor.rgb = terrainTextureColor.rgb;\n    #endif\n\n    // Randomness\n    vec3 hsv = rgb2hsv(vColor.rgb);\n    hsv.r += (random2d(position.xy + position.xz) - 0.5) * uColorRandomness;\n\n    hsv = clamp(hsv, vec3(0.0), vec3(1.0));\n\n    hsv.g += uColorSaturation;\n    hsv.b += uColorLightness;\n\n    vColor.rgb = hsv2rgb(hsv);\n    vColor.rgb *= uColorContrast;\n\n    // // Test\n    // vColor.rgb = vec3(screenSpaceAttenuation);\n}\n"
          , Xe = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uCameraPosition: {
                    value: null
                },
                uTime: {
                    value: null
                },
                uTerrainData2: {
                    value: null
                },
                uTerrainData3: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                },
                uBuildingsElevation: {
                    value: null
                },
                uBuildingsPower: {
                    value: null
                },
                uPointSize: {
                    value: null
                },
                uPointSizeRandomness: {
                    value: null
                },
                uPointSizeProximityNear: {
                    value: null
                },
                uPointSizeProximityFar: {
                    value: null
                },
                uPointSizeProximityAmplitude: {
                    value: null
                },
                uPointSizeAttenuation: {
                    value: null
                },
                uPositionRandomness: {
                    value: null
                },
                uLavaPositionFrequency: {
                    value: null
                },
                uLavaPositionOffset: {
                    value: null
                },
                uLavaPositionPower: {
                    value: null
                },
                uLavaElevation: {
                    value: null
                },
                uLavaTimeFrequency: {
                    value: null
                },
                uColorRandomness: {
                    value: null
                },
                uColorSaturation: {
                    value: null
                },
                uColorLightness: {
                    value: null
                },
                uColorContrast: {
                    value: null
                },
                uRevealFar: {
                    value: null
                },
                uRevealAmplitude: {
                    value: null
                },
                uRevealRandomnessAmplitude: {
                    value: null
                },
                uRevealReverseFactor: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                },
                uFBOTexture: {
                    value: null
                },
                uFBOMatrix: {
                    value: null
                },
                uMask: {
                    value: null
                }
            };
            t.uCameraPosition.value = new q["Rb"],
            t.uTime.value = 0,
            t.uBuildingsPower.value = 3,
            t.uPointSize.value = 3,
            t.uPointSizeRandomness.value = 1,
            t.uPointSizeProximityNear.value = 1,
            t.uPointSizeProximityFar.value = 2,
            t.uPointSizeProximityAmplitude.value = 1,
            t.uPositionRandomness.value = new q["Rb"](.005,.005,.005),
            t.uLavaPositionFrequency.value = 40,
            t.uLavaPositionOffset.value = 0,
            t.uLavaPositionPower.value = 4,
            t.uLavaElevation.value = 0,
            t.uLavaTimeFrequency.value = 15e-5,
            t.uColorRandomness.value = .1,
            t.uColorSaturation.value = 0,
            t.uColorLightness.value = 0,
            t.uColorContrast.value = 1,
            t.uRevealFar.value = 9,
            t.uRevealAmplitude.value = 4,
            t.uRevealRandomnessAmplitude.value = 2,
            t.uRevealReverseFactor.value = 0,
            t.uRevealProgress.value = 0;
            var i = {};
            "texture" === e.colorMode ? i.USE_TEXTURE = "" : i.USE_COLOR = "",
            e.pointSizeAttenuation && (i.USE_POINT_SIZE_ATTENUATION = ""),
            i.USE_POSITION_RANDOMNESS = "",
            i.USE_SIZE_PROXIMITY = "",
            i.USE_ALPHA_ATTENUATION = "",
            i.USE_LAVA = "",
            i.USE_SCREENSPACE_ATTENUATION = "",
            i.USE_FLOWFIELD = "";
            var a = new q["zb"]({
                transparent: !1,
                depthTest: !0,
                depthWrite: !0,
                lights: !1,
                uniforms: t,
                defines: i,
                vertexShader: $e,
                fragmentShader: Ye
            });
            return a
        }
          , Je = "#define GLSLIFY 1\nuniform vec2 uResolution;\n\nvarying vec4 vColor;\nvarying vec2 vScreenSpacePosition;\nuniform sampler2D uMask;\n\nvoid main()\n{\n    gl_FragColor = vColor;\n\n    vec2 screenSpacePosition = gl_FragCoord.xy / uResolution * 2.0 - 1.0;\n    float screenSpaceAttenuation = texture2D(uMask, gl_FragCoord.xy / uResolution).r - 0.3;\n    gl_FragColor.a *= screenSpaceAttenuation;\n}\n"
          , Qe = "#define GLSLIFY 1\nuniform vec3 uCameraPosition;\nuniform vec3 uCameraCloseColor;\nuniform sampler2D uTerrainData3;\nuniform sampler2D uTerrainData2;\nuniform float uTerrainSize;\nuniform float uTerrainElevation;\n\nuniform float uColorRandomness;\nuniform float uColorSaturation;\nuniform float uColorLightness;\nuniform float uColorContrast;\nuniform float uAlpha;\n\nvarying vec4 vColor;\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid main()\n{\n    /**\n     * World UV\n     */\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    vec2 worldUv = modelPosition.xz / uTerrainSize + 0.5;\n    worldUv.y = 1.0 - worldUv.y;\n\n    vec4 terrainColor = texture2D(uTerrainData2, worldUv);\n\n    /**\n     * Position\n     */\n    // Terrain elevation\n    modelPosition.y += terrainColor.b * uTerrainElevation;\n\n    // Projection\n    vec4 viewPosition = viewMatrix * modelPosition;\n    gl_Position = projectionMatrix * viewPosition;\n\n    /**\n     * Color\n     */\n    vec4 terrainTextureColor = texture2D(uTerrainData3, worldUv);\n    vColor.rgb = terrainTextureColor.rgb;\n\n    // Randomness\n    vec3 hsv = rgb2hsv(vColor.rgb);\n    hsv.r += (random2d(position.xy + position.xz) - 0.5) * uColorRandomness;\n\n    hsv = clamp(hsv, vec3(0.0), vec3(1.0));\n\n    hsv.g += uColorSaturation;\n    hsv.b += uColorLightness;\n\n    vColor.rgb = hsv2rgb(hsv);\n    vColor.rgb *= uColorContrast;\n    vColor.a = pow(terrainColor.r, 5.0) * uAlpha;\n\n    // Camera close color\n    float distanceToCamera = distance(uCameraPosition, modelPosition.xyz);\n    vColor.rgb = mix(uCameraCloseColor, vColor.rgb, clamp(distanceToCamera, 0.0, 1.0));\n}\n"
          , Ke = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uResolution: {
                    value: null
                },
                uCameraPosition: {
                    value: null
                },
                uCameraCloseColor: {
                    value: null
                },
                uTerrainData2: {
                    value: null
                },
                uTerrainData3: {
                    value: null
                },
                uTerrainSize: {
                    value: null
                },
                uTerrainElevation: {
                    value: null
                },
                uColorRandomness: {
                    value: null
                },
                uColorSaturation: {
                    value: null
                },
                uColorLightness: {
                    value: null
                },
                uColorContrast: {
                    value: null
                },
                uAlpha: {
                    value: null
                },
                uMask: {
                    value: null
                }
            };
            t.uResolution.value = e.resolution,
            t.uCameraPosition.value = new q["Rb"],
            t.uCameraCloseColor.value = new q["j"]("#b7a768"),
            t.uTerrainData2.value = e.terrainData2,
            t.uTerrainData3.value = e.terrainData3,
            t.uTerrainSize.value = e.terrainSize,
            t.uTerrainElevation.value = e.terrainElevation,
            t.uColorRandomness.value = .1,
            t.uColorSaturation.value = 0,
            t.uColorLightness.value = 0,
            t.uColorContrast.value = 1,
            t.uAlpha.value = 1;
            var i = {}
              , a = new q["zb"]({
                transparent: !0,
                depthTest: !0,
                depthWrite: !1,
                lights: !1,
                uniforms: t,
                defines: i,
                vertexShader: Qe,
                fragmentShader: Je
            });
            return a
        }
          , Ze = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = vec4(position * 2.0, 1.0);\n}\n"
          , et = "#define GLSLIFY 1\nuniform mat4 uSpaceMatrix;\nuniform sampler2D uBaseTexture;\nuniform sampler2D uTexture;\nuniform float uTime;\nuniform float uStrengthFrequency;\nuniform float uStrengthOffset;\nuniform float uStrengthPower;\nuniform float uLifeSpeed;\nuniform float uTurbulencesTimeFrequency;\nuniform float uTurbulencesFrequency;\nuniform float uTurbulencesSpeed;\nuniform vec3 uTurbulencesDirection;\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n//\tSimplex 4D Noise\n//\tby Ian McEwan, Ashima Arts\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nfloat permute(float x){return floor(mod(((x*34.0)+1.0)*x, 289.0));}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nfloat taylorInvSqrt(float r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nvec4 grad4(float j, vec4 ip){\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n  return p;\n}\n\nfloat snoise(vec4 v){\n  const vec2  C = vec2( 0.138196601125010504,  // (5 - sqrt(5))/20  G4\n                        0.309016994374947451); // (sqrt(5) - 1)/4   F4\n// First corner\n  vec4 i  = floor(v + dot(v, C.yyyy) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n// Other corners\n\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n//  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C\n  vec4 x1 = x0 - i1 + 1.0 * C.xxxx;\n  vec4 x2 = x0 - i2 + 2.0 * C.xxxx;\n  vec4 x3 = x0 - i3 + 3.0 * C.xxxx;\n  vec4 x4 = x0 - 1.0 + 4.0 * C.xxxx;\n\n// Permutations\n  i = mod(i, 289.0);\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n// Gradients\n// ( 7*7*6 points uniformly over a cube, mapped onto a 4-octahedron.)\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n// Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n// Mix contributions from the five corners\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\nvoid main()\n{\n    // Get previous color\n    vec4 color = texture2D(uTexture, vUv);\n    vec4 baseColor = texture2D(uBaseTexture, vUv);\n\n    // Space color\n    vec4 spaceColor = uSpaceMatrix * vec4(color.rgb, 1.0);\n    vec4 spaceBaseColor = uSpaceMatrix * vec4(baseColor.rgb, 1.0);\n\n    // Flow strength\n    float flowStrength = max(snoise(spaceBaseColor * uStrengthFrequency) + uStrengthOffset, 0.0);\n    flowStrength = pow(flowStrength, uStrengthPower);\n\n    // Create new color\n    vec4 newColor = vec4(0.0);\n\n    // Decrease life\n    newColor.a = color.a - uLifeSpeed * 1.0 * flowStrength;\n\n    // Is dead\n    if(newColor.a < 0.0)\n    {\n        // Reset\n        newColor.rgb = baseColor.rgb;\n        newColor.a = 1.0;\n    }\n\n    // Is alive\n    else\n    {\n        newColor.r = color.r + (snoise(vec4((spaceColor.rgb + 0.0   ) * uTurbulencesFrequency, uTime * uTurbulencesTimeFrequency)) + uTurbulencesDirection.x) * uTurbulencesSpeed * flowStrength;\n        newColor.g = color.g + (snoise(vec4((spaceColor.rgb + 1234.0) * uTurbulencesFrequency, uTime * uTurbulencesTimeFrequency)) + uTurbulencesDirection.y) * uTurbulencesSpeed * flowStrength;\n        newColor.b = color.b + (snoise(vec4((spaceColor.rgb + 9876.0) * uTurbulencesFrequency, uTime * uTurbulencesTimeFrequency)) + uTurbulencesDirection.z) * uTurbulencesSpeed * flowStrength;\n    }\n\n    gl_FragColor = newColor;\n}\n"
          , tt = function() {
            return new q["zb"]({
                vertexShader: Ze,
                fragmentShader: et,
                lights: !1,
                uniforms: {
                    uSpaceMatrix: {
                        value: null
                    },
                    uBaseTexture: {
                        value: null
                    },
                    uTexture: {
                        value: null
                    },
                    uTime: {
                        value: null
                    },
                    uStrengthFrequency: {
                        value: null
                    },
                    uStrengthOffset: {
                        value: null
                    },
                    uStrengthPower: {
                        value: null
                    },
                    uLifeSpeed: {
                        value: null
                    },
                    uTurbulencesTimeFrequency: {
                        value: null
                    },
                    uTurbulencesFrequency: {
                        value: null
                    },
                    uTurbulencesSpeed: {
                        value: null
                    },
                    uTurbulencesDirection: {
                        value: null
                    }
                }
            })
        }
          , it = function() {
            function e(t) {
                if (Object(M["a"])(this, e),
                this.debug = t.debug,
                this.renderer = t.renderer,
                this.time = t.time,
                this.positions = t.positions,
                this.width = 512,
                this.height = Math.ceil(this.positions.length / 3 / this.width),
                this.size = this.width * this.height,
                this.texel = {
                    x: 1 / this.width,
                    y: 1 / this.height
                },
                this.setSpace(),
                this.setBaseTexture(),
                this.setRenderTargets(),
                this.setEnvironment(),
                this.renderer.instance.setRenderTarget(this.renderTargets.primary),
                this.renderer.instance.render(this.scene, this.camera),
                this.renderer.instance.setRenderTarget(null),
                this.debug) {
                    var i = this.debug.addFolder("flowField");
                    i.open(),
                    i.add(this.material.uniforms.uStrengthFrequency, "value").min(0).max(3).step(.001).name("uStrengthFrequency"),
                    i.add(this.material.uniforms.uStrengthOffset, "value").min(-1.5).max(1.5).step(.001).name("uStrengthOffset"),
                    i.add(this.material.uniforms.uStrengthPower, "value").min(1).max(3).step(.001).name("uStrengthPower"),
                    i.add(this.material.uniforms.uLifeSpeed, "value").min(1e-5).max(.02).step(1e-5).name("uLifeSpeed"),
                    i.add(this.material.uniforms.uTurbulencesTimeFrequency, "value").min(0).max(.001).step(1e-7).name("uTurbulencesTimeFrequency"),
                    i.add(this.material.uniforms.uTurbulencesFrequency, "value").min(1e-4).max(4).step(1e-4).name("uTurbulencesFrequency"),
                    i.add(this.material.uniforms.uTurbulencesSpeed, "value").min(1e-4).max(.01).step(1e-4).name("uTurbulencesSpeed"),
                    i.add(this.material.uniforms.uTurbulencesDirection.value, "x").min(-10).max(10).step(.001).name("uTurbulencesDirectionX"),
                    i.add(this.material.uniforms.uTurbulencesDirection.value, "y").min(-10).max(10).step(.001).name("uTurbulencesDirectionY"),
                    i.add(this.material.uniforms.uTurbulencesDirection.value, "z").min(-10).max(10).step(.001).name("uTurbulencesDirectionZ"),
                    i.add(this, "reset").name("reset")
                }
            }
            return Object(O["a"])(e, [{
                key: "setSpace",
                value: function() {
                    this.space = {},
                    this.space.min = {},
                    this.space.min.x = 1 / 0,
                    this.space.min.y = 1 / 0,
                    this.space.min.z = 1 / 0,
                    this.space.max = {},
                    this.space.max.x = -1 / 0,
                    this.space.max.y = -1 / 0,
                    this.space.max.z = -1 / 0;
                    for (var e = 0; e < this.positions.length; e += 3)
                        this.positions[e + 0] < this.space.min.x && (this.space.min.x = this.positions[e + 0]),
                        this.positions[e + 1] < this.space.min.y && (this.space.min.y = this.positions[e + 1]),
                        this.positions[e + 2] < this.space.min.z && (this.space.min.z = this.positions[e + 2]),
                        this.positions[e + 0] > this.space.max.x && (this.space.max.x = this.positions[e + 0]),
                        this.positions[e + 1] > this.space.max.y && (this.space.max.y = this.positions[e + 1]),
                        this.positions[e + 2] > this.space.max.z && (this.space.max.z = this.positions[e + 2]);
                    this.space.amplitude = {},
                    this.space.amplitude.x = this.space.max.x - this.space.min.x,
                    this.space.amplitude.y = this.space.max.y - this.space.min.y,
                    this.space.amplitude.z = this.space.max.z - this.space.min.z,
                    this.space.matrix = new q["S"],
                    this.space.matrix.makeTranslation(this.space.min.x, this.space.min.y, this.space.min.z),
                    this.space.matrix.scale(new q["Rb"](this.space.amplitude.x,this.space.amplitude.y,this.space.amplitude.z))
                }
            }, {
                key: "setBaseTexture",
                value: function() {
                    for (var e = new Float32Array(4 * this.size), t = 0; t < this.positions.length / 3; t++) {
                        var i = 3 * t
                          , a = 4 * t;
                        e[a + 0] = (this.positions[i + 0] - this.space.min.x) / this.space.amplitude.x,
                        e[a + 1] = (this.positions[i + 1] - this.space.min.y) / this.space.amplitude.y,
                        e[a + 2] = (this.positions[i + 2] - this.space.min.z) / this.space.amplitude.z,
                        e[a + 3] = Math.random()
                    }
                    this.baseTexture = new q["l"](e,this.width,this.height,q["sb"],q["v"]),
                    this.baseTexture.minFilter = q["ab"],
                    this.baseTexture.magFilter = q["ab"],
                    this.baseTexture.generateMipmaps = !1,
                    this.baseTexture.needsUpdate = !0,
                    this.baseTexture.flipY = !1
                }
            }, {
                key: "setRenderTargets",
                value: function() {
                    this.renderTargets = {},
                    this.renderTargets.a = new q["Ub"](this.width,this.height,{
                        wrapS: q["h"],
                        wrapT: q["h"],
                        minFilter: q["ab"],
                        magFilter: q["ab"],
                        format: q["sb"],
                        type: q["v"],
                        depthWrite: !1,
                        depthBuffer: !1,
                        stencilBuffer: !1
                    }),
                    this.renderTargets.b = this.renderTargets.a.clone(),
                    this.renderTargets.primary = this.renderTargets.a,
                    this.renderTargets.secondary = this.renderTargets.b
                }
            }, {
                key: "setEnvironment",
                value: function() {
                    this.scene = new q["yb"],
                    this.camera = new q["gb"](-1,1,1,-1,.5,1.5),
                    this.camera.position.z = 1,
                    this.geometry = new q["jb"](1,1,1,1);
                    var e = .0650636;
                    this.material = new tt,
                    this.material.uniforms.uBaseTexture.value = this.baseTexture,
                    this.material.uniforms.uTexture.value = this.baseTexture,
                    this.material.uniforms.uTime.value = 0,
                    this.material.uniforms.uStrengthFrequency.value = 2 / e,
                    this.material.uniforms.uStrengthOffset.value = .3,
                    this.material.uniforms.uStrengthPower.value = 2.6,
                    this.material.uniforms.uLifeSpeed.value = .005,
                    this.material.uniforms.uTurbulencesTimeFrequency.value = 1e-4,
                    this.material.uniforms.uTurbulencesFrequency.value = .6 / e,
                    this.material.uniforms.uTurbulencesSpeed.value = 2e-4,
                    this.material.uniforms.uTurbulencesDirection.value = new q["Rb"](0,2,0),
                    this.material.uniforms.uSpaceMatrix.value = this.space.matrix,
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh)
                }
            }, {
                key: "render",
                value: function() {
                    this.material.uniforms.uTexture.value = this.renderTargets.primary.texture,
                    this.material.uniforms.uTime.value = this.time.elapsed,
                    this.renderer.instance.setRenderTarget(this.renderTargets.secondary),
                    this.renderer.instance.render(this.scene, this.camera),
                    this.renderer.instance.setRenderTarget(null),
                    this.renderTargets.primary.needsUpdate = !0;
                    var e = this.renderTargets.primary;
                    this.renderTargets.primary = this.renderTargets.secondary,
                    this.renderTargets.secondary = e
                }
            }, {
                key: "reset",
                value: function() {
                    var e = this
                      , t = new q["zb"]({
                        uniforms: {
                            uTexture: {
                                value: this.baseTexture
                            }
                        },
                        vertexShader: "\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n    gl_Position = vec4(position * 2.0, 1.0);\n}\n            ",
                        fragmentShader: "\nuniform sampler2D uTexture;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_FragColor = texture2D(uTexture, vUv);\n}\n            "
                    });
                    this.mesh.material = t,
                    window.requestAnimationFrame((function() {
                        window.requestAnimationFrame((function() {
                            e.mesh.material = e.material
                        }
                        ))
                    }
                    ))
                }
            }, {
                key: "destroy",
                value: function() {
                    this.baseTexture.dispose(),
                    this.renderTargets.a.dispose(),
                    this.renderTargets.b.dispose(),
                    this.scene.dispose(),
                    this.geometry.dispose(),
                    this.material.dispose()
                }
            }]),
            e
        }()
          , at = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.resources = t.resources,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.container = t.container,
                this.camera = t.camera,
                this.fieldParticlesGeometries = t.fieldsGeometries,
                this.terrainData2Texture = t.terrainData2Texture,
                this.terrainData3Texture = t.terrainData3Texture,
                this.active = !1,
                this.playing = !0,
                this.visible = !1,
                this.debug && (this.debugFolder = this.debug.addFolder("particles village")),
                this.setTerrainPlane(),
                this.setTerrainParticles(),
                this.setFieldParticles(),
                this.setMapUpload()
            }
            return Object(O["a"])(e, [{
                key: "reset",
                value: function() {
                    this.terrainParticles.items[0].material.uniforms.uPointSize.value = this.terrainParticles.items[0].settings.pointSize,
                    this.fieldParticles.material.uniforms.uPointSize.value = this.fieldParticles.pointSize * this.config.pixelRatio * this.sizes.viewport.height * (this.fieldParticles.flowField.active ? 1 : .5),
                    this.fieldParticles.material.uniforms.uPointSizeAttenuation.value = 0
                }
            }, {
                key: "setTerrainPlane",
                value: function() {
                    var e = this;
                    if (this.terrainPlane = {},
                    this.terrainPlane.visible = !0,
                    this.terrainPlane.geometry = new Ne(10,10,50,50,{
                        uv: !0
                    }),
                    this.terrainPlane.material = new Ke({
                        resolution: new q["Qb"](this.sizes.viewport.width * this.config.pixelRatio,this.sizes.viewport.height * this.config.pixelRatio),
                        terrainData2: this.terrainData2Texture,
                        terrainData3: this.terrainData3Texture,
                        terrainSize: 10,
                        terrainElevation: .75
                    }),
                    this.terrainPlane.material.uniforms.uColorSaturation.value = .3,
                    this.terrainPlane.material.uniforms.uColorLightness.value = .015,
                    this.terrainPlane.material.uniforms.uColorContrast.value = 1.6,
                    this.terrainPlane.material.uniforms.uAlpha.value = 1,
                    this.terrainPlane.material.uniforms.uMask.value = this.resources.items.paintingMaskTexture,
                    this.sizes.on("resize", (function() {
                        e.terrainPlane.material.uniforms.uResolution.value.x = e.sizes.viewport.width * e.config.pixelRatio,
                        e.terrainPlane.material.uniforms.uResolution.value.y = e.sizes.viewport.height * e.config.pixelRatio
                    }
                    )),
                    this.terrainPlane.mesh = new q["T"](this.terrainPlane.geometry,this.terrainPlane.material),
                    this.terrainPlane.mesh.rotation.x = .5 * -Math.PI,
                    this.terrainPlane.mesh.position.y = -.015,
                    this.terrainPlane.mesh.matrixAutoUpdate = !1,
                    this.terrainPlane.mesh.updateMatrix(),
                    this.container.add(this.terrainPlane.mesh),
                    this.time.on("tick", (function() {
                        e.active && e.playing && e.terrainPlane.material.uniforms.uCameraPosition.value.copy(e.camera.instance.position)
                    }
                    )),
                    this.debug) {
                        var t = this.debugFolder.addFolder("plane");
                        t.add(this.terrainPlane.mesh.position, "y").min(-1).max(1).step(.001).name("elevation"),
                        t.add(this.terrainPlane, "visible").name("visible")
                    }
                }
            }, {
                key: "setTerrainParticles",
                value: function() {
                    var e = this;
                    this.terrainParticles = {},
                    this.terrainParticles.visible = !0,
                    this.terrainParticles.items = [],
                    this.terrainParticles.container = new q["fb"],
                    this.terrainParticles.container.matrixAutoUpdate = !1,
                    this.container.add(this.terrainParticles.container),
                    this.terrainParticles.settings = [{
                        subdivision: 300,
                        pointSize: 20,
                        near: .6,
                        far: 50,
                        amplitude: .6
                    }];
                    var t, i = 0, a = Object(L["a"])(this.terrainParticles.settings);
                    try {
                        var s = function() {
                            var a = t.value
                              , s = {};
                            if (e.terrainParticles.terrain = s,
                            s.settings = a,
                            s.geometry = new Ne(10,10,a.subdivision,a.subdivision,{
                                random: !0
                            }),
                            s.geometry.rotateX(.5 * Math.PI),
                            s.material = new Xe({
                                colorMode: "texture"
                            }),
                            s.material.uniforms.uTerrainData2.value = e.terrainData2Texture,
                            s.material.uniforms.uTerrainData3.value = e.terrainData3Texture,
                            s.material.uniforms.uTerrainSize.value = 10,
                            s.material.uniforms.uTerrainElevation.value = .75,
                            s.material.uniforms.uBuildingsElevation.value = .25,
                            s.material.uniforms.uPointSize.value = a.pointSize,
                            s.material.uniforms.uPointSizeProximityNear.value = a.near,
                            s.material.uniforms.uPointSizeProximityFar.value = a.far,
                            s.material.uniforms.uPointSizeProximityAmplitude.value = a.amplitude,
                            s.material.uniforms.uPositionRandomness.value.x = .05,
                            s.material.uniforms.uPositionRandomness.value.y = .05,
                            s.material.uniforms.uPositionRandomness.value.z = .05,
                            s.material.uniforms.uLavaElevation.value = 2,
                            s.material.uniforms.uColorSaturation.value = .2,
                            s.material.uniforms.uColorLightness.value = 0,
                            s.material.uniforms.uColorContrast.value = 1.4,
                            s.material.uniforms.uMask.value = e.resources.items.paintingMaskTexture,
                            delete s.material.defines.USE_FLOWFIELD,
                            s.points = new q["mb"](s.geometry,s.material),
                            s.points.matrixAutoUpdate = !1,
                            s.points.updateMatrix(),
                            e.terrainParticles.container.add(s.points),
                            e.terrainParticles.items.push(s),
                            e.time.on("tick", (function() {
                                e.active && e.playing && (s.material.uniforms.uCameraPosition.value.copy(e.camera.instance.position),
                                s.material.uniforms.uTime.value = e.time.elapsed)
                            }
                            )),
                            e.debug) {
                                var n = e.debugFolder.addFolder("terrain ".concat(i));
                                n.add(s.material.uniforms.uTerrainElevation, "value").min(0).max(1).step(.001).name("terrain elevation"),
                                n.add(s.material.uniforms.uBuildingsElevation, "value").min(0).max(5).step(.001).name("buildings elevation"),
                                n.add(s.material.uniforms.uBuildingsPower, "value").min(0).max(5).step(.001).name("buildings power"),
                                n.add(s.material.uniforms.uPointSize, "value").min(0).max(20).step(.001).name("point size"),
                                n.add(s.material.uniforms.uPointSizeRandomness, "value").min(0).max(1).step(.001).name("point size randomness"),
                                n.add(s.material.uniforms.uPointSizeProximityNear, "value").min(0).max(10).step(1e-4).name("proximity near"),
                                n.add(s.material.uniforms.uPointSizeProximityFar, "value").min(0).max(10).step(1e-4).name("proximity far"),
                                n.add(s.material.uniforms.uPointSizeProximityAmplitude, "value").min(0).max(5).step(1e-4).name("proximity amplitude"),
                                n.add(s.material.uniforms.uPositionRandomness.value, "x").min(0).max(.2).step(1e-4).name("position randomness x"),
                                n.add(s.material.uniforms.uPositionRandomness.value, "y").min(0).max(.2).step(1e-4).name("position randomness y"),
                                n.add(s.material.uniforms.uPositionRandomness.value, "z").min(0).max(.2).step(1e-4).name("position randomness z"),
                                n.add(s.material.uniforms.uLavaPositionFrequency, "value").min(1).max(1e3).step(.1).name("lava pos. freq."),
                                n.add(s.material.uniforms.uLavaPositionOffset, "value").min(0).max(1).step(1e-4).name("lava pos. offset"),
                                n.add(s.material.uniforms.uLavaPositionPower, "value").min(0).max(5).step(.01).name("lava pos. power"),
                                n.add(s.material.uniforms.uLavaElevation, "value").min(0).max(2).step(.01).name("lava elevation"),
                                n.add(s.material.uniforms.uLavaTimeFrequency, "value").min(0).max(.001).step(1e-6).name("lava time frequency"),
                                n.add(s.material.uniforms.uColorRandomness, "value").min(0).max(1).step(.001).name("color randomness"),
                                n.add(s.material.uniforms.uColorSaturation, "value").min(-1).max(1).step(.001).name("color saturation"),
                                n.add(s.material.uniforms.uColorLightness, "value").min(-1).max(1).step(.001).name("color lightness"),
                                n.add(s.material.uniforms.uColorContrast, "value").min(0).max(3).step(.001).name("color contrast")
                            }
                            i++
                        };
                        for (a.s(); !(t = a.n()).done; )
                            s()
                    } catch (n) {
                        a.e(n)
                    } finally {
                        a.f()
                    }
                }
            }, {
                key: "setFieldParticles",
                value: function() {
                    var e = this;
                    this.fieldParticles = {},
                    this.fieldParticles.visible = !0,
                    this.fieldParticles.pointSize = .0025,
                    this.fieldParticles.geometry = this.fieldParticlesGeometries.all,
                    this.fieldParticles.geometry.deleteAttribute("uv"),
                    this.fieldParticles.geometry.deleteAttribute("normal"),
                    this.fieldParticles.flowField = {},
                    this.fieldParticles.flowField.active = !this.config.iOS,
                    this.fieldParticles.flowField.map = new it({
                        debug: this.debugFolder,
                        renderer: this.renderer,
                        time: this.time,
                        positions: this.fieldParticles.geometry.attributes.position.array
                    });
                    for (var t = this.fieldParticles.geometry.attributes.position.count, i = new Float32Array(2 * t), a = new Float32Array(t), s = 0; s < t; s++) {
                        var n = 2 * s;
                        i[n + 0] = s % this.fieldParticles.flowField.map.width / this.fieldParticles.flowField.map.width + .5 * this.fieldParticles.flowField.map.texel.x,
                        i[n + 1] = ~~(s / this.fieldParticles.flowField.map.width) / this.fieldParticles.flowField.map.height + .5 * this.fieldParticles.flowField.map.texel.y,
                        a[n] = Math.random()
                    }
                    if (this.fieldParticles.geometry.setAttribute("position2", new q["e"](i,2)),
                    this.fieldParticles.geometry.setAttribute("random", new q["e"](a,1)),
                    this.fieldParticles.material = new Xe({
                        colorMode: "color",
                        pointSizeAttenuation: !0
                    }),
                    this.fieldParticles.material.uniforms.uTerrainData2.value = this.terrainData2Texture,
                    this.fieldParticles.material.uniforms.uTerrainSize.value = 10,
                    this.fieldParticles.material.uniforms.uTerrainElevation.value = .75,
                    this.fieldParticles.material.uniforms.uBuildingsElevation.value = 0,
                    this.fieldParticles.material.uniforms.uPointSize.value = this.fieldParticles.pointSize * this.config.pixelRatio * this.sizes.viewport.height * (this.fieldParticles.flowField.active ? 1 : .5),
                    this.fieldParticles.material.uniforms.uPointSizeProximityNear.value = .006,
                    this.fieldParticles.material.uniforms.uPointSizeProximityFar.value = 2,
                    this.fieldParticles.material.uniforms.uPointSizeProximityAmplitude.value = .005,
                    this.fieldParticles.material.uniforms.uPointSizeAttenuation.value = 0,
                    this.fieldParticles.material.uniforms.uLavaPositionFrequency.value = 250,
                    this.fieldParticles.material.uniforms.uLavaPositionOffset.value = 0,
                    this.fieldParticles.material.uniforms.uLavaPositionPower.value = 4,
                    this.fieldParticles.material.uniforms.uLavaElevation.value = 0,
                    this.fieldParticles.material.uniforms.uLavaTimeFrequency.value = .0015,
                    this.fieldParticles.material.uniforms.uPositionRandomness.value.x = 0,
                    this.fieldParticles.material.uniforms.uPositionRandomness.value.y = 0,
                    this.fieldParticles.material.uniforms.uPositionRandomness.value.z = 0,
                    this.fieldParticles.material.uniforms.uColorRandomness.value = 0,
                    this.fieldParticles.material.uniforms.uColorSaturation.value = 0,
                    this.fieldParticles.material.uniforms.uColorLightness.value = 0,
                    this.fieldParticles.material.uniforms.uColorContrast.value = 1.2,
                    this.fieldParticles.material.uniforms.uFBOTexture.value = this.fieldParticles.flowField.map.renderTargets.primary.texture,
                    this.fieldParticles.material.uniforms.uFBOMatrix.value = this.fieldParticles.flowField.map.space.matrix,
                    this.fieldParticles.material.uniforms.uMask.value = this.resources.items.paintingMaskTexture,
                    delete this.fieldParticles.material.defines.USE_ALPHA_ATTENUATION,
                    delete this.fieldParticles.material.defines.USE_SIZE_PROXIMITY,
                    this.fieldParticles.flowField.active ? (this.fieldParticles.material.defines.USE_FLOWFIELD = "",
                    delete this.fieldParticles.material.defines.USE_LAVA,
                    delete this.fieldParticles.material.defines.USE_POSITION_RANDOMNESS,
                    this.fieldParticles.material.needsUpdate = !0) : (delete this.fieldParticles.material.defines.USE_FLOWFIELD,
                    this.fieldParticles.material.defines.USE_LAVA = "",
                    this.fieldParticles.material.defines.USE_POSITION_RANDOMNESS = "",
                    this.fieldParticles.material.needsUpdate = !0),
                    this.fieldParticles.points = new q["mb"](this.fieldParticles.geometry,this.fieldParticles.material),
                    this.fieldParticles.points.frustumCulled = !1,
                    this.fieldParticles.points.matrixAutoUpdate = !1,
                    this.fieldParticles.points.updateMatrix(),
                    this.container.add(this.fieldParticles.points),
                    this.sizes.on("resize", (function() {
                        e.fieldParticles.material.uniforms.uPointSize.value = e.fieldParticles.pointSize * e.config.pixelRatio * e.sizes.viewport.height * (e.fieldParticles.flowField.active ? 1 : .5)
                    }
                    )),
                    this.time.on("tick", (function() {
                        e.active && e.playing && (e.fieldParticles.material.uniforms.uTime.value = e.time.elapsed,
                        e.fieldParticles.material.uniforms.uCameraPosition.value.copy(e.camera.instance.position),
                        e.fieldParticles.flowField.active && (e.fieldParticles.flowField.map.render(),
                        e.fieldParticles.material.uniforms.uFBOTexture.value = e.fieldParticles.flowField.map.renderTargets.secondary.texture))
                    }
                    )),
                    this.debug) {
                        var r = this.debugFolder.addFolder("fieldParticles");
                        r.open(),
                        r.add(this.fieldParticles, "visible").name("visible"),
                        r.add(this.fieldParticles.material.uniforms.uTerrainElevation, "value").min(0).max(1).step(.001).name("terrain elevation"),
                        r.add(this.fieldParticles.material.uniforms.uBuildingsElevation, "value").min(0).max(3).step(.001).name("buildings elevation"),
                        r.add(this.fieldParticles.material.uniforms.uBuildingsPower, "value").min(0).max(3).step(.001).name("buildings power"),
                        r.add(this.fieldParticles.material.uniforms.uPointSize, "value").min(0).max(20).step(.001).name("point size"),
                        r.add(this.fieldParticles.material.uniforms.uPointSizeRandomness, "value").min(0).max(1).step(.001).name("point size randomness"),
                        r.add(this.fieldParticles.material.uniforms.uPointSizeAttenuation, "value").min(0).max(1).step(.001).name("point size attenuation"),
                        r.add(this.fieldParticles.material.uniforms.uPositionRandomness.value, "x").min(0).max(.2).step(1e-4).name("position randomness x"),
                        r.add(this.fieldParticles.material.uniforms.uPositionRandomness.value, "y").min(0).max(.2).step(1e-4).name("position randomness y"),
                        r.add(this.fieldParticles.material.uniforms.uPositionRandomness.value, "z").min(0).max(.2).step(1e-4).name("position randomness z"),
                        r.add(this.fieldParticles.material.uniforms.uLavaPositionFrequency, "value").min(1).max(1e3).step(.1).name("lava pos. freq."),
                        r.add(this.fieldParticles.material.uniforms.uLavaPositionOffset, "value").min(0).max(1).step(1e-4).name("lava pos. offset"),
                        r.add(this.fieldParticles.material.uniforms.uLavaPositionPower, "value").min(0).max(5).step(.01).name("lava pos. power"),
                        r.add(this.fieldParticles.material.uniforms.uLavaElevation, "value").min(0).max(4).step(.01).name("lava elevation"),
                        r.add(this.fieldParticles.material.uniforms.uLavaTimeFrequency, "value").min(0).max(.001).step(1e-6).name("lava time frequency"),
                        r.add(this.fieldParticles.material.uniforms.uColorRandomness, "value").min(0).max(1).step(.001).name("color randomness"),
                        r.add(this.fieldParticles.material.uniforms.uColorSaturation, "value").min(-1).max(1).step(.001).name("color saturation"),
                        r.add(this.fieldParticles.material.uniforms.uColorLightness, "value").min(-1).max(1).step(.001).name("color lightness"),
                        r.add(this.fieldParticles.material.uniforms.uColorContrast, "value").min(0).max(3).step(.001).name("color contrast")
                    }
                }
            }, {
                key: "setMapUpload",
                value: function() {
                    var e = this;
                    this.debug && (this.mapUpload = {},
                    this.renderer.instance.domElement.addEventListener("dragover", (function(e) {
                        e.preventDefault(),
                        e.stopPropagation()
                    }
                    )),
                    this.renderer.instance.domElement.addEventListener("drop", (function(t) {
                        t.preventDefault(),
                        t.stopPropagation();
                        var i = t.dataTransfer.files
                          , a = i[0]
                          , s = new FileReader;
                        s.onload = function(t) {
                            var i = new Image;
                            i.src = t.target.result;
                            var a = new q["Ib"](i);
                            a.needsUpdate = !0,
                            e.terrainParticles.material.uniforms.uTerrainData3.value = a,
                            e.terrainPlane.material.uniforms.uTerrainData3.value = a
                        }
                        ,
                        s.readAsDataURL(a)
                    }
                    )))
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                    case "composition":
                        this.terrainParticles.container.visible = !1,
                        this.terrainPlane.mesh.visible = !1,
                        this.fieldParticles.points.visible = !1;
                        break;
                    case "overlay":
                        this.terrainParticles.container.visible = this.visible && !this.config.mobile,
                        this.terrainPlane.mesh.visible = this.visible,
                        this.fieldParticles.points.visible = this.visible;
                        break
                    }
                }
            }, {
                key: "setForField",
                value: function(e) {
                    this.fieldParticles.points.position.x = e.coordinates.cameraFocus.position.x,
                    this.fieldParticles.points.position.z = e.coordinates.cameraFocus.position.z,
                    this.fieldParticles.points.rotation.y = e.coordinates.cameraFocus.rotation.y,
                    this.fieldParticles.points.updateMatrix()
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.active = !1
                }
            }, {
                key: "destroy",
                value: function() {
                    this.terrainPlane.geometry.dispose(),
                    this.terrainPlane.material.dispose();
                    var e, t = Object(L["a"])(this.terrainParticles.items);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.geometry.dispose(),
                            i.material.dispose()
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                    this.fieldParticles.flowField.map.destroy(),
                    this.fieldParticles.material.dispose()
                }
            }]),
            e
        }()
          , st = "precision highp float;\n#define GLSLIFY 1\n\nuniform sampler2D uTexture;\nuniform sampler2D uRevealTexture;\nuniform float uTime;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\nuniform float uRevealProgress;\n\n#ifdef USE_HIGHLIGHT\n    uniform vec4 uHighlightBounding;\n    uniform vec3 uHighlightColor;\n    uniform float uHighlightAlpha;\n    uniform float uHighlightPixelRatio;\n    uniform vec2 uResolution;\n\n    float insideBox(vec2 v, vec2 bottomLeft, vec2 topRight)\n    {\n        vec2 s = step(bottomLeft, v) - step(topRight, v);\n        return s.x * s.y;\n    }\n#endif\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    // Color\n    vec4 color = texture2D(uTexture, vUv);\n\n    // Perlin progress\n    color.a *= getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uRevealProgress, uTime);\n\n    // Highlight\n    #ifdef USE_HIGHLIGHT\n        vec2 screenCoordinates = (gl_FragCoord.xy + 1.0) / uHighlightPixelRatio;\n        screenCoordinates.y = uResolution.y - screenCoordinates.y;\n        float inHighlight = insideBox(screenCoordinates, uHighlightBounding.xy, uHighlightBounding.xy + uHighlightBounding.zw);\n        color.rgb = mix(color.rgb, uHighlightColor, inHighlight * uHighlightAlpha);\n    #endif\n\n    gl_FragColor = color;\n}\n"
          , nt = "#define GLSLIFY 1\nuniform vec2 uResolution;\nuniform vec4 uBounding;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    vec2 newPosition = position.xy;\n\n    // Resize\n    newPosition += vec2(1.0, - 1.0);\n    newPosition *= vec2(uBounding.zw) / uResolution;\n    newPosition += vec2(- 1.0, 1.0);\n\n    // Offset\n    newPosition.x += uBounding.x * 2.0 / uResolution.x;\n    newPosition.y -= uBounding.y * 2.0 / uResolution.y;\n\n    gl_Position = vec4(newPosition, 0.0, 1.0);\n\n    vUv = uv;\n}\n"
          , rt = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uTexture: {
                    value: null
                },
                uResolution: {
                    value: null
                },
                uBounding: {
                    value: null
                },
                uTime: {
                    value: null
                },
                uRevealTexture: {
                    value: null
                },
                uRevealTextureFrequency: {
                    value: null
                },
                uRevealRandomFrequency: {
                    value: null
                },
                uRevealProgress: {
                    value: null
                },
                uHighlightBounding: {
                    value: null
                },
                uHighlightColor: {
                    value: null
                },
                uHighlightAlpha: {
                    value: null
                },
                uHighlightPixelRatio: {
                    value: null
                }
            };
            t.uTexture.value = e.texture,
            t.uResolution.value = e.resolution,
            t.uBounding.value = e.bounding,
            t.uTime.value = 0,
            t.uRevealTexture.value = e.revealTexture,
            t.uRevealTextureFrequency.value = e.textureFrequency,
            t.uRevealRandomFrequency.value = e.randomFrequency,
            t.uRevealProgress.value = 0;
            var i = st
              , a = nt;
            return e.highlight && (i = "#define USE_HIGHLIGHT\n" + i,
            a = "#define USE_HIGHLIGHT\n" + a,
            t.uHighlightBounding.value = e.highlightBounding,
            t.uHighlightColor.value = e.highlightColor,
            t.uHighlightAlpha.value = 0,
            t.uHighlightPixelRatio.value = e.highlightPixelRatio),
            new q["ub"]({
                transparent: !0,
                depthTest: !1,
                depthWrite: !1,
                uniforms: t,
                vertexShader: a,
                fragmentShader: i
            })
        }
          , ot = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.scene = t.scene,
                this.resources = t.resources,
                this.colors = t.colors,
                this.breakpoints = t.breakpoints,
                this.bounding = t.bounding,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = !0,
                this.text = "Parcelles\nde\nChartogne\nTaillet",
                this.text = this.text.toUpperCase(),
                this.debug && (this.debugFolder = this.debug.addFolder("loadingInterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](2.5,10),
                        randomFrequency: new q["Qb"](5,10)
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.measures.update = function() {
                        switch (e.bounding.left = 0,
                        e.bounding.top = 0,
                        e.bounding.width = e.sizes.viewport.width,
                        e.bounding.height = e.sizes.viewport.height,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.padding = 150,
                            e.measures.fontSize = 80;
                            break;
                        case 1:
                            e.measures.padding = 70,
                            e.measures.fontSize = 70;
                            break;
                        case 2:
                            e.measures.padding = 60,
                            e.measures.fontSize = 60;
                            break;
                        case 3:
                            e.measures.padding = 50,
                            e.measures.fontSize = 50;
                            break;
                        case 4:
                            e.measures.padding = 40,
                            e.measures.fontSize = 40;
                            break;
                        case 5:
                            e.measures.padding = 30,
                            e.measures.fontSize = 25;
                            break
                        }
                        e.context.font = "".concat(e.measures.fontSize, "px ShipleyRegular");
                        var t, i = e.text.split("\n"), a = 0, s = 0, n = null, r = Object(L["a"])(i);
                        try {
                            for (r.s(); !(t = r.n()).done; ) {
                                var o = t.value
                                  , l = null;
                                l = e.context.measureText(o[0]),
                                l.width > a && (a = l.width),
                                l = e.context.measureText(o[o.length - 1]),
                                l.width > s && (s = l.width),
                                (null === n || o.length > n.length) && (n = o)
                            }
                        } catch (u) {
                            r.e(u)
                        } finally {
                            r.f()
                        }
                        switch (e.measures.textLeft = e.measures.padding + .5 * a,
                        e.measures.textRight = e.measures.padding + .5 * a,
                        e.measures.textWidth = e.bounding.width - e.measures.textLeft - e.measures.textRight,
                        e.measures.textInterLetter = e.measures.textWidth / (n.length - 1),
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.textHeight = .5 * e.bounding.height;
                            break;
                        case 1:
                            e.measures.textHeight = .5 * e.bounding.height;
                            break;
                        case 2:
                            e.measures.textHeight = .5 * e.bounding.height;
                            break;
                        case 3:
                            e.measures.textHeight = .5 * e.bounding.height;
                            break;
                        case 4:
                            e.measures.textHeight = .35 * e.bounding.height;
                            break;
                        case 5:
                            e.measures.textHeight = .35 * e.bounding.height;
                            break
                        }
                        e.measures.textTop = .5 * (e.bounding.height - e.measures.textHeight),
                        e.measures.textBottom = .5 * (e.bounding.height - e.measures.textHeight),
                        e.measures.textInterLine = e.measures.textHeight / (i.length - 1)
                    }
                    ,
                    this.measures.update()
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.font = "".concat(this.measures.fontSize, "px ShipleyRegular"),
                    this.context.textAlign = "center",
                    this.context.fillStyle = this.colors.darkerPencil.string;
                    var e, t = this.text.split("\n"), i = 0, a = Object(L["a"])(t);
                    try {
                        for (a.s(); !(e = a.n()).done; ) {
                            var s, n = e.value, r = 0, o = Object(L["a"])(n);
                            try {
                                for (o.s(); !(s = o.n()).done; ) {
                                    var l = s.value
                                      , u = this.measures.textLeft + this.measures.textInterLetter * r
                                      , h = this.measures.textTop + this.measures.textInterLine * i;
                                    this.context.fillText(l, u, h),
                                    r++
                                }
                            } catch (c) {
                                o.e(c)
                            } finally {
                                o.f()
                            }
                            i++
                        }
                    } catch (c) {
                        a.e(c)
                    } finally {
                        a.f()
                    }
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: 4.5
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function(e) {
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: 2,
                        onComplete: function() {
                            "function" === typeof e && e()
                        }
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }()
          , lt = (i("cb29"),
        function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.scene = t.scene,
                this.resources = t.resources,
                this.colors = t.colors,
                this.breakpoints = t.breakpoints,
                this.bounding = t.bounding,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = !0,
                this.debug && (this.debugFolder = this.debug.addFolder("mapInterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    var e = this;
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,5.8),
                        randomFrequency: new q["Qb"](3.8,10)
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.time.on("tick", (function() {
                        e.visible && (e.material.uniforms.uTime.value = 1e-4 * e.time.elapsed)
                    }
                    )),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.measures.update = function() {
                        switch (e.bounding.left = 0,
                        e.bounding.top = 0,
                        e.bounding.width = e.sizes.viewport.width,
                        e.bounding.height = e.sizes.viewport.height,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.mapTop = 160,
                            e.measures.mapRight = 100,
                            e.measures.mapBottom = 200,
                            e.measures.mapLeft = 100;
                            break;
                        case 1:
                            e.measures.mapTop = 120,
                            e.measures.mapRight = 40,
                            e.measures.mapBottom = 160,
                            e.measures.mapLeft = 40;
                            break;
                        case 2:
                            e.measures.mapTop = 100,
                            e.measures.mapRight = 30,
                            e.measures.mapBottom = 140,
                            e.measures.mapLeft = 30;
                            break;
                        case 3:
                            e.measures.mapTop = 80,
                            e.measures.mapRight = 20,
                            e.measures.mapBottom = 20,
                            e.measures.mapLeft = 20;
                            break;
                        case 4:
                            e.measures.mapTop = 80,
                            e.measures.mapRight = 15,
                            e.measures.mapBottom = 15,
                            e.measures.mapLeft = 15;
                            break;
                        case 5:
                            e.measures.mapTop = 70,
                            e.measures.mapRight = 5,
                            e.measures.mapBottom = 5,
                            e.measures.mapLeft = 5;
                            break
                        }
                        switch (e.measures.mapWidth = e.bounding.width - e.measures.mapLeft - e.measures.mapRight,
                        e.measures.mapHeight = e.bounding.height - e.measures.mapTop - e.measures.mapBottom,
                        e.measures.navRight = e.measures.mapRight,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.navTop = e.measures.mapTop + e.measures.mapHeight + 12,
                            e.measures.navBottom = 70,
                            e.measures.navHeight = e.bounding.height - e.measures.navTop - e.measures.navBottom;
                            break;
                        case 1:
                            e.measures.navTop = e.measures.mapTop + e.measures.mapHeight + 12,
                            e.measures.navBottom = 40,
                            e.measures.navHeight = e.bounding.height - e.measures.navTop - e.measures.navBottom;
                            break;
                        case 2:
                            e.measures.navTop = e.measures.mapTop + e.measures.mapHeight + 12,
                            e.measures.navBottom = 30,
                            e.measures.navHeight = e.bounding.height - e.measures.navTop - e.measures.navBottom;
                            break;
                        case 3:
                            e.measures.navBottom = 15,
                            e.measures.navHeight = 50,
                            e.measures.navTop = e.bounding.height - e.measures.navHeight - e.measures.navBottom;
                            break;
                        case 4:
                            e.measures.navBottom = 10,
                            e.measures.navHeight = 50,
                            e.measures.navTop = e.bounding.height - e.measures.navHeight - e.measures.navBottom;
                            break;
                        case 5:
                            e.measures.navBottom = 5,
                            e.measures.navHeight = 50,
                            e.measures.navTop = e.bounding.height - e.measures.navHeight - e.measures.navBottom;
                            break
                        }
                        switch (e.measures.navLeft = e.measures.mapLeft,
                        e.measures.navWidth = e.bounding.width - e.measures.navLeft - e.measures.navRight,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.gridTop = e.measures.mapTop - 40,
                            e.measures.gridRight = e.measures.mapRight - 40,
                            e.measures.gridBottom = e.measures.navBottom - 40,
                            e.measures.gridLeft = e.measures.mapLeft - 40;
                            break;
                        case 1:
                            e.measures.gridTop = e.measures.mapTop - 20,
                            e.measures.gridRight = e.measures.mapRight - 20,
                            e.measures.gridBottom = e.measures.navBottom - 20,
                            e.measures.gridLeft = e.measures.mapLeft - 20;
                            break;
                        case 2:
                            e.measures.gridTop = e.measures.mapTop - 15,
                            e.measures.gridRight = e.measures.mapRight - 15,
                            e.measures.gridBottom = e.measures.navBottom - 15,
                            e.measures.gridLeft = e.measures.mapLeft - 15;
                            break;
                        case 3:
                            e.measures.gridTop = e.measures.mapTop - 10,
                            e.measures.gridRight = e.measures.mapRight - 10,
                            e.measures.gridBottom = e.measures.navBottom - 10,
                            e.measures.gridLeft = e.measures.mapLeft - 10;
                            break;
                        case 4:
                            e.measures.gridTop = e.measures.mapTop - 10,
                            e.measures.gridRight = e.measures.mapRight - 10,
                            e.measures.gridBottom = e.measures.navBottom - 10,
                            e.measures.gridLeft = e.measures.mapLeft - 10;
                            break;
                        case 5:
                            e.measures.gridTop = e.measures.mapTop - 10,
                            e.measures.gridRight = e.measures.mapRight - 10,
                            e.measures.gridBottom = e.measures.navBottom - 10,
                            e.measures.gridLeft = e.measures.mapLeft - 10;
                            break
                        }
                        switch (e.measures.gridWidth = e.bounding.width - e.measures.gridLeft - e.measures.gridRight,
                        e.measures.gridHeight = e.bounding.height - e.measures.gridTop - e.measures.gridBottom,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.previewWidth = Math.min(465, e.measures.mapHeight - 32 - 36) + 24,
                            e.measures.previewHeight = Math.min(465, e.measures.mapHeight - 32 - 36) + 32 + 12,
                            e.measures.previewBottom = e.measures.mapBottom + 12,
                            e.measures.previewRight = e.measures.mapRight + 12;
                            break;
                        case 1:
                            e.measures.previewWidth = Math.min(365, e.measures.mapHeight - 28 - 30) + 20,
                            e.measures.previewHeight = Math.min(365, e.measures.mapHeight - 28 - 30) + 28 + 10,
                            e.measures.previewBottom = e.measures.mapBottom + 10,
                            e.measures.previewRight = e.measures.mapRight + 10;
                            break;
                        case 2:
                            e.measures.previewWidth = Math.min(300, e.measures.mapHeight - 26 - 24) + 16,
                            e.measures.previewHeight = Math.min(300, e.measures.mapHeight - 26 - 24) + 26 + 8,
                            e.measures.previewBottom = e.measures.mapBottom + 8,
                            e.measures.previewRight = e.measures.mapRight + 8;
                            break;
                        case 3:
                            e.measures.previewWidth = Math.min(240, e.measures.mapHeight - 24 - 18) + 12,
                            e.measures.previewHeight = Math.min(240, e.measures.mapHeight - 24 - 18) + 24 + 6,
                            e.measures.previewBottom = e.measures.mapBottom + 6,
                            e.measures.previewRight = e.measures.mapRight + 6;
                            break;
                        case 4:
                            e.measures.previewWidth = Math.min(200, e.measures.mapHeight - 22 - 12) + 8,
                            e.measures.previewHeight = Math.min(200, e.measures.mapHeight - 22 - 12) + 22 + 4,
                            e.measures.previewBottom = e.measures.mapBottom + 4,
                            e.measures.previewRight = e.measures.mapRight + 4;
                            break;
                        case 5:
                            e.measures.previewWidth = Math.min(160, e.measures.mapHeight - 20 - 12) + 8,
                            e.measures.previewHeight = Math.min(160, e.measures.mapHeight - 20 - 12) + 20 + 4,
                            e.measures.previewBottom = e.measures.mapBottom + 4,
                            e.measures.previewRight = e.measures.mapRight + 4;
                            break
                        }
                        e.measures.previewTop = e.bounding.height - e.measures.previewBottom - e.measures.previewHeight,
                        e.measures.previewLeft = e.bounding.width - e.measures.previewRight - e.measures.previewWidth
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = .75,
                    this.context.fillStyle = this.colors.paper.string,
                    this.context.fillRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = 1,
                    this.context.globalCompositeOperation = "destination-out",
                    this.context.fillStyle = "#ff0000",
                    this.context.fillRect(this.measures.mapLeft, this.measures.mapTop, this.measures.mapWidth, this.measures.mapHeight),
                    this.context.globalCompositeOperation = "source-over",
                    this.context.strokeStyle = this.colors.pencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(this.measures.mapLeft - .5, this.measures.mapTop - .5, this.measures.mapWidth + 1, this.measures.mapHeight + 1),
                    this.context.stroke(),
                    this.context.globalAlpha = .25,
                    this.context.strokeStyle = this.colors.pencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(this.measures.gridLeft - .5, this.measures.gridTop - .5, this.measures.gridWidth + 1, this.measures.gridHeight + 1),
                    this.context.stroke();
                    for (var e = this.measures.gridWidth / 8, t = 0; t < 8; t++) {
                        var i = Math.floor(this.measures.gridLeft + e * t) - .5;
                        t > 0 && (this.context.globalAlpha = .25,
                        this.context.beginPath(),
                        this.context.moveTo(i, this.measures.gridTop),
                        this.context.lineTo(i, this.measures.gridTop + this.measures.gridHeight),
                        this.context.stroke()),
                        this.context.globalAlpha = .5,
                        this.context.fillStyle = this.colors.pencil.string,
                        this.context.font = "10px ShipleyRegular",
                        this.context.textAlign = "center",
                        this.context.textBaseline = "alphabetic",
                        this.context.fillText(t, i + .5 * e, this.measures.gridTop - 6),
                        this.context.textBaseline = "top",
                        this.context.fillText(t, i + .5 * e, this.measures.gridTop + this.measures.gridHeight + 6)
                    }
                    for (var a = Math.ceil(this.measures.gridHeight / e), s = 0; s < a; s++) {
                        var n = Math.floor(this.measures.gridTop + e * s) - .5;
                        s > 0 && (this.context.globalAlpha = .25,
                        this.context.beginPath(),
                        this.context.moveTo(this.measures.gridLeft, n),
                        this.context.lineTo(this.measures.gridLeft + this.measures.gridWidth, n),
                        this.context.stroke());
                        var r = String.fromCharCode(s + 65);
                        this.context.globalAlpha = .5,
                        this.context.fillStyle = this.colors.pencil.string,
                        this.context.font = "10px ShipleyRegular",
                        this.context.textBaseline = "middle",
                        this.context.textAlign = "right",
                        this.context.fillText(r, this.measures.gridLeft - 6, n + .5 * e),
                        this.context.textAlign = "left",
                        this.context.fillText(r, this.measures.gridLeft + this.measures.gridWidth + 6, n + .5 * e)
                    }
                    this.breakpoints.currentIndex <= 2 && (this.context.globalAlpha = .75,
                    this.context.fillStyle = this.colors.paper.string,
                    this.context.beginPath(),
                    this.context.rect(this.measures.navLeft, this.measures.navTop, this.measures.navWidth, this.measures.navHeight),
                    this.context.fill(),
                    this.context.globalAlpha = 1,
                    this.context.strokeStyle = this.colors.pencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(this.measures.navLeft - .5, this.measures.navTop - .5, this.measures.navWidth + 1, this.measures.navHeight + 1),
                    this.context.stroke())
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: .75,
                        duration: 2
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    0 === e ? this.material.uniforms.uRevealProgress.value = 0 : r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }())
          , ut = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.resources = t.resources,
                this.scene = t.scene,
                this.colors = t.colors,
                this.breakpoints = t.breakpoints,
                this.bounding = t.bounding,
                this.previewImage = t.previewImage,
                this.previewTitle = t.previewTitle,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = !0,
                this.debug && (this.debugFolder = this.debug.addFolder("previewInterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    var e = this;
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1,4),
                        randomFrequency: new q["Qb"](2.8,7)
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.time.on("tick", (function() {
                        e.visible && (e.material.uniforms.uTime.value = 1e-4 * e.time.elapsed)
                    }
                    )),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.measures.update = function() {
                        switch (e.interactives = [{
                            type: "preview",
                            boundingX: e.bounding.left,
                            boundingWidth: e.bounding.width,
                            boundingY: e.bounding.top,
                            boundingHeight: e.bounding.height
                        }],
                        e.measures.titleWidth = e.bounding.width,
                        e.measures.titleTop = 0,
                        e.measures.titleLeft = 0,
                        e.measures.titleRight = 0,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.titleHeight = 32;
                            break;
                        case 1:
                            e.measures.titleHeight = 28;
                            break;
                        case 2:
                            e.measures.titleHeight = 26;
                            break;
                        case 3:
                            e.measures.titleHeight = 24;
                            break;
                        case 4:
                            e.measures.titleHeight = 22;
                            break;
                        case 5:
                            e.measures.titleHeight = 20;
                            break
                        }
                        switch (e.measures.titleBottom = e.bounding.height - e.measures.titleHeight,
                        e.measures.imageTop = e.measures.titleHeight,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.imageLeft = 12,
                            e.measures.imageRight = 12,
                            e.measures.imageBottom = 12;
                            break;
                        case 1:
                            e.measures.imageLeft = 10,
                            e.measures.imageRight = 10,
                            e.measures.imageBottom = 10;
                            break;
                        case 2:
                            e.measures.imageLeft = 8,
                            e.measures.imageRight = 8,
                            e.measures.imageBottom = 8;
                            break;
                        case 3:
                            e.measures.imageLeft = 6,
                            e.measures.imageRight = 6,
                            e.measures.imageBottom = 6;
                            break;
                        case 4:
                            e.measures.imageLeft = 4,
                            e.measures.imageRight = 4,
                            e.measures.imageBottom = 4;
                            break;
                        case 5:
                            e.measures.imageLeft = 4,
                            e.measures.imageRight = 4,
                            e.measures.imageBottom = 4;
                            break
                        }
                        e.measures.imageWidth = e.bounding.width - e.measures.imageLeft - e.measures.imageRight,
                        e.measures.imageHeight = e.bounding.height - e.measures.imageTop - e.measures.imageBottom
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = .75,
                    this.context.fillStyle = this.colors.paper.string,
                    this.context.fillRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = 1,
                    this.context.strokeStyle = this.colors.pencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(.5, .5, this.bounding.width - 1, this.bounding.height - 1),
                    this.context.stroke(),
                    this.context.globalAlpha = 1,
                    this.context.strokeStyle = this.colors.pencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(this.measures.imageLeft + .5, this.measures.imageTop + .5, this.measures.imageWidth - 1, this.measures.imageHeight - 1),
                    this.context.stroke(),
                    this.context.drawImage(this.previewImage, this.measures.imageLeft + 1, this.measures.imageTop + 1, this.measures.imageWidth - 2, this.measures.imageHeight - 2),
                    this.context.globalAlpha = .7,
                    this.context.fillStyle = this.colors.darkerPencil.string,
                    this.context.font = "".concat(.5 * this.measures.titleHeight, "px ShipleyRegular"),
                    this.context.textBaseline = "middle",
                    this.context.textAlign = "center",
                    this.context.fillText(this.previewTitle.toUpperCase().split("").join(String.fromCharCode(8202)), .5 * this.measures.titleWidth, .5 * this.measures.titleHeight + 2)
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: .75,
                        duration: 2
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    0 === e ? this.material.uniforms.uRevealProgress.value = 0 : r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }()
          , ht = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.resources = t.resources,
                this.scene = t.scene,
                this.colors = t.colors,
                this.breakpoints = t.breakpoints,
                this.bounding = t.bounding,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = !0,
                this.text = [],
                this.debug && (this.debugFolder = this.debug.addFolder("anecdotenterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    var e = this;
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](0,0,1,1),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1,4),
                        randomFrequency: new q["Qb"](2.8,7)
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.time.on("tick", (function() {
                        e.visible && (e.material.uniforms.uTime.value = 1e-4 * e.time.elapsed)
                    }
                    )),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.measures.update = function() {
                        switch (e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.textFontSize = 12,
                            e.measures.textLineHeight = 20,
                            e.measures.textPaddingVertical = 30,
                            e.measures.textPaddingHorizontal = 30;
                            break;
                        case 1:
                            e.measures.textFontSize = 12,
                            e.measures.textLineHeight = 18,
                            e.measures.textPaddingVertical = 26,
                            e.measures.textPaddingHorizontal = 26;
                            break;
                        case 2:
                            e.measures.textFontSize = 12,
                            e.measures.textLineHeight = 16,
                            e.measures.textPaddingVertical = 22,
                            e.measures.textPaddingHorizontal = 22;
                            break;
                        case 3:
                            e.measures.textFontSize = 12,
                            e.measures.textLineHeight = 14,
                            e.measures.textPaddingVertical = 18,
                            e.measures.textPaddingHorizontal = 18;
                            break;
                        case 4:
                            e.measures.textFontSize = 11,
                            e.measures.textLineHeight = 14,
                            e.measures.textPaddingVertical = 16,
                            e.measures.textPaddingHorizontal = 16;
                            break;
                        case 5:
                            e.measures.textFontSize = 10,
                            e.measures.textLineHeight = 13,
                            e.measures.textPaddingVertical = 14,
                            e.measures.textPaddingHorizontal = 14;
                            break
                        }
                        e.measures.textWidth = 0,
                        e.measures.textHeight = e.measures.textLineHeight * e.text.length,
                        e.context.font = "".concat(e.measures.textFontSize, "px ShipleyRegular"),
                        e.context.textBaseline = "middle",
                        e.context.textAlign = "center",
                        e.context.fillStyle = e.colors.darkPencil.string,
                        e.context.globalAlpha = 1;
                        var t, i = Object(L["a"])(e.text);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a = t.value
                                  , s = e.context.measureText(a);
                                s.width > e.measures.textWidth && (e.measures.textWidth = Math.round(s.width))
                            }
                        } catch (n) {
                            i.e(n)
                        } finally {
                            i.f()
                        }
                        switch (e.bounding.width = e.measures.textWidth + 2 * e.measures.textPaddingHorizontal,
                        e.bounding.height = e.measures.textHeight + 2 * e.measures.textPaddingVertical,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.bounding.left = e.sizes.viewport.width - 150 - e.bounding.width + 1,
                            e.bounding.top = e.sizes.viewport.height - 150 - 40 - e.bounding.height;
                            break;
                        case 1:
                            e.bounding.left = e.sizes.viewport.width - 60 - e.bounding.width + 1,
                            e.bounding.top = e.sizes.viewport.height - 115 - 40 - e.bounding.height;
                            break;
                        case 2:
                            e.bounding.left = e.sizes.viewport.width - 50 - e.bounding.width + 1,
                            e.bounding.top = e.sizes.viewport.height - 105 - 40 - e.bounding.height;
                            break;
                        case 3:
                            e.bounding.left = e.sizes.viewport.width - 40 - e.bounding.width + 1,
                            e.bounding.top = e.sizes.viewport.height - 35 - 5 - 35 - e.bounding.height;
                            break;
                        case 4:
                            e.bounding.left = e.sizes.viewport.width - 35 - e.bounding.width + 1,
                            e.bounding.top = e.sizes.viewport.height - 30 - 5 - 30 - e.bounding.height;
                            break;
                        case 5:
                            e.bounding.left = Math.round(.5 * e.sizes.viewport.width - .5 * e.bounding.width),
                            e.bounding.top = e.sizes.viewport.height - 25 - 5 - 25 - 55 - e.bounding.height;
                            break
                        }
                        e.measures.innerBorderPadding = 4,
                        e.measures.innerBorderLeft = e.measures.innerBorderPadding + .5,
                        e.measures.innerBorderTop = e.measures.innerBorderPadding + .5,
                        e.measures.innerBorderWidth = e.bounding.width - 2 * e.measures.innerBorderPadding - 1,
                        e.measures.innerBorderHeight = e.bounding.height - 2 * e.measures.innerBorderPadding - 1
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = .5,
                    this.context.fillStyle = this.colors.paper.string,
                    this.context.fillRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = .35,
                    this.context.strokeStyle = this.colors.darkerPencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(.5, .5, this.bounding.width - 1, this.bounding.height - 1),
                    this.context.stroke(),
                    this.context.globalAlpha = .35,
                    this.context.strokeStyle = this.colors.darkerPencil.string,
                    this.context.lineWidth = 1,
                    this.context.beginPath(),
                    this.context.rect(this.measures.innerBorderLeft, this.measures.innerBorderTop, this.measures.innerBorderWidth, this.measures.innerBorderHeight),
                    this.context.stroke(),
                    this.context.font = "".concat(this.measures.textFontSize, "px ShipleyRegular"),
                    this.context.textBaseline = "middle",
                    this.context.textAlign = "center",
                    this.context.fillStyle = this.colors.darkPencil.string,
                    this.context.globalAlpha = 1;
                    var e, t = 0, i = Object(L["a"])(this.text);
                    try {
                        for (i.s(); !(e = i.n()).done; ) {
                            var a = e.value
                              , s = this.bounding.width / 2
                              , n = this.measures.textPaddingVertical + t * this.measures.textLineHeight + .5 * this.measures.textLineHeight;
                            "-" === a ? (this.context.fillStyle = this.colors.darkPencil.string,
                            this.context.fillRect(s - 40, n - .1 * this.measures.textLineHeight, 80, 1)) : this.context.fillText(a, s, n),
                            t++
                        }
                    } catch (r) {
                        i.e(r)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "show",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    if (!this.visible && "undefined" !== typeof e && null !== e && 0 !== e.length) {
                        this.visible = !0,
                        this.text = [];
                        var t, i = Object(L["a"])(e);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a = t.value;
                                this.text.push(a.toUpperCase().split("").join(String.fromCharCode(8202)))
                            }
                        } catch (s) {
                            i.e(s)
                        } finally {
                            i.f()
                        }
                        this.update(),
                        r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                        r["a"].to(this.material.uniforms.uRevealProgress, {
                            value: .85,
                            duration: 2
                        })
                    }
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    0 === e ? this.material.uniforms.uRevealProgress.value = 0 : r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.visible && (this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }()
          , ct = (i("5319"),
        "precision highp float;\n#define GLSLIFY 1\n\nuniform vec3 uColor;\nuniform float uAlpha;\n\nvoid main()\n{\n    gl_FragColor = vec4(uColor, uAlpha);\n}\n")
          , dt = "#define GLSLIFY 1\nuniform vec2 uResolution;\nuniform vec4 uBounding;\n\nattribute vec3 position;\n\nvoid main()\n{\n    vec2 newPosition = position.xy;\n\n    // Resize\n    newPosition += vec2(1.0, - 1.0);\n    newPosition *= vec2(uBounding.zw) / uResolution;\n    newPosition += vec2(- 1.0, 1.0);\n\n    // Offset\n    newPosition.x += uBounding.x * 2.0 / uResolution.x;\n    newPosition.y -= uBounding.y * 2.0 / uResolution.y;\n\n    gl_Position = vec4(newPosition, 0.0, 1.0);\n}\n"
          , mt = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = {
                uResolution: {
                    value: null
                },
                uBounding: {
                    value: null
                },
                uColor: {
                    value: null
                },
                uAlpha: {
                    value: null
                }
            };
            return t.uResolution.value = e.resolution,
            t.uBounding.value = e.bounding,
            t.uColor.value = e.color,
            t.uAlpha.value = e.alpha,
            new q["ub"]({
                transparent: !0,
                uniforms: t,
                depthTest: !1,
                depthWrite: !1,
                vertexShader: dt,
                fragmentShader: ct
            })
        }
          , pt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.fieldOptions = t.fieldOptions,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.breakpoints = t.breakpoints,
                this.bounding = t.bounding,
                this.nextTitle = t.nextTitle,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = !0,
                this.debug && (this.debugFolder = this.debug.addFolder("navInterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMeasures(),
                this.setBar(),
                this.setMesh(),
                this.setHighlight()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !0,
                        highlightBounding: new q["Sb"](300,106,200,100),
                        highlightColor: this.colors.highlight.three,
                        highlightPixelRatio: this.renderer.instance.getPixelRatio()
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.measures.fields = [];
                    var t, i = 0, a = Object(L["a"])(this.fieldOptions);
                    try {
                        for (a.s(); !(t = a.n()).done; ) {
                            var s = t.value
                              , n = {};
                            n.data = s,
                            n.originalText = s.navName,
                            n.index = i,
                            n.label = i + 1,
                            n.type = "field",
                            this.measures.fields.push(n),
                            this.interactives.push(n),
                            i++
                        }
                    } catch (o) {
                        a.e(o)
                    } finally {
                        a.f()
                    }
                    var r = {
                        data: {}
                    };
                    r.originalText = "".concat(this.nextTitle, " →"),
                    r.index = i,
                    r.label = "",
                    r.type = "navNextVillage",
                    this.measures.fields.push(r),
                    this.interactives.push(r),
                    this.measures.update = function() {
                        switch (e.breakpoints.currentIndex) {
                        case 0:
                        case 1:
                            e.measures.barTop = Math.floor(.333 * e.bounding.height);
                            break;
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            e.measures.barTop = Math.floor(.5 * e.bounding.height) - 2;
                            break
                        }
                        switch (e.measures.barHeight = 4,
                        e.measures.barBottom = e.measures.barTop + e.measures.barHeight,
                        e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.barLeft = 50,
                            e.measures.barRight = 50;
                            break;
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            e.measures.barLeft = 20,
                            e.measures.barRight = 20;
                            break
                        }
                        e.measures.barWidth = e.bounding.width - e.measures.barLeft - e.measures.barRight,
                        e.context.font = "13px ShipleyRegular";
                        var t, i = 0, a = Object(L["a"])(e.measures.fields);
                        try {
                            for (a.s(); !(t = a.n()).done; ) {
                                var s = t.value;
                                switch (e.breakpoints.currentIndex) {
                                case 0:
                                case 1:
                                    s.text = s.originalText;
                                    break;
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    s.text = s.originalText.replace("\n", " ");
                                    break
                                }
                                s.lines = s.text.split("\n");
                                var n, r = 0, l = Object(L["a"])(s.lines);
                                try {
                                    for (l.s(); !(n = l.n()).done; ) {
                                        var u = n.value
                                          , h = e.context.measureText(u);
                                        h.width > r && (r = h.width)
                                    }
                                } catch (o) {
                                    l.e(o)
                                } finally {
                                    l.f()
                                }
                                s.width = r,
                                s.height = 13 * s.lines.length,
                                i += s.width
                            }
                        } catch (o) {
                            a.e(o)
                        } finally {
                            a.f()
                        }
                        switch (e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.fieldHorizontalPadding = 20,
                            e.measures.textBaseline = "hanging";
                            break;
                        case 1:
                            e.measures.fieldHorizontalPadding = 10,
                            e.measures.textBaseline = "hanging";
                            break;
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            e.measures.fieldHorizontalPadding = 10,
                            e.measures.textBaseline = "middle";
                            break
                        }
                        e.measures.spaceBetween = (e.measures.barWidth - i - 2 * e.measures.fieldHorizontalPadding) / (e.measures.fields.length - 1);
                        var c, d = e.measures.barLeft + e.measures.fieldHorizontalPadding, m = 0, p = Object(L["a"])(e.measures.fields);
                        try {
                            for (p.s(); !(c = p.n()).done; ) {
                                var g = c.value;
                                switch (g.pair = m % 2,
                                g.labelX = d,
                                g.text = e.sizes.viewport.width < 1800 ? g.text : g.text.split("").join(String.fromCharCode(8202)),
                                g.textX = d,
                                e.breakpoints.currentIndex) {
                                case 0:
                                case 1:
                                    g.labelY = .666 * e.measures.barTop - 6,
                                    g.textY = e.measures.barTop + e.measures.barHeight + .333 * (e.bounding.height - e.measures.barTop - e.measures.barHeight),
                                    g.boundingX = e.bounding.left + d - .5 * e.measures.spaceBetween,
                                    g.boundingWidth = g.width + e.measures.spaceBetween,
                                    g.boundingY = e.bounding.top + e.measures.barTop + e.measures.barHeight,
                                    g.boundingHeight = e.bounding.top + e.bounding.height - g.boundingY;
                                    break;
                                case 2:
                                    g.pair ? (g.labelY = -100,
                                    g.textY = e.measures.barTop + e.measures.barHeight + .5 * e.measures.barTop) : (g.labelY = -100,
                                    g.textY = .5 * e.measures.barTop),
                                    g.boundingX = e.bounding.left + d - 10,
                                    g.boundingWidth = g.width + 20,
                                    g.pair ? (g.boundingY = e.bounding.top + e.measures.barTop + e.measures.barHeight,
                                    g.boundingHeight = e.bounding.top + e.bounding.height - g.boundingY) : (g.boundingY = e.bounding.top,
                                    g.boundingHeight = e.measures.barTop - 1);
                                    break;
                                case 3:
                                case 4:
                                case 5:
                                    g.labelY = 0,
                                    g.textY = 0,
                                    g.boundingX = e.bounding.left + e.measures.barLeft + e.measures.barWidth / e.measures.fields.length * m,
                                    g.boundingWidth = e.measures.barWidth / e.measures.fields.length,
                                    g.boundingY = 0,
                                    g.boundingHeight = 0,
                                    g.separatorX = e.measures.barLeft + e.measures.barWidth / e.measures.fields.length * m;
                                    break
                                }
                                d += g.width + e.measures.spaceBetween,
                                m++
                            }
                        } catch (o) {
                            p.e(o)
                        } finally {
                            p.f()
                        }
                    }
                }
            }, {
                key: "getFieldByIndex",
                value: function(e) {
                    return this.measures.fields[e]
                }
            }, {
                key: "setBar",
                value: function() {
                    var e = this;
                    this.bar = {},
                    this.bar.currentField = null,
                    this.bar.hidden = !0,
                    this.bar.progress = 0,
                    this.bar.geometry = new q["jb"](2,2),
                    this.bar.geometry.deleteAttribute("normal"),
                    this.bar.geometry.deleteAttribute("uv"),
                    this.bar.material = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](0,this.bounding.top + this.measures.barTop,0,4),
                        color: new q["j"]("#c23c2a"),
                        alpha: 0
                    }),
                    this.bar.mesh = new q["T"](this.bar.geometry,this.bar.material),
                    this.bar.mesh.frustumCulled = !1,
                    this.bar.mesh.renderOrder = 999,
                    this.bar.mesh.visible = !1,
                    this.bar.matrixAutoUpdate = !1,
                    this.scene.add(this.bar.mesh),
                    this.meshes.push(this.bar.mesh),
                    this.bar.goField = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                          , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                          , a = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                          , s = e.measures.fields[t];
                        if (e.bar.material.uniforms.uColor.value = e.colors.highlight.three,
                        e.bar.currentField !== s || a) {
                            var n = Math.max(s.boundingX, e.measures.barLeft + e.bounding.left)
                              , o = Math.min(s.boundingWidth, e.measures.barWidth + e.measures.barLeft + e.bounding.left - n)
                              , l = function() {
                                if (i) {
                                    var a = t + 1;
                                    a >= e.measures.fields.length && (a = 0);
                                    var s = e.measures.fields[a]
                                      , o = Math.min(s.boundingX + s.boundingWidth - n, e.measures.barWidth + e.measures.barLeft + e.bounding.left - n);
                                    r["a"].to(e.bar.material.uniforms.uBounding.value, {
                                        z: o,
                                        duration: 7,
                                        ease: "power1.out"
                                    })
                                }
                            };
                            e.bar.hidden ? (r["a"].killTweensOf(e.bar.material.uniforms.uBounding.value),
                            r["a"].fromTo(e.bar.material.uniforms.uBounding.value, {
                                x: s.boundingX + .5 * s.boundingWidth,
                                z: 0
                            }, {
                                x: n,
                                z: o,
                                duration: 1,
                                ease: "power4.out",
                                onComplete: l
                            })) : (r["a"].killTweensOf(e.bar.material.uniforms.uBounding.value),
                            r["a"].to(e.bar.material.uniforms.uBounding.value, {
                                x: n,
                                z: o,
                                duration: 1,
                                ease: "power4.out",
                                onComplete: l
                            })),
                            e.bar.hidden = !1,
                            e.bar.currentField = s
                        }
                    }
                    ,
                    this.bar.leaveField = function() {
                        if (e.bar.currentField) {
                            var t = e.bar.currentField.boundingX + .5 * e.bar.currentField.boundingWidth
                              , i = 0;
                            r["a"].killTweensOf(e.bar.material.uniforms.uBounding.value),
                            r["a"].to(e.bar.material.uniforms.uBounding.value, {
                                x: t,
                                z: i,
                                duration: 1,
                                ease: "power4.out",
                                onComplete: function() {
                                    e.bar.hidden = !0
                                }
                            }),
                            e.bar.currentField = null
                        }
                    }
                    ,
                    this.bar.setProgress = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                        r["a"].killTweensOf(e.bar),
                        r["a"].to(e.bar, {
                            progress: t,
                            duration: .25,
                            ease: "power4.inOut",
                            onUpdate: function() {
                                var t = e.measures.barLeft + e.bounding.left
                                  , i = e.measures.barWidth * e.bar.progress;
                                e.bar.material.uniforms.uBounding.value.x = t,
                                e.bar.material.uniforms.uBounding.value.z = i
                            }
                        }),
                        e.bar.material.uniforms.uColor.value = e.colors.darkPencil.three,
                        e.bar.hidden = !1
                    }
                    ,
                    this.bar.leaveProgress = function() {
                        var t = e.bounding.left + .5 * e.bounding.width
                          , i = 0;
                        r["a"].killTweensOf(e.bar.material.uniforms.uBounding.value),
                        r["a"].fromTo(e.bar.material.uniforms.uBounding.value, {
                            x: e.measures.barLeft + e.bounding.left,
                            z: e.measures.barWidth
                        }, {
                            x: t,
                            z: i,
                            duration: 3,
                            ease: "power4.inOut",
                            onComplete: function() {
                                e.bar.hidden = !0,
                                e.bar.material.uniforms.uColor.value = e.colors.highlight.three
                            }
                        })
                    }
                    ,
                    this.bar.fakeProgress = function() {
                        r["a"].killTweensOf(e.bar),
                        r["a"].fromTo(e.bar, {
                            progress: 0
                        }, {
                            progress: 1,
                            duration: 3.5,
                            onUpdate: function() {
                                var t = e.measures.barLeft + e.bounding.left
                                  , i = e.measures.barWidth * e.bar.progress;
                                e.bar.material.uniforms.uBounding.value.x = t,
                                e.bar.material.uniforms.uBounding.value.z = i
                            }
                        }),
                        e.bar.material.uniforms.uColor.value = e.colors.darkPencil.three
                    }
                }
            }, {
                key: "setHighlight",
                value: function() {
                    var e = this;
                    this.highlight = {},
                    this.highlight.currentField = null,
                    this.highlight.hidden = !0,
                    this.highlight.y = this.sizes.viewport.height - (this.bounding.top + this.bounding.height) + 1,
                    this.highlight.height = this.bounding.height - this.measures.barBottom - 2,
                    this.material.uniforms.uHighlightBounding.value.y = this.highlight.y,
                    this.material.uniforms.uHighlightBounding.value.w = this.highlight.height,
                    this.highlight.goIndex = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        if ("undefined" !== typeof t) {
                            var i = e.measures.fields[t];
                            e.highlight.currentField !== i && (e.highlight.hidden ? (e.material.uniforms.uHighlightBounding.value.x = i.boundingX,
                            e.material.uniforms.uHighlightBounding.value.y = i.boundingY,
                            e.material.uniforms.uHighlightBounding.value.z = i.boundingWidth,
                            e.material.uniforms.uHighlightBounding.value.w = i.boundingHeight,
                            r["a"].killTweensOf(e.material.uniforms.uHighlightAlpha),
                            r["a"].to(e.material.uniforms.uHighlightAlpha, {
                                value: 1,
                                duration: .2
                            })) : (r["a"].killTweensOf(e.material.uniforms.uHighlightAlpha),
                            r["a"].to(e.material.uniforms.uHighlightAlpha, {
                                value: 0,
                                duration: .05,
                                onComplete: function() {
                                    e.highlight.currentField === i && (e.material.uniforms.uHighlightBounding.value.x = i.boundingX,
                                    e.material.uniforms.uHighlightBounding.value.y = i.boundingY,
                                    e.material.uniforms.uHighlightBounding.value.z = i.boundingWidth,
                                    e.material.uniforms.uHighlightBounding.value.w = i.boundingHeight,
                                    r["a"].to(e.material.uniforms.uHighlightAlpha, {
                                        value: 1,
                                        duration: .15
                                    }))
                                }
                            })),
                            e.highlight.hidden = !1,
                            e.highlight.currentField = i)
                        }
                    }
                    ,
                    this.highlight.leave = function() {
                        e.highlight.currentField && (r["a"].killTweensOf(e.material.uniforms.uHighlightAlpha),
                        r["a"].to(e.material.uniforms.uHighlightAlpha, {
                            value: 0,
                            duration: .15,
                            onComplete: function() {
                                e.highlight.hidden = !0
                            }
                        }),
                        e.highlight.currentField = null)
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    if (this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.lineWidth = 1,
                    this.context.strokeStyle = this.colors.darkerPencil.string,
                    this.context.globalAlpha = .35,
                    this.context.beginPath(),
                    this.context.rect(this.measures.barLeft - .5, this.measures.barTop - .5, this.measures.barWidth + 1, this.measures.barHeight + 1),
                    this.context.stroke(),
                    this.breakpoints.currentIndex <= 2) {
                        this.context.textAlign = "left",
                        this.context.textBaseline = this.measures.textBaseline;
                        var e, t = Object(L["a"])(this.measures.fields);
                        try {
                            for (t.s(); !(e = t.n()).done; ) {
                                var i = e.value;
                                "field" === i.type && (this.context.font = "10px ShipleyRegular",
                                this.context.fillStyle = this.colors.darkPencil.string,
                                this.context.globalAlpha = .45,
                                this.context.fillText(i.label, i.labelX, i.labelY)),
                                this.context.font = "14px ShipleyRegular",
                                this.context.fillStyle = "field" === i.type ? this.colors.darkPencil.string : this.colors.darkerPencil.string,
                                this.context.globalAlpha = "field" === i.type ? .8 : 1;
                                var a, s = i.text.split("\n"), n = 0, r = Object(L["a"])(s);
                                try {
                                    for (r.s(); !(a = r.n()).done; ) {
                                        var o = a.value;
                                        this.context.fillText(o, i.textX, i.textY + 14 * n),
                                        n++
                                    }
                                } catch (c) {
                                    r.e(c)
                                } finally {
                                    r.f()
                                }
                            }
                        } catch (c) {
                            t.e(c)
                        } finally {
                            t.f()
                        }
                    } else {
                        this.context.strokeStyle = this.colors.darkerPencil.string,
                        this.context.globalAlpha = .35;
                        var l, u = Object(L["a"])(this.measures.fields);
                        try {
                            for (u.s(); !(l = u.n()).done; ) {
                                var h = l.value;
                                h.index > 0 && (this.context.beginPath(),
                                this.context.moveTo(Math.floor(h.separatorX) + .5, this.measures.barTop),
                                this.context.lineTo(Math.floor(h.separatorX) + .5, this.measures.barTop + this.measures.barHeight),
                                this.context.stroke())
                            }
                        } catch (c) {
                            u.e(c)
                        } finally {
                            u.f()
                        }
                    }
                }
            }, {
                key: "show",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: e
                    }),
                    r["a"].killTweensOf(this.bar.material.uniforms.uAlpha),
                    r["a"].to(this.bar.material.uniforms.uAlpha, {
                        value: 1,
                        duration: .5 * e,
                        delay: .5 * e
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].killTweensOf(this.bar.material.uniforms.uAlpha),
                    0 === e ? (this.material.uniforms.uRevealProgress.value = 0,
                    this.bar.material.uniforms.uAlpha.value = 0) : (r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    r["a"].to(this.bar.material.uniforms.uAlpha, {
                        value: 0,
                        duration: .5 * e
                    })),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    if (this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.highlight.y = this.sizes.viewport.height - (this.bounding.top + this.bounding.height) + 1,
                    this.highlight.height = this.bounding.height - this.measures.barBottom - 2,
                    this.material.uniforms.uHighlightPixelRatio.value = this.renderer.instance.getPixelRatio(),
                    this.material.uniforms.uHighlightBounding.value.y = this.highlight.y,
                    this.material.uniforms.uHighlightBounding.value.w = this.highlight.height,
                    this.highlight.currentField) {
                        var e = Math.max(this.highlight.currentField.boundingX, this.measures.barLeft + this.bounding.left)
                          , t = Math.min(this.highlight.currentField.boundingWidth, this.measures.barWidth + this.measures.barLeft + this.bounding.left - e);
                        this.material.uniforms.uHighlightBounding.value.x = e,
                        this.material.uniforms.uHighlightBounding.value.z = t
                    }
                    if (this.bar.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bar.material.uniforms.uBounding.value.y = this.bounding.top + this.measures.barTop,
                    this.bar.currentField) {
                        var i = Math.max(this.bar.currentField.boundingX, this.measures.barLeft + this.bounding.left)
                          , a = Math.min(this.bar.currentField.boundingWidth, this.measures.barWidth + this.measures.barLeft + this.bounding.left - i);
                        this.bar.material.uniforms.uBounding.value.x = i,
                        this.bar.material.uniforms.uBounding.value.z = a
                    }
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose(),
                    this.bar.geometry.dispose(),
                    this.bar.material.dispose()
                }
            }]),
            e
        }()
          , gt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.bounding = t.bounding,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = [],
                this.debug && (this.debugFolder = this.debug.addFolder("mapButtonInterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !1
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.interactive = {},
                    this.interactives.push(this.interactive),
                    this.measures.update = function() {
                        e.interactive.boundingX = e.bounding.left,
                        e.interactive.boundingY = e.bounding.top,
                        e.interactive.boundingWidth = e.bounding.width,
                        e.interactive.boundingHeight = e.bounding.height,
                        e.interactive.type = "mapButton"
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = 1,
                    this.context.fillStyle = this.colors.darkerPencil.string,
                    this.context.font = "14px ShipleyRegular",
                    this.context.textAlign = "center",
                    this.context.textBaseline = "middle",
                    this.context.fillText(this.config.texts.map.toUpperCase().split("").join(" "), Math.round(.5 * this.bounding.width), Math.round(.25 * this.bounding.height));
                    var e = .5 * this.resources.items.mapButton.width
                      , t = .5 * this.resources.items.mapButton.height;
                    this.context.drawImage(this.resources.items.mapButton, Math.round(.5 * (this.bounding.width - e)) + 2, Math.round(.6 * this.bounding.height - .5 * t), e, t)
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: 2
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    0 === e ? this.material.uniforms.uRevealProgress.value = 0 : r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }()
          , vt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.breakpoints = t.breakpoints,
                this.bounding = t.bounding,
                this.title = t.title,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = [],
                this.debug && (this.debugFolder = this.debug.addFolder("mapTitleInterface")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !1
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.interactive = {},
                    this.measures.update = function() {
                        switch (e.breakpoints.currentIndex) {
                        case 0:
                            e.measures.fontSize = 40;
                            break;
                        case 1:
                            e.measures.fontSize = 35;
                            break;
                        case 2:
                            e.measures.fontSize = 30;
                            break;
                        case 3:
                            e.measures.fontSize = 25;
                            break;
                        case 4:
                            e.measures.fontSize = 20;
                            break;
                        case 5:
                            e.measures.fontSize = 16;
                            break
                        }
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = 1,
                    this.context.fillStyle = this.colors.darkerPencil.string,
                    this.context.font = "".concat(this.measures.fontSize, "px ShipleyRegular"),
                    this.context.textBaseline = "middle",
                    this.context.textAlign = "center",
                    this.context.fillText(this.title.toUpperCase().split("").join(String.fromCharCode(8202)), .5 * this.bounding.width, .5 * this.bounding.height)
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: 2
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    0 === e ? this.material.uniforms.uRevealProgress.value = 0 : r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }()
          , ft = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.bounding = t.bounding,
                this.breakpoints = t.breakpoints,
                this.side = t.side,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = [],
                this.debug && (this.debugFolder = this.debug.addFolder("arrowButtonInterface".concat(this.side))),
                this.setCanvas(),
                this.setTexture(),
                this.setMeshes(),
                this.setMeasures()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMeshes",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !1
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.interactive = {},
                    this.interactives.push(this.interactive),
                    this.measures.update = function() {
                        switch (e.breakpoints.currentIndex) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            e.bounding.left = "left" === e.side ? 40 : e.sizes.viewport.width - 40 - 37,
                            e.bounding.top = e.sizes.viewport.height - 111;
                            break;
                        case 4:
                            e.bounding.left = "left" === e.side ? 35 : e.sizes.viewport.width - 35 - 37,
                            e.bounding.top = e.sizes.viewport.height - 101;
                            break;
                        case 5:
                            e.bounding.left = "left" === e.side ? 25 : e.sizes.viewport.width - 25 - 37,
                            e.bounding.top = e.sizes.viewport.height - 91;
                            break
                        }
                        e.interactive.boundingX = e.bounding.left - 10,
                        e.interactive.boundingY = e.bounding.top - 10,
                        e.interactive.boundingWidth = e.bounding.width + 20,
                        e.interactive.boundingHeight = e.bounding.height + 20,
                        e.interactive.type = "left" === e.side ? "previousButton" : "nextButton"
                    }
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height);
                    var e = .5 * this.resources.items.arrowButton.width
                      , t = .5 * this.resources.items.arrowButton.height;
                    this.context.globalAlpha = 1,
                    this.context.save(),
                    "left" === this.side && (this.context.translate(37, 37),
                    this.context.rotate(Math.PI)),
                    this.context.drawImage(this.resources.items.arrowButton, 0, 0, e, t),
                    this.context.restore()
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: 2
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    0 === e ? this.material.uniforms.uRevealProgress.value = 0 : r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose()
                }
            }]),
            e
        }()
          , bt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.bounding = t.bounding,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = [],
                this.debug && (this.debugFolder = this.debug.addFolder("menuButtonInterface"),
                this.debugFolder.open(),
                this.debugFolder.add(this, "enter"),
                this.debugFolder.add(this, "leave")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures(),
                this.setBars()
            }
            return Object(O["a"])(e, [{
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !1
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.interactive = {},
                    this.interactives.push(this.interactive),
                    this.measures.update = function() {
                        var t = e.bounding.left + .5 * e.bounding.width
                          , i = e.bounding.top + .5 * e.bounding.height;
                        e.interactive.boundingX = e.bounding.left,
                        e.interactive.boundingY = e.bounding.top,
                        e.interactive.boundingWidth = e.bounding.width,
                        e.interactive.boundingHeight = e.bounding.height,
                        e.interactive.type = "menuButton",
                        e.measures.barHorizontalWidth = 30,
                        e.measures.barHorizontalTop = i + 28,
                        e.measures.barHorizontalLeft = t - .5 * e.measures.barHorizontalWidth,
                        e.measures.barHorizontalHeight = 1,
                        e.measures.barVerticalHeight = 35,
                        e.measures.barVerticalWidth = 1,
                        e.measures.barVerticalTop = i - .5 * e.measures.barVerticalHeight,
                        e.measures.barVerticalLeft = t - 22
                    }
                }
            }, {
                key: "setBars",
                value: function() {
                    this.bars = {},
                    this.bars.geometry = new q["jb"](2,2),
                    this.bars.geometry.deleteAttribute("normal"),
                    this.bars.geometry.deleteAttribute("uv"),
                    this.bars.materialHorizontal = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barHorizontalLeft,this.measures.barHorizontalTop,0,this.measures.barHorizontalHeight),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.meshHorizontal = new q["T"](this.bars.geometry,this.bars.materialHorizontal),
                    this.bars.meshHorizontal.frustumCulled = !1,
                    this.bars.meshHorizontal.renderOrder = 999,
                    this.bars.meshHorizontal.visible = !1,
                    this.bars.meshHorizontal.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.meshHorizontal),
                    this.meshes.push(this.bars.meshHorizontal),
                    this.bars.materialVertical = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barVerticalLeft,this.measures.barVerticalTop,this.measures.barVerticalWidth,this.measures.barVerticalHeight),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.meshVertical = new q["T"](this.bars.geometry,this.bars.materialVertical),
                    this.bars.meshVertical.frustumCulled = !1,
                    this.bars.meshVertical.renderOrder = 999,
                    this.bars.meshVertical.visible = !1,
                    this.bars.meshVertical.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.meshVertical),
                    this.meshes.push(this.bars.meshVertical)
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height);
                    var e = .5 * this.resources.items.menuButton.width
                      , t = .5 * this.resources.items.menuButton.height;
                    this.context.drawImage(this.resources.items.menuButton, 0, 0, e, t)
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: 2
                    }),
                    r["a"].killTweensOf(this.bars.materialHorizontal.uniforms.uBounding.value),
                    r["a"].fromTo(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        z: 0
                    }, {
                        z: this.measures.barHorizontalWidth,
                        duration: .3,
                        delay: .4
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].killTweensOf(this.bars.materialHorizontal.uniforms.uBounding.value),
                    0 === e ? (this.material.uniforms.uRevealProgress.value = 0,
                    this.bars.materialHorizontal.uniforms.uBounding.value.z = 0) : (r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: e
                    }),
                    r["a"].to(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        z: 0,
                        duration: .5 * e
                    })),
                    this.visible = !1)
                }
            }, {
                key: "enter",
                value: function() {
                    r["a"].killTweensOf(this.bars.materialHorizontal.uniforms.uBounding.value),
                    r["a"].killTweensOf(this.bars.materialVertical.uniforms.uBounding.value),
                    r["a"].killTweensOf(this.material.uniforms.uBounding.value),
                    r["a"].to(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        z: 0,
                        duration: .3
                    }),
                    r["a"].to(this.bars.materialVertical.uniforms.uBounding.value, {
                        y: this.measures.barVerticalTop,
                        w: this.measures.barVerticalHeight,
                        duration: .3,
                        delay: .4
                    }),
                    r["a"].to(this.material.uniforms.uBounding.value, {
                        x: this.bounding.left + 5,
                        duration: .3,
                        delay: .2
                    })
                }
            }, {
                key: "leave",
                value: function() {
                    r["a"].killTweensOf(this.bars.materialHorizontal.uniforms.uBounding.value),
                    r["a"].killTweensOf(this.bars.materialVertical.uniforms.uBounding.value),
                    r["a"].killTweensOf(this.material.uniforms.uBounding.value),
                    r["a"].to(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        z: this.measures.barHorizontalWidth,
                        duration: .3,
                        delay: .4
                    }),
                    r["a"].to(this.bars.materialVertical.uniforms.uBounding.value, {
                        y: this.measures.barVerticalTop + this.measures.barVerticalHeight,
                        w: 0,
                        duration: .3,
                        delay: 0
                    }),
                    r["a"].to(this.material.uniforms.uBounding.value, {
                        x: this.bounding.left,
                        duration: .3,
                        delay: .2
                    })
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.bars.materialHorizontal.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialHorizontal.uniforms.uBounding.value.x = this.measures.barHorizontalLeft,
                    this.bars.materialHorizontal.uniforms.uBounding.value.y = this.measures.barHorizontalTop,
                    this.bars.materialHorizontal.uniforms.uBounding.value.z = this.visible ? this.measures.barHorizontalWidth : 0,
                    this.bars.materialHorizontal.uniforms.uBounding.value.w = this.measures.barHorizontalHeight,
                    this.bars.materialVertical.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialVertical.uniforms.uBounding.value.x = this.measures.barVerticalLeft,
                    this.bars.materialVertical.uniforms.uBounding.value.y = this.measures.barVerticalTop + this.measures.barVerticalHeight,
                    this.bars.materialVertical.uniforms.uBounding.value.z = this.measures.barVerticalWidth,
                    this.bars.materialVertical.uniforms.uBounding.value.w = 0,
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose(),
                    this.bars.geometry.dispose(),
                    this.bars.materialHorizontal.dispose(),
                    this.bars.materialVertical.dispose()
                }
            }]),
            e
        }()
          , xt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.sounds = t.sounds,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.bounding = t.bounding,
                this.muted = this.sounds.muted,
                this.visible = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = [],
                this.debug && (this.debugFolder = this.debug.addFolder("soundButtonInterface")),
                this.setMeasures(),
                this.setBars()
            }
            return Object(O["a"])(e, [{
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.interactive = {},
                    this.interactives.push(this.interactive),
                    this.measures.update = function() {
                        var t = e.bounding.left + .5 * e.bounding.width
                          , i = e.bounding.top + .5 * e.bounding.height;
                        e.interactive.boundingX = e.bounding.left,
                        e.interactive.boundingY = e.bounding.top,
                        e.interactive.boundingWidth = e.bounding.width,
                        e.interactive.boundingHeight = e.bounding.height,
                        e.interactive.type = "soundButton",
                        e.measures.barHorizontalWidth = 11,
                        e.measures.barHorizontalTop = i - 2,
                        e.measures.barHorizontalLeft = Math.floor(t - .5 * e.measures.barHorizontalWidth + 1),
                        e.measures.barHorizontalLeftMax = e.measures.barHorizontalLeft + 13,
                        e.measures.barHorizontalHeight = 1,
                        e.measures.barVerticalHeight = 22,
                        e.measures.barVerticalWidth = 1,
                        e.measures.barVerticalTop = Math.floor(i - .5 * e.measures.barVerticalHeight),
                        e.measures.barVerticalLeft = t,
                        e.measures.barSquareHeight = 6,
                        e.measures.barSquareWidth = 6,
                        e.measures.barSquareTop = i + 8,
                        e.measures.barSquareLeft = t - 6
                    }
                }
            }, {
                key: "setBars",
                value: function() {
                    this.bars = {},
                    this.bars.geometry = new q["jb"](2,2),
                    this.bars.geometry.deleteAttribute("normal"),
                    this.bars.geometry.deleteAttribute("uv"),
                    this.bars.oblicGeometry = new q["jb"](2,2),
                    this.bars.oblicGeometry.rotateZ(.25 * Math.PI),
                    this.bars.oblicGeometry.deleteAttribute("normal"),
                    this.bars.oblicGeometry.deleteAttribute("uv"),
                    this.bars.materialHorizontal = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barHorizontalLeft,this.measures.barHorizontalTop,this.measures.barHorizontalWidth,this.measures.barHorizontalHeight),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.meshHorizontal = new q["T"](this.bars.geometry,this.bars.materialHorizontal),
                    this.bars.meshHorizontal.frustumCulled = !1,
                    this.bars.meshHorizontal.renderOrder = 999,
                    this.bars.meshHorizontal.visible = !1,
                    this.bars.meshHorizontal.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.meshHorizontal),
                    this.meshes.push(this.bars.meshHorizontal),
                    this.bars.materialVertical = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barVerticalLeft,this.measures.barVerticalTop,this.measures.barVerticalWidth,this.measures.barVerticalHeight),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.meshVertical = new q["T"](this.bars.geometry,this.bars.materialVertical),
                    this.bars.meshVertical.frustumCulled = !1,
                    this.bars.meshVertical.renderOrder = 999,
                    this.bars.meshVertical.visible = !1,
                    this.bars.meshVertical.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.meshVertical),
                    this.meshes.push(this.bars.meshVertical),
                    this.bars.materialSquare = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barSquareLeft,this.measures.barSquareTop,this.measures.barSquareWidth,this.measures.barSquareHeight),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.meshSquare = new q["T"](this.bars.oblicGeometry,this.bars.materialSquare),
                    this.bars.meshSquare.frustumCulled = !1,
                    this.bars.meshSquare.renderOrder = 999,
                    this.bars.meshSquare.visible = !1,
                    this.bars.meshSquare.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.meshSquare),
                    this.meshes.push(this.bars.meshSquare)
                }
            }, {
                key: "mute",
                value: function() {
                    this.muted = !0,
                    Q["w"].to(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        x: this.measures.barHorizontalLeft,
                        duration: .5,
                        ease: "power4.inOut"
                    })
                }
            }, {
                key: "unmute",
                value: function() {
                    this.muted = !1,
                    Q["w"].to(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        x: this.measures.barHorizontalLeftMax,
                        duration: .5,
                        ease: "power4.inOut"
                    })
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (Q["w"].fromTo(this.bars.materialVertical.uniforms.uBounding.value, {
                        w: 0,
                        y: this.measures.barVerticalTop + this.measures.barVerticalHeight
                    }, {
                        w: this.measures.barVerticalHeight,
                        y: this.measures.barVerticalTop,
                        duration: .5,
                        delay: .3
                    }),
                    Q["w"].fromTo(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        z: 0
                    }, {
                        z: this.measures.barHorizontalWidth,
                        duration: .5,
                        delay: .6
                    }),
                    Q["w"].fromTo(this.bars.materialSquare.uniforms.uBounding.value, {
                        x: this.measures.barSquareLeft + this.measures.barSquareWidth,
                        y: this.measures.barSquareTop + this.measures.barSquareHeight,
                        z: 0,
                        w: 0
                    }, {
                        x: this.measures.barSquareLeft,
                        y: this.measures.barSquareTop,
                        z: this.measures.barSquareWidth,
                        w: this.measures.barSquareHeight,
                        duration: .5,
                        delay: 0
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    this.visible && (Q["w"].fromTo(this.bars.materialVertical.uniforms.uBounding.value, {
                        w: this.measures.barVerticalHeight,
                        y: this.measures.barVerticalTop
                    }, {
                        w: 0,
                        y: this.measures.barVerticalTop + this.measures.barVerticalHeight,
                        duration: .5,
                        delay: .3
                    }),
                    Q["w"].fromTo(this.bars.materialHorizontal.uniforms.uBounding.value, {
                        z: this.measures.barHorizontalWidth
                    }, {
                        z: 0,
                        duration: .5,
                        delay: 0
                    }),
                    Q["w"].fromTo(this.bars.materialSquare.uniforms.uBounding.value, {
                        x: this.measures.barSquareLeft,
                        y: this.measures.barSquareTop,
                        z: this.measures.barSquareWidth,
                        w: this.measures.barSquareHeight
                    }, {
                        x: this.measures.barSquareLeft + this.measures.barSquareWidth,
                        y: this.measures.barSquareTop + this.measures.barSquareHeight,
                        z: 0,
                        w: 0,
                        duration: .5,
                        delay: .6
                    }),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.visible ? (this.bars.materialHorizontal.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialHorizontal.uniforms.uBounding.value.x = this.muted ? this.measures.barHorizontalLeft : this.measures.barHorizontalLeftMax,
                    this.bars.materialHorizontal.uniforms.uBounding.value.y = this.measures.barHorizontalTop,
                    this.bars.materialHorizontal.uniforms.uBounding.value.z = this.measures.barHorizontalWidth,
                    this.bars.materialHorizontal.uniforms.uBounding.value.w = this.measures.barHorizontalHeight,
                    this.bars.materialVertical.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialVertical.uniforms.uBounding.value.x = this.measures.barVerticalLeft,
                    this.bars.materialVertical.uniforms.uBounding.value.y = this.measures.barVerticalTop,
                    this.bars.materialVertical.uniforms.uBounding.value.z = this.measures.barVerticalWidth,
                    this.bars.materialVertical.uniforms.uBounding.value.w = this.measures.barVerticalHeight,
                    this.bars.materialSquare.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialSquare.uniforms.uBounding.value.x = this.measures.barSquareLeft,
                    this.bars.materialSquare.uniforms.uBounding.value.y = this.measures.barSquareTop,
                    this.bars.materialSquare.uniforms.uBounding.value.z = this.measures.barSquareWidth,
                    this.bars.materialSquare.uniforms.uBounding.value.w = this.measures.barSquareHeight) : (this.bars.materialHorizontal.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialHorizontal.uniforms.uBounding.value.x = this.muted ? this.measures.barHorizontalLeft : this.measures.barHorizontalLeftMax,
                    this.bars.materialHorizontal.uniforms.uBounding.value.y = this.measures.barHorizontalTop,
                    this.bars.materialHorizontal.uniforms.uBounding.value.z = 0,
                    this.bars.materialHorizontal.uniforms.uBounding.value.w = this.measures.barHorizontalHeight,
                    this.bars.materialVertical.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialVertical.uniforms.uBounding.value.x = this.measures.barVerticalLeft,
                    this.bars.materialVertical.uniforms.uBounding.value.y = this.measures.barVerticalTop + this.measures.barVerticalHeight,
                    this.bars.materialVertical.uniforms.uBounding.value.z = this.measures.barVerticalWidth,
                    this.bars.materialVertical.uniforms.uBounding.value.w = 0,
                    this.bars.materialSquare.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.materialSquare.uniforms.uBounding.value.x = this.measures.barSquareLeft + this.measures.barSquareWidth,
                    this.bars.materialSquare.uniforms.uBounding.value.y = this.measures.barSquareTop + this.measures.barSquareHeight,
                    this.bars.materialSquare.uniforms.uBounding.value.z = 0,
                    this.bars.materialSquare.uniforms.uBounding.value.w = 0)
                }
            }, {
                key: "destroy",
                value: function() {}
            }]),
            e
        }()
          , yt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.resources = t.resources,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.colors = t.colors,
                this.bounding = t.bounding,
                this.visible = !1,
                this.extended = !1,
                this.meshes = [],
                this.interactives = [],
                this.interactivesActive = [],
                this.debug && (this.debugFolder = this.debug.addFolder("scrollButtonInterface"),
                this.debugFolder.add(this, "goExtended"),
                this.debugFolder.add(this, "leaveExtended")),
                this.setCanvas(),
                this.setTexture(),
                this.setMesh(),
                this.setMeasures(),
                this.setBars()
            }
            return Object(O["a"])(e, [{
                key: "reset",
                value: function() {
                    this.extended = !1,
                    this.bars.material1.uniforms.uAlpha.value = 1,
                    this.bars.material4.uniforms.uBounding.value.z = 0,
                    this.update()
                }
            }, {
                key: "setCanvas",
                value: function() {
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.context = this.canvas.getContext("2d")
                }
            }, {
                key: "setTexture",
                value: function() {
                    this.texture = new q["g"](this.canvas),
                    this.texture.generateMipmaps = !1,
                    this.texture.minFilter = q["ab"],
                    this.texture.magFilter = q["ab"]
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal"),
                    this.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.bounding.left,this.bounding.top,this.bounding.width,this.bounding.height),
                        texture: this.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !1
                    }),
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    this.mesh.renderOrder = 999,
                    this.mesh.visible = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh),
                    this.meshes.push(this.mesh),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMeasures",
                value: function() {
                    var e = this;
                    this.measures = {},
                    this.interactive = {},
                    this.interactives.push(this.interactive),
                    this.measures.update = function() {
                        e.interactive.boundingX = e.bounding.left - 10,
                        e.interactive.boundingY = e.bounding.top - 20,
                        e.interactive.boundingWidth = e.bounding.width + 20,
                        e.interactive.boundingHeight = e.bounding.height + 40,
                        e.interactive.type = "scrollButton",
                        e.context.font = "12px ShipleyRegular",
                        e.context.textAlign = "center",
                        e.context.textBaseline = "middle";
                        var t = Math.round(e.context.measureText(e.config.texts.scroll.toUpperCase().split("").join(" ")).width);
                        e.measures.underlineTop = e.bounding.top + 38,
                        e.measures.underlineHeight = 1,
                        e.measures.underlineMinWidth = .5 * t,
                        e.measures.underlineMaxWidth = t,
                        e.measures.underlineMinLeft = Math.round(.5 * e.sizes.viewport.width) - Math.ceil(.5 * e.measures.underlineMinWidth),
                        e.measures.underlineMaxLeft = Math.round(.5 * e.sizes.viewport.width) - Math.ceil(.5 * e.measures.underlineMaxWidth),
                        e.measures.barMinTop = e.bounding.top + 52,
                        e.measures.barMaxTop = e.bounding.top + 90,
                        e.measures.barMinHeight = 40,
                        e.measures.barMaxHeight = Math.ceil(e.sizes.viewport.height - e.measures.barMaxTop),
                        e.measures.barLeft = Math.round(.5 * e.sizes.viewport.width),
                        e.measures.barWidth = 1
                    }
                }
            }, {
                key: "setBars",
                value: function() {
                    this.bars = {},
                    this.bars.progress = 0,
                    this.bars.geometry = new q["jb"](2,2),
                    this.bars.geometry.deleteAttribute("normal"),
                    this.bars.geometry.deleteAttribute("uv"),
                    this.bars.material1 = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barLeft,this.measures.barMinTop,this.measures.barWidth,0),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.mesh1 = new q["T"](this.bars.geometry,this.bars.material1),
                    this.bars.mesh1.frustumCulled = !1,
                    this.bars.mesh1.renderOrder = 999,
                    this.bars.mesh1.visible = !1,
                    this.bars.mesh1.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.mesh1),
                    this.meshes.push(this.bars.mesh1),
                    this.bars.bars2Animated = !1,
                    this.bars.material2 = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barLeft - 1,this.measures.barMinTop,this.measures.barWidth + 2,0),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.mesh2 = new q["T"](this.bars.geometry,this.bars.material2),
                    this.bars.mesh2.frustumCulled = !1,
                    this.bars.mesh2.renderOrder = 999,
                    this.bars.mesh2.visible = !1,
                    this.bars.mesh2.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.mesh2),
                    this.meshes.push(this.bars.mesh2),
                    this.bars.material3 = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barLeft,this.measures.barMinTop + this.measures.barMinHeight,0,1),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.mesh3 = new q["T"](this.bars.geometry,this.bars.material3),
                    this.bars.mesh3.frustumCulled = !1,
                    this.bars.mesh3.renderOrder = 999,
                    this.bars.mesh3.visible = !1,
                    this.bars.mesh3.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.mesh3),
                    this.meshes.push(this.bars.mesh3),
                    this.bars.material4 = new mt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](this.measures.barLeft,this.measures.barMinTop + this.measures.barMinHeight,0,1),
                        color: new q["j"](this.colors.darkPencil.string),
                        alpha: 1
                    }),
                    this.bars.mesh4 = new q["T"](this.bars.geometry,this.bars.material4),
                    this.bars.mesh4.frustumCulled = !1,
                    this.bars.mesh4.renderOrder = 999,
                    this.bars.mesh4.visible = !1,
                    this.bars.mesh4.matrixAutoUpdate = !1,
                    this.scene.add(this.bars.mesh4),
                    this.meshes.push(this.bars.mesh4)
                }
            }, {
                key: "goExtended",
                value: function() {
                    var e = this;
                    this.extended || (this.extended = !0,
                    r["a"].killTweensOf(this.bars.material1.uniforms.uBounding.value),
                    r["a"].to(this.bars.material1.uniforms.uBounding.value, {
                        y: this.measures.barMaxTop,
                        w: this.measures.barMaxHeight,
                        duration: 2,
                        ease: "power4.inOut"
                    }),
                    r["a"].killTweensOf(this.bars.material1.uniforms.uAlpha),
                    r["a"].to(this.bars.material1.uniforms.uAlpha, {
                        value: .2,
                        duration: 2,
                        ease: "power4.inOut"
                    }),
                    this.bars.bars2Animated = !0,
                    r["a"].killTweensOf(this.bars.material2.uniforms.uBounding.value),
                    r["a"].fromTo(this.bars.material2.uniforms.uBounding.value, {
                        y: this.measures.barMaxTop
                    }, {
                        y: this.measures.barMaxTop,
                        w: .2 * this.measures.barMaxHeight,
                        duration: 1.5,
                        ease: "power4.inOut",
                        delay: 1,
                        onComplete: function() {
                            e.bars.bars2Animated = !1
                        }
                    }),
                    r["a"].killTweensOf(this.bars.material3.uniforms.uBounding.value),
                    r["a"].to(this.bars.material3.uniforms.uBounding.value, {
                        x: this.measures.barLeft,
                        z: 0,
                        duration: .3
                    }),
                    r["a"].killTweensOf(this.bars.material4.uniforms.uBounding.value),
                    r["a"].to(this.bars.material4.uniforms.uBounding.value, {
                        x: this.measures.underlineMinLeft,
                        z: this.measures.underlineMinWidth,
                        duration: .8,
                        ease: "power4.inOut",
                        delay: 1.5
                    }))
                }
            }, {
                key: "leaveExtended",
                value: function() {
                    this.extended && (this.extended = !1,
                    r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        delay: 1.5,
                        duration: 1.5
                    }),
                    r["a"].killTweensOf(this.bars.material1.uniforms.uBounding.value),
                    r["a"].to(this.bars.material1.uniforms.uBounding.value, {
                        y: this.measures.barMinTop,
                        w: this.measures.barMinHeight,
                        duration: 2.5,
                        ease: "power4.out"
                    }),
                    r["a"].killTweensOf(this.bars.material1.uniforms.uAlpha),
                    r["a"].to(this.bars.material1.uniforms.uAlpha, {
                        value: 1,
                        duration: 2.5,
                        ease: "power4.out"
                    }),
                    r["a"].killTweensOf(this.bars.material2.uniforms.uBounding.value),
                    r["a"].to(this.bars.material2.uniforms.uBounding.value, {
                        y: this.measures.barMinTop,
                        w: 0,
                        duration: 2.5,
                        ease: "power4.out"
                    }),
                    r["a"].killTweensOf(this.bars.material3.uniforms.uBounding.value),
                    r["a"].to(this.bars.material3.uniforms.uBounding.value, {
                        x: this.measures.barLeft - 4,
                        z: this.measures.barWidth + 8,
                        duration: .5,
                        delay: 2.1
                    }),
                    r["a"].killTweensOf(this.bars.material4.uniforms.uBounding.value),
                    r["a"].to(this.bars.material4.uniforms.uBounding.value, {
                        x: this.measures.underlineMinLeft + .5 * this.measures.underlineMinWidth,
                        z: 0,
                        duration: .8,
                        ease: "power4.inOut",
                        delay: 0
                    }))
                }
            }, {
                key: "enter",
                value: function() {
                    this.extended && (r["a"].killTweensOf(this.bars.material4.uniforms.uBounding.value),
                    r["a"].to(this.bars.material4.uniforms.uBounding.value, {
                        x: this.measures.underlineMaxLeft,
                        z: this.measures.underlineMaxWidth,
                        duration: .5,
                        ease: "power4.out"
                    }))
                }
            }, {
                key: "leave",
                value: function() {
                    this.extended && (r["a"].killTweensOf(this.bars.material4.uniforms.uBounding.value),
                    r["a"].to(this.bars.material4.uniforms.uBounding.value, {
                        x: this.measures.underlineMinLeft,
                        z: this.measures.underlineMinWidth,
                        duration: .5,
                        ease: "power4.out"
                    }))
                }
            }, {
                key: "setProgress",
                value: function(e) {
                    !this.bars.bars2Animated && this.extended && (this.bars.material2.uniforms.uBounding.value.w = this.measures.barMaxHeight * (.2 + .8 * e))
                }
            }, {
                key: "draw",
                value: function() {
                    this.context.clearRect(0, 0, this.bounding.width, this.bounding.height),
                    this.context.globalAlpha = 1,
                    this.context.fillStyle = this.colors.darkPencil.string,
                    this.context.font = "12px ShipleyRegular",
                    this.context.textAlign = "center",
                    this.context.textBaseline = "middle",
                    this.context.fillText(this.config.texts.scroll.toUpperCase().split("").join(" "), .5 * this.bounding.width, .5 * this.bounding.height)
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 1,
                        duration: 2
                    }),
                    r["a"].killTweensOf(this.bars.material1.uniforms.uBounding.value),
                    r["a"].to(this.bars.material1.uniforms.uBounding.value, {
                        w: this.measures.barMinHeight,
                        duration: 1,
                        ease: "power4.out",
                        delay: .65
                    }),
                    r["a"].killTweensOf(this.bars.material3.uniforms.uBounding.value),
                    r["a"].to(this.bars.material3.uniforms.uBounding.value, {
                        x: this.measures.barLeft - 4,
                        z: this.measures.barWidth + 8,
                        duration: .5,
                        delay: 1.1
                    }),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
                      , t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    this.visible && (r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].killTweensOf(this.bars.material1.uniforms.uBounding.value),
                    r["a"].killTweensOf(this.bars.material2.uniforms.uBounding.value),
                    r["a"].killTweensOf(this.bars.material3.uniforms.uBounding.value),
                    t ? (this.material.uniforms.uRevealProgress.value = 0,
                    this.bars.material1.uniforms.uBounding.value.y = e ? this.measures.barMinTop + this.measures.barMaxHeight : this.measures.barMinTop,
                    this.bars.material1.uniforms.uBounding.value.w = 0,
                    this.bars.material2.uniforms.uBounding.value.y = e ? this.measures.barMinTop + this.measures.barMaxHeight : this.measures.barMinTop,
                    this.bars.material2.uniforms.uBounding.value.w = 0,
                    this.bars.material3.uniforms.uBounding.value.x = this.measures.barLeft,
                    this.bars.material3.uniforms.uBounding.value.z = 0) : (r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: 2
                    }),
                    r["a"].to(this.bars.material1.uniforms.uBounding.value, {
                        y: e ? this.measures.barMaxTop + this.measures.barMaxHeight : this.measures.barMinTop,
                        w: 0,
                        duration: 1,
                        ease: "power4.inOut",
                        delay: .1
                    }),
                    r["a"].to(this.bars.material2.uniforms.uBounding.value, {
                        y: e ? this.measures.barMaxTop + this.measures.barMaxHeight : this.measures.barMinTop,
                        w: 0,
                        duration: 2,
                        ease: "power4.inOut"
                    }),
                    r["a"].to(this.bars.material3.uniforms.uBounding.value, {
                        x: this.measures.barLeft,
                        z: 0,
                        duration: .3
                    }),
                    r["a"].to(this.bars.material4.uniforms.uBounding.value, {
                        x: this.measures.underlineMinLeft + .5 * this.measures.underlineMinWidth,
                        z: 0,
                        duration: .8,
                        ease: "power4.inOut",
                        delay: 0
                    })),
                    this.visible = !1)
                }
            }, {
                key: "update",
                value: function() {
                    this.measures.update(),
                    this.canvas.width = this.bounding.width,
                    this.canvas.height = this.bounding.height,
                    this.material.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.material.uniforms.uBounding.value.set(this.bounding.left, this.bounding.top, this.bounding.width, this.bounding.height),
                    this.bars.material1.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.material2.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.material3.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.material4.uniforms.uResolution.value.set(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.bars.material1.uniforms.uBounding.value.x = this.measures.barLeft,
                    this.bars.material1.uniforms.uBounding.value.y = this.extended ? this.measures.barMaxTop : this.measures.barMinTop,
                    this.bars.material1.uniforms.uBounding.value.z = 1,
                    this.extended ? this.bars.material1.uniforms.uBounding.value.w = this.measures.barMaxHeight : this.visible ? this.bars.material1.uniforms.uBounding.value.w = this.measures.barMinHeight : this.bars.material1.uniforms.uBounding.value.w = 0,
                    this.bars.material2.uniforms.uBounding.value.x = this.measures.barLeft - 1,
                    this.bars.material2.uniforms.uBounding.value.y = this.extended ? this.measures.barMaxTop : this.measures.barMinTop,
                    this.bars.material2.uniforms.uBounding.value.z = 3,
                    this.extended ? this.bars.material2.uniforms.uBounding.value.w = .2 * this.measures.barMaxHeight : this.bars.material2.uniforms.uBounding.value.w = 0,
                    this.bars.material3.uniforms.uBounding.value.x = this.extended ? this.measures.barLeft : this.measures.barLeft - 4,
                    this.bars.material3.uniforms.uBounding.value.y = this.measures.barMinTop + this.measures.barMinHeight,
                    this.extended ? (this.bars.material4.uniforms.uBounding.value.x = this.measures.underlineMinLeft,
                    this.bars.material4.uniforms.uBounding.value.z = this.measures.underlineMinWidth) : (this.bars.material4.uniforms.uBounding.value.x = this.measures.underlineMinLeft + .5 * this.measures.underlineMinWidth,
                    this.bars.material4.uniforms.uBounding.value.z = 0),
                    this.bars.material4.uniforms.uBounding.value.y = this.measures.underlineTop,
                    this.bars.material4.uniforms.uBounding.value.w = this.measures.underlineHeight,
                    this.draw(),
                    this.texture.needsUpdate = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.texture.dispose(),
                    this.bars.geometry.dispose(),
                    this.bars.material1.dispose(),
                    this.bars.material2.dispose(),
                    this.bars.material3.dispose(),
                    this.bars.material4.dispose()
                }
            }]),
            e
        }()
          , wt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.breakpoints = t.breakpoints,
                this.fieldOptions = t.fieldOptions,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.resources = t.resources,
                this.sounds = t.sounds,
                this.colors = t.colors,
                this.scene = t.scene,
                this.renderer = t.renderer,
                this.isDefault = t.isDefault,
                this.title = t.title,
                this.previewImage = t.previewImage,
                this.previewTitle = t.previewTitle,
                this.navNextTitle = t.navNextTitle,
                this.active = !1,
                this.debug && (this.debugFolder = this.debug.addFolder("interfaces")),
                this.setItems(),
                this.setResize(),
                this.setFont(),
                this.fonts.test()
            }
            return Object(O["a"])(e, [{
                key: "setItems",
                value: function() {
                    this.items = {},
                    this.items.all = [],
                    this.items.loading = new ot({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        breakpoints: this.breakpoints,
                        bounding: {
                            left: 0,
                            top: 0,
                            width: this.sizes.viewport.width,
                            height: this.sizes.viewport.height
                        },
                        title: this.title
                    }),
                    this.items.all.push(this.items.loading),
                    this.items.map = new lt({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        breakpoints: this.breakpoints,
                        bounding: {
                            left: 0,
                            top: 0,
                            width: this.sizes.viewport.width,
                            height: this.sizes.viewport.height
                        },
                        title: this.title
                    }),
                    this.items.all.push(this.items.map),
                    this.items.preview = new ut({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        breakpoints: this.breakpoints,
                        bounding: {
                            left: this.items.map.measures.previewLeft,
                            top: this.items.map.measures.previewTop,
                            width: this.items.map.measures.previewWidth,
                            height: this.items.map.measures.previewHeight
                        },
                        previewImage: this.previewImage,
                        previewTitle: this.previewTitle
                    }),
                    this.items.all.push(this.items.preview),
                    this.items.anecdote = new ht({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        breakpoints: this.breakpoints,
                        bounding: {
                            left: 0,
                            top: 0,
                            width: 1,
                            height: 1
                        }
                    }),
                    this.items.all.push(this.items.anecdote),
                    this.items.nav = new pt({
                        fieldOptions: this.fieldOptions,
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        breakpoints: this.breakpoints,
                        bounding: {
                            left: this.items.map.measures.navLeft,
                            top: this.items.map.measures.navTop,
                            width: this.items.map.measures.navWidth,
                            height: this.items.map.measures.navHeight
                        },
                        nextTitle: this.navNextTitle
                    }),
                    this.items.all.push(this.items.nav),
                    this.items.mapButton = new gt({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        bounding: {
                            left: this.sizes.viewport.width - 115 - 40,
                            top: 30,
                            width: 115,
                            height: 76
                        }
                    }),
                    this.items.all.push(this.items.mapButton),
                    this.items.mapTitle = new vt({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        breakpoints: this.breakpoints,
                        bounding: {
                            left: 0,
                            top: 0,
                            width: this.sizes.viewport.width,
                            height: this.items.map.measures.mapTop
                        },
                        title: this.title
                    }),
                    this.items.all.push(this.items.mapTitle),
                    this.items.arrowButtonLeft = new ft({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        bounding: {
                            left: 0,
                            top: 100,
                            width: 37,
                            height: 37
                        },
                        breakpoints: this.breakpoints,
                        side: "left"
                    }),
                    this.items.all.push(this.items.arrowButtonLeft),
                    this.items.arrowButtonRight = new ft({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        bounding: {
                            left: 0,
                            top: 100,
                            width: 37,
                            height: 37
                        },
                        breakpoints: this.breakpoints,
                        side: "right"
                    }),
                    this.items.all.push(this.items.arrowButtonRight),
                    this.items.menuButton = new bt({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        bounding: {
                            left: 40,
                            top: 30,
                            width: 54,
                            height: 54
                        }
                    }),
                    this.items.all.push(this.items.menuButton),
                    this.items.soundButton = new xt({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        sounds: this.sounds,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        bounding: {
                            left: 100,
                            top: 30,
                            width: 54,
                            height: 54
                        }
                    }),
                    this.items.all.push(this.items.soundButton),
                    this.items.scrollButton = new yt({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        scene: this.scene,
                        renderer: this.renderer,
                        colors: this.colors,
                        bounding: {
                            left: Math.round(.5 * this.sizes.viewport.width - 90),
                            top: Math.round(.65 * this.sizes.viewport.height - 26),
                            width: 180,
                            height: 52
                        }
                    }),
                    this.items.all.push(this.items.scrollButton)
                }
            }, {
                key: "setResize",
                value: function() {
                    var e = this;
                    this.resizeTimeout = this.sizes.on("resize", (function() {
                        e.resizeTimeout && (window.clearTimeout(e.resizeTimeout),
                        e.resizeTimeout = null),
                        e.resizeTimeout = window.setTimeout((function() {
                            e.resizeTimeout = null,
                            e.update()
                        }
                        ), 100)
                    }
                    ))
                }
            }, {
                key: "setFont",
                value: function() {
                    var e = this;
                    this.fonts = {},
                    this.fonts.canvas = document.createElement("canvas"),
                    this.fonts.canvas.width = 200,
                    this.fonts.canvas.height = 20,
                    this.fonts.context = this.fonts.canvas.getContext("2d"),
                    this.fonts.context.font = "10px ShipleyRegular",
                    this.fonts.context.textBaseline = "middle",
                    this.fonts.context.previousWidth = 0,
                    this.fonts.context.delay = 2e3,
                    this.fonts.context.attempts = 6,
                    this.fonts.test = function() {
                        var t = e.fonts.context.measureText("abcdefghijklmnopqrstuvwxyz0123456789");
                        t.width !== e.fonts.context.previousWidth && (0 !== e.fonts.context.previousWidth && (e.fonts.context.attempts = 0),
                        e.fonts.context.previousWidth = t.width,
                        e.update()),
                        e.fonts.context.attempts--,
                        e.fonts.context.attempts > 0 && window.setTimeout(e.fonts.test, e.fonts.context.delay)
                    }
                }
            }, {
                key: "update",
                value: function() {
                    switch (this.items.loading && (this.items.loading.bounding.width = this.sizes.viewport.width,
                    this.items.loading.bounding.height = this.sizes.viewport.height,
                    this.items.loading.update()),
                    this.items.map.bounding.width = this.sizes.viewport.width,
                    this.items.map.bounding.height = this.sizes.viewport.height,
                    this.items.map.update(),
                    this.items.preview.bounding.left = this.items.map.measures.previewLeft,
                    this.items.preview.bounding.top = this.items.map.measures.previewTop,
                    this.items.preview.bounding.width = this.items.map.measures.previewWidth,
                    this.items.preview.bounding.height = this.items.map.measures.previewHeight,
                    this.items.nav.bounding.left = this.items.map.measures.navLeft,
                    this.items.nav.bounding.top = this.items.map.measures.navTop,
                    this.items.nav.bounding.width = this.items.map.measures.navWidth,
                    this.items.nav.bounding.height = this.items.map.measures.navHeight,
                    this.items.mapTitle.bounding.width = this.sizes.viewport.width,
                    this.items.mapTitle.bounding.height = this.items.map.measures.mapTop,
                    this.breakpoints.currentIndex) {
                    case 0:
                        this.items.mapButton.bounding.left = this.sizes.viewport.width - 115 - 40,
                        this.items.mapButton.bounding.top = 30,
                        this.items.menuButton.bounding.left = 40,
                        this.items.menuButton.bounding.top = 30,
                        this.items.soundButton.bounding.left = this.items.mapButton.bounding.left - 70,
                        this.items.soundButton.bounding.top = this.items.mapButton.bounding.top - 8,
                        this.items.scrollButton.bounding.left = Math.round(.5 * this.sizes.viewport.width - 90),
                        this.items.scrollButton.bounding.top = Math.round(this.sizes.viewport.height - 300 - .05 * this.sizes.viewport.height);
                        break;
                    case 1:
                        this.items.mapButton.bounding.left = this.sizes.viewport.width - 115 - 30,
                        this.items.mapButton.bounding.top = 25,
                        this.items.menuButton.bounding.left = 30,
                        this.items.menuButton.bounding.top = 25,
                        this.items.soundButton.bounding.left = this.items.mapButton.bounding.left - 60,
                        this.items.soundButton.bounding.top = this.items.mapButton.bounding.top - 8,
                        this.items.scrollButton.bounding.left = Math.round(.5 * this.sizes.viewport.width - 90),
                        this.items.scrollButton.bounding.top = Math.round(this.sizes.viewport.height - 280 - .02 * this.sizes.viewport.height);
                        break;
                    case 2:
                        this.items.mapButton.bounding.left = this.sizes.viewport.width - 115 - 15,
                        this.items.mapButton.bounding.top = 20,
                        this.items.menuButton.bounding.left = 20,
                        this.items.menuButton.bounding.top = 20,
                        this.items.soundButton.bounding.left = this.items.mapButton.bounding.left - 50,
                        this.items.soundButton.bounding.top = this.items.mapButton.bounding.top - 8,
                        this.items.scrollButton.bounding.left = Math.round(.5 * this.sizes.viewport.width - 90),
                        this.items.scrollButton.bounding.top = Math.round(this.sizes.viewport.height - 280);
                        break;
                    case 3:
                        this.items.mapButton.bounding.left = this.sizes.viewport.width - 115 - 10,
                        this.items.mapButton.bounding.top = 15,
                        this.items.menuButton.bounding.left = 15,
                        this.items.menuButton.bounding.top = 15,
                        this.items.soundButton.bounding.left = this.items.mapButton.bounding.left - 45,
                        this.items.soundButton.bounding.top = this.items.mapButton.bounding.top - 8,
                        this.items.scrollButton.bounding.left = Math.round(.5 * this.sizes.viewport.width - 90),
                        this.items.scrollButton.bounding.top = Math.round(this.sizes.viewport.height - 200);
                        break;
                    case 4:
                        this.items.mapButton.bounding.left = this.sizes.viewport.width - 115 - 5,
                        this.items.mapButton.bounding.top = 10,
                        this.items.menuButton.bounding.left = 10,
                        this.items.menuButton.bounding.top = 10,
                        this.items.soundButton.bounding.left = this.items.mapButton.bounding.left - 45,
                        this.items.soundButton.bounding.top = this.items.mapButton.bounding.top - 8,
                        this.items.scrollButton.bounding.left = Math.round(.5 * this.sizes.viewport.width - 90),
                        this.items.scrollButton.bounding.top = Math.round(this.sizes.viewport.height - 190);
                        break;
                    case 5:
                        this.items.mapButton.bounding.left = this.sizes.viewport.width - 115 - 0,
                        this.items.mapButton.bounding.top = 5,
                        this.items.menuButton.bounding.left = 5,
                        this.items.menuButton.bounding.top = 5,
                        this.items.soundButton.bounding.left = this.items.mapButton.bounding.left + 50,
                        this.items.soundButton.bounding.top = this.items.mapButton.bounding.top + 63,
                        this.items.scrollButton.bounding.left = Math.round(.5 * this.sizes.viewport.width - 90),
                        this.items.scrollButton.bounding.top = Math.round(this.sizes.viewport.height - 180);
                        break
                    }
                    this.items.preview.update(),
                    this.items.anecdote.update(),
                    this.items.nav.update(),
                    this.items.mapButton.update(),
                    this.items.mapTitle.update(),
                    this.items.arrowButtonLeft.update(),
                    this.items.arrowButtonRight.update(),
                    this.items.menuButton.update(),
                    this.items.soundButton.update(),
                    this.items.scrollButton.update()
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                    case "composition":
                        var t, i = Object(L["a"])(this.items.all);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a, s = t.value, n = Object(L["a"])(s.meshes);
                                try {
                                    for (n.s(); !(a = n.n()).done; ) {
                                        var r = a.value;
                                        r.visible = !1
                                    }
                                } catch (m) {
                                    n.e(m)
                                } finally {
                                    n.f()
                                }
                            }
                        } catch (m) {
                            i.e(m)
                        } finally {
                            i.f()
                        }
                        break;
                    case "overlay":
                        var o, l = Object(L["a"])(this.items.all);
                        try {
                            for (l.s(); !(o = l.n()).done; ) {
                                var u, h = o.value, c = Object(L["a"])(h.meshes);
                                try {
                                    for (c.s(); !(u = c.n()).done; ) {
                                        var d = u.value;
                                        d.visible = this.active
                                    }
                                } catch (m) {
                                    c.e(m)
                                } finally {
                                    c.f()
                                }
                            }
                        } catch (m) {
                            l.e(m)
                        } finally {
                            l.f()
                        }
                        break
                    }
                }
            }, {
                key: "getInteractiveForCoordinates",
                value: function(e, t) {
                    var i, a = [], s = Object(L["a"])(this.items.all);
                    try {
                        for (s.s(); !(i = s.n()).done; ) {
                            var n = i.value;
                            if (n.visible && n.interactivesActive) {
                                var r, o = Object(L["a"])(n.interactives);
                                try {
                                    for (o.s(); !(r = o.n()).done; ) {
                                        var l = r.value;
                                        e > l.boundingX && e < l.boundingX + l.boundingWidth && t > l.boundingY && t < l.boundingY + l.boundingHeight && a.push(l)
                                    }
                                } catch (u) {
                                    o.e(u)
                                } finally {
                                    o.f()
                                }
                            }
                        }
                    } catch (u) {
                        s.e(u)
                    } finally {
                        s.f()
                    }
                    return a
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0
                }
            }, {
                key: "deactivate",
                value: function() {
                    this.active = !1;
                    var e, t = Object(L["a"])(this.items.all);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i, a = e.value, s = Object(L["a"])(a.meshes);
                            try {
                                for (s.s(); !(i = s.n()).done; ) {
                                    var n = i.value;
                                    n.visible = !1
                                }
                            } catch (r) {
                                s.e(r)
                            } finally {
                                s.f()
                            }
                        }
                    } catch (r) {
                        t.e(r)
                    } finally {
                        t.f()
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    var e, t = Object(L["a"])(this.items.all);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.destroy()
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }]),
            e
        }()
          , Tt = (i("4057"),
        i("a9e3"),
        i("b680"),
        i("c098"))
          , St = i.n(Tt)
          , kt = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                return Object(M["a"])(this, i),
                a = t.call(this),
                a.config = e.config,
                a.breakpoints = e.breakpoints,
                a.debug = e.debug,
                a.time = e.time,
                a.sounds = e.sounds,
                a.sizes = e.sizes,
                a.camera = e.camera,
                a.renderer = e.renderer,
                a.domElement = e.domElement,
                a.defaultFieldIndex = e.defaultFieldIndex,
                a.overlay = e.overlay,
                a.cursor = e.cursor,
                a.interfaces = e.interfaces,
                a.fieldsVillage = e.fieldsVillage,
                a.pencilVillage = e.pencilVillage,
                a.particlesVillage = e.particlesVillage,
                a.villageName = e.villageName,
                a.active = !1,
                a.playing = !0,
                a.mode = null,
                a.canNavigate = !0,
                a.latestIndex = -1,
                a.debug && (a.debugFolder = a.debug.addFolder("navigation"),
                a.debugFolder.open()),
                a.sounds.on("mute", (function() {
                    a.interfaces.items.soundButton.mute()
                }
                )),
                a.sounds.on("unmute", (function() {
                    a.interfaces.items.soundButton.unmute()
                }
                )),
                a.setFields(),
                a.setToggleTransition(),
                a.setContentTransition(),
                a.setMap(),
                a.setAutoplay(),
                a.setKeyboard(),
                a.setWheel(),
                a.setPointer(),
                a
            }
            return Object(O["a"])(i, [{
                key: "setFields",
                value: function() {
                    var e = this;
                    this.fields = {},
                    this.fields.current = null,
                    this.fields.hovered = null;
                    var t, i = Object(L["a"])(this.fieldsVillage.items);
                    try {
                        var a = function() {
                            var i = t.value;
                            i.on("click", (function() {
                                "free" !== e.mode && "focus" !== e.mode || e.goFocus(i.index)
                            }
                            )),
                            i.on("enter", (function() {
                                if (e.fields.hovered = i,
                                "free" === e.mode && (i.setMode("enter"),
                                !1 !== i.category)) {
                                    var t, a = Object(L["a"])(e.fieldsVillage.items);
                                    try {
                                        for (a.s(); !(t = a.n()).done; ) {
                                            var s = t.value;
                                            s !== i && s.category === i.category && s.setMode("enter-side")
                                        }
                                    } catch (n) {
                                        a.e(n)
                                    } finally {
                                        a.f()
                                    }
                                }
                            }
                            )),
                            i.on("leave", (function() {
                                if (e.fields.hovered = null,
                                "free" === e.mode && (i.setMode("leave"),
                                !1 !== i.category)) {
                                    var t, a = Object(L["a"])(e.fieldsVillage.items);
                                    try {
                                        for (a.s(); !(t = a.n()).done; ) {
                                            var s = t.value;
                                            s !== i && s.category === i.category && s.setMode("leave")
                                        }
                                    } catch (n) {
                                        a.e(n)
                                    } finally {
                                        a.f()
                                    }
                                }
                            }
                            ))
                        };
                        for (i.s(); !(t = i.n()).done; )
                            a()
                    } catch (s) {
                        i.e(s)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "setToggleTransition",
                value: function() {
                    var e = this;
                    this.toggleTransition = {},
                    this.toggleTransition.mode = "pencil",
                    this.toggleTransition.progresses = {},
                    this.toggleTransition.progresses.particlesTerrain = 0,
                    this.toggleTransition.progresses.particlesPlane = 0,
                    this.toggleTransition.progresses.pencilStroke = 1,
                    this.toggleTransition.progresses.pencilPencil = 1,
                    this.toggleTransition.progresses.pencilClouds = 1,
                    this.toggleTransition.progresses.pencilParticles = 1,
                    this.toggleTransition.progresses.pencilBirds = 1,
                    this.toggleTransition.progresses.passes = 1,
                    this.toggleTransition.reset = function() {
                        e.toggleTransition.mode = "pencil",
                        e.toggleTransition.progresses.particlesTerrain = 0,
                        e.toggleTransition.progresses.particlesPlane = 0,
                        e.toggleTransition.progresses.pencilStroke = 1,
                        e.toggleTransition.progresses.pencilPencil = 1,
                        e.toggleTransition.progresses.pencilClouds = 1,
                        e.toggleTransition.progresses.pencilParticles = 1,
                        e.toggleTransition.progresses.pencilBirds = 1,
                        e.toggleTransition.progresses.passes = 1,
                        e.pencilVillage.visible = !0,
                        e.particlesVillage.visible = !1,
                        e.toggleTransition.update(),
                        e.toggleTransition.resetTimelines()
                    }
                    ,
                    this.toggleTransition.goToParticles = function() {
                        e.toggleTransition.mode = "particles",
                        e.toggleTransition.toPencilTimeline.pause(),
                        e.toggleTransition.toParticlesTimeline.progress(0),
                        e.toggleTransition.toParticlesTimeline.play()
                    }
                    ,
                    this.toggleTransition.goToPencil = function() {
                        e.toggleTransition.mode = "pencil",
                        e.toggleTransition.toParticlesTimeline.pause(),
                        e.toggleTransition.toPencilTimeline.progress(0),
                        e.toggleTransition.toPencilTimeline.play()
                    }
                    ,
                    this.toggleTransition.update = function() {
                        var t, i = Object(L["a"])(e.pencilVillage.materials.options);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a = t.value;
                                "terrain" !== a.name && (e.pencilVillage.materials[a.name].uniforms.uRevealProgress.value = e.toggleTransition.progresses.pencilPencil,
                                e.pencilVillage.materials[a.name].uniforms.uRevealReverseFactor.value = "particles" === e.toggleTransition.mode ? 1 : 0)
                            }
                        } catch (o) {
                            i.e(o)
                        } finally {
                            i.f()
                        }
                        e.pencilVillage.terrainFallback.material.uniforms.uRevealProgress.value = e.toggleTransition.progresses.pencilPencil,
                        e.pencilVillage.terrainFallback.material.uniforms.uRevealReverseFactor.value = "particles" === e.toggleTransition.mode ? 1 : 0,
                        e.pencilVillage.clouds.material.opacity = e.toggleTransition.progresses.pencilClouds,
                        e.pencilVillage.birds.material.uniforms.uAlpha.value = e.toggleTransition.progresses.pencilBirds;
                        var s, n = Object(L["a"])(e.particlesVillage.terrainParticles.items);
                        try {
                            for (n.s(); !(s = n.n()).done; ) {
                                var r = s.value;
                                r.material.uniforms.uRevealProgress.value = e.toggleTransition.progresses.particlesTerrain,
                                r.material.uniforms.uRevealReverseFactor.value = "particles" === e.toggleTransition.mode ? 0 : 1
                            }
                        } catch (o) {
                            n.e(o)
                        } finally {
                            n.f()
                        }
                        e.particlesVillage.fieldParticles.material.uniforms.uRevealProgress.value = e.toggleTransition.progresses.particlesTerrain,
                        e.particlesVillage.fieldParticles.material.uniforms.uRevealReverseFactor.value = "particles" === e.toggleTransition.mode ? 0 : 1,
                        e.particlesVillage.fieldParticles.material.uniforms.uRevealReverseFactor.value = "particles" === e.toggleTransition.mode ? 0 : 1,
                        e.particlesVillage.terrainPlane.material.uniforms.uAlpha.value = e.toggleTransition.progresses.particlesPlane,
                        e.renderer.passes.composition.displacementProgress = 1 - e.toggleTransition.progresses.passes
                    }
                    ,
                    this.toggleTransition.resetTimelines = function() {
                        e.toggleTransition.toParticlesTimeline = new r["a"].timeline({
                            paused: !0,
                            onUpdate: e.toggleTransition.update
                        }),
                        e.toggleTransition.toParticlesTimeline.timeScale(.75),
                        e.toggleTransition.toParticlesTimeline.add((function() {
                            e.pencilVillage.visible = !0,
                            e.particlesVillage.visible = !1
                        }
                        ), "0"),
                        e.toggleTransition.toParticlesTimeline.add((function() {
                            e.pencilVillage.visible = !1,
                            e.particlesVillage.visible = !0
                        }
                        ), "1.75"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            particlesTerrain: 0
                        }, {
                            particlesTerrain: 1,
                            duration: 3,
                            ease: "power1.inOut"
                        }, "1.5"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            particlesPlane: 0
                        }, {
                            particlesPlane: 1,
                            duration: .5,
                            ease: "power1.inOut"
                        }, "2"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilStroke: 1
                        }, {
                            pencilStroke: 0,
                            duration: 3,
                            ease: "power1.inOut"
                        }, "0"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilPencil: 1
                        }, {
                            pencilPencil: 0,
                            duration: 3,
                            ease: "power1.inOut"
                        }, "0"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilClouds: 1
                        }, {
                            pencilClouds: 0,
                            duration: .5,
                            ease: "power1.out"
                        }, "1.5"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilParticles: 1
                        }, {
                            pencilParticles: 0,
                            duration: .5,
                            ease: "power1.out"
                        }, "1"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilBirds: 1
                        }, {
                            pencilBirds: 0,
                            duration: .5,
                            ease: "power1.out"
                        }, "1"),
                        e.toggleTransition.toParticlesTimeline.fromTo(e.toggleTransition.progresses, {
                            passes: 1
                        }, {
                            passes: 0,
                            duration: 3,
                            ease: "power1.out"
                        }, "1.5"),
                        e.toggleTransition.toPencilTimeline = new r["a"].timeline({
                            paused: !0,
                            onUpdate: e.toggleTransition.update
                        }),
                        e.toggleTransition.toPencilTimeline.timeScale(.75),
                        e.toggleTransition.toPencilTimeline.add((function() {
                            e.pencilVillage.visible = !1,
                            e.particlesVillage.visible = !0
                        }
                        ), "0"),
                        e.toggleTransition.toPencilTimeline.add((function() {
                            e.pencilVillage.visible = !0,
                            e.particlesVillage.visible = !1
                        }
                        ), "1.75"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            particlesTerrain: 1
                        }, {
                            particlesTerrain: 0,
                            immediateRender: !1,
                            duration: 4,
                            ease: "power1.out"
                        }, "0"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            particlesPlane: 1
                        }, {
                            particlesPlane: 0,
                            immediateRender: !1,
                            duration: 1.5,
                            ease: "power1.out"
                        }, "0"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilStroke: 0
                        }, {
                            pencilStroke: 1,
                            immediateRender: !1,
                            duration: 3,
                            ease: "power1.inOut"
                        }, "1.5"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilPencil: 0
                        }, {
                            pencilPencil: 1,
                            immediateRender: !1,
                            duration: 3,
                            ease: "power1.inOut"
                        }, "1.5"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilClouds: 0
                        }, {
                            pencilClouds: 1,
                            immediateRender: !1,
                            duration: .5,
                            ease: "power1.in"
                        }, "2.5"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilParticles: 0
                        }, {
                            pencilParticles: 1,
                            immediateRender: !1,
                            duration: .5,
                            ease: "power1.in"
                        }, "2.5"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            pencilBirds: 0
                        }, {
                            pencilBirds: 1,
                            immediateRender: !1,
                            duration: .5,
                            ease: "power1.in"
                        }, "2.5"),
                        e.toggleTransition.toPencilTimeline.fromTo(e.toggleTransition.progresses, {
                            passes: 0
                        }, {
                            passes: 1,
                            immediateRender: !1,
                            duration: 3,
                            ease: "power1.out"
                        }, "0")
                    }
                }
            }, {
                key: "setContentTransition",
                value: function() {
                    var e = this;
                    this.contentTransition = {},
                    this.contentTransition.ended = !1,
                    this.contentTransition.progress = 0,
                    this.contentTransition.targetProgress = 0,
                    this.contentTransition.oldProgress = 0,
                    this.contentTransition.changedRecently = !1,
                    this.contentTransition.changedRecentlyTimeout = null,
                    this.contentTransition.addToProgress = function(t) {
                        var i = e.contentTransition.targetProgress + t;
                        i < 0 && (i = 0),
                        i > 1 && (i = 1),
                        i !== e.contentTransition.targetProgress && (e.contentTransition.targetProgress = i,
                        e.contentTransition.changedRecently = !0,
                        e.contentTransition.changedRecentlyTimeout && window.clearTimeout(e.contentTransition.changedRecentlyTimeout),
                        e.contentTransition.changedRecentlyTimeout = window.setTimeout((function() {
                            e.contentTransition.changedRecently = !1,
                            e.contentTransition.changedRecentlyTimeout = null
                        }
                        ), 350))
                    }
                    ,
                    this.contentTransition.updateTimeline = function() {
                        e.contentTransition.timeline && (e.contentTransition.timeline.clear(),
                        e.contentTransition.timeline.kill(),
                        e.contentTransition.timeline = null),
                        e.contentTransition.timeline = new r["a"].timeline({
                            paused: !0
                        }),
                        e.particlesVillage.fieldParticles.flowField.map.reset(),
                        e.contentTransition.timeline.add(r["a"].to(e.particlesVillage.fieldParticles.flowField.map.material.uniforms.uStrengthOffset, {
                            value: 1.5,
                            duration: 1.5
                        }), .5),
                        e.contentTransition.timeline.add(r["a"].to(e.particlesVillage.fieldParticles.flowField.map.material.uniforms.uLifeSpeed, {
                            value: .001,
                            duration: .5
                        }), .5),
                        e.contentTransition.timeline.add(r["a"].to(e.particlesVillage.fieldParticles.flowField.map.material.uniforms.uTurbulencesDirection.value, {
                            y: 5,
                            duration: 1.5
                        }), .5),
                        e.contentTransition.timeline.add(r["a"].to(e.particlesVillage.fieldParticles.material.uniforms.uLavaElevation, {
                            value: 5,
                            duration: 2
                        }), 0),
                        e.contentTransition.timeline.add(r["a"].to(e.camera.dive, {
                            value: 1,
                            duration: 3,
                            ease: "power1.out"
                        }), 0),
                        e.contentTransition.timeline.add(r["a"].to(e.fields.current.title.material.uniforms.uRevealProgress, {
                            value: 0,
                            duration: 3
                        }), 0),
                        e.contentTransition.timeline.add(r["a"].to(e.fields.current.subTitle.material.uniforms.uRevealProgress, {
                            value: 0,
                            duration: 3
                        }), 0),
                        e.contentTransition.timeline.add(r["a"].to(e.fields.current.border.material.uniforms.uRevealProgress, {
                            value: 0,
                            duration: 2
                        }), 1)
                    }
                    ,
                    this.time.on("tick", (function() {
                        if (e.active && e.playing && ("field" === e.mode || "content" === e.mode) && e.contentTransition.timeline) {
                            e.contentTransition.progress += (e.contentTransition.targetProgress - e.contentTransition.progress) * e.time.delta * .02,
                            e.interfaces.items.scrollButton.setProgress(e.contentTransition.targetProgress);
                            var t = Number(e.contentTransition.progress.toFixed(4));
                            t !== e.contentTransition.oldProgress && (e.contentTransition.timeline.progress(t),
                            e.contentTransition.oldProgress = t),
                            !e.contentTransition.ended && e.contentTransition.targetProgress > .99 && (e.contentTransition.ended = !0,
                            e.contentTransition.targetProgress = 1,
                            e.goContent(!0)),
                            e.contentTransition.ended || (e.contentTransition.targetProgress *= 1 - e.time.delta / 16 * .01)
                        }
                    }
                    )),
                    this.debug && this.debugFolder.add(this.contentTransition, "progress").min(0).max(1).step(.001).name("contentTransitionProgress")
                }
            }, {
                key: "setMap",
                value: function() {
                    var e = this;
                    this.map = {},
                    this.map.visible = !1,
                    this.map.zoomLimit = .25,
                    this.map.show = function() {
                        e.map.visible || (e.sounds.play("goMap"),
                        r["a"].to(e.cursor.material.uniforms.uMainProgress, {
                            value: 1,
                            duration: .5
                        }),
                        e.interfaces.items.map.show(),
                        e.interfaces.items.mapButton.hide(),
                        r["a"].delayedCall(.4, (function() {
                            e.map.visible && (e.interfaces.items.mapTitle.show(),
                            e.pointer.fieldHovered || e.interfaces.items.preview.show())
                        }
                        )),
                        e.breakpoints.currentIndex <= 2 && r["a"].delayedCall(.8, (function() {
                            e.map.visible && e.interfaces.items.nav.show()
                        }
                        )),
                        e.map.visible = !0,
                        e.autoplay.interact())
                    }
                    ,
                    this.map.hide = function() {
                        e.map.visible && (e.sounds.pause("goMap"),
                        e.interfaces.items.map.hide(),
                        e.interfaces.items.mapTitle.hide(),
                        e.interfaces.items.preview.hide(),
                        e.interfaces.items.mapButton.show(),
                        e.map.visible = !1)
                    }
                    ,
                    this.time.on("tick", (function() {
                        e.active && e.playing && "free" === e.mode && (e.camera.zoom.value < e.map.zoomLimit ? e.map.show() : e.map.hide())
                    }
                    ))
                }
            }, {
                key: "setAutoplay",
                value: function() {
                    var e = this;
                    this.autoplay = {},
                    this.autoplay.active = !1,
                    this.autoplay.running = !1,
                    this.autoplay.showNavTimeout = null,
                    this.autoplay.startTimeout = null,
                    this.autoplay.nextTimeout = null,
                    this.autoplay.startDelay = 6.5,
                    this.autoplay.nextDelay = 9,
                    this.autoplay.interact = function(t) {
                        if (e.autoplay.startTimeout && (e.autoplay.startTimeout.kill(),
                        e.autoplay.startTimeout = null),
                        e.autoplay.nextTimeout && (e.autoplay.nextTimeout.kill(),
                        e.autoplay.nextTimeout = null),
                        e.autoplay.running && (e.autoplay.running = !1),
                        e.active && e.autoplay.active && "free" === e.mode && !e.map.visible) {
                            e.cursor.setMode("free");
                            var i = {
                                value: 0
                            };
                            e.autoplay.startTimeout = r["a"].to(i, {
                                value: 1,
                                duration: e.autoplay.startDelay + (t ? 4 : 0),
                                onComplete: function() {
                                    e.autoplay.next()
                                },
                                onUpdate: function() {
                                    var t = 1.35 * (1 - e.autoplay.startTimeout.progress());
                                    t = Math.min(Math.max(t, 0), 1),
                                    e.cursor.material.uniforms.uMainProgress.value += .01 * (t - e.cursor.material.uniforms.uMainProgress.value) * e.time.delta
                                }
                            })
                        }
                    }
                    ,
                    this.autoplay.next = function() {
                        e.active && e.autoplay.active && (e.autoplay.running = !0,
                        e.next(!0),
                        e.autoplay.nextTimeout = r["a"].delayedCall(e.autoplay.nextDelay, e.autoplay.next))
                    }
                }
            }, {
                key: "previous",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
                      , t = this.latestIndex - 1;
                    t < 0 && (t = this.fieldsVillage.items.length - 1),
                    this.goFocus(t, !1, e)
                }
            }, {
                key: "next",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
                      , t = this.latestIndex + 1;
                    t > this.fieldsVillage.items.length - 1 && (t = 0),
                    this.goFocus(t, !1, e)
                }
            }, {
                key: "setKeyboard",
                value: function() {
                    var e = this;
                    this.keyboard = {},
                    this.keyboard.keyDownEvent = function(t) {
                        e.active && e.playing && ("Escape" === t.key ? "field" === e.mode ? e.leaveField() : "focus" === e.mode ? e.leaveFocus() : "field" === e.mode && e.leaveContent() : "Enter" === t.key && ("focus" === e.mode ? e.goField() : "field" === e.mode && e.goContent(!1)))
                    }
                    ,
                    window.addEventListener("keydown", this.keyboard.keyDownEvent)
                }
            }, {
                key: "setWheel",
                value: function() {
                    var e = this;
                    this.wheel = {},
                    this.wheel.wheelEvent = function(t) {
                        if (e.active && e.playing && (t.preventDefault(),
                        e.canNavigate)) {
                            var i = St()(t);
                            "free" === e.mode ? (e.autoplay.interact(),
                            e.camera.zoom.value -= i.pixelY * e.camera.zoom.speed,
                            e.camera.zoom.value = Math.min(Math.max(e.camera.zoom.value, 0), 1)) : "focus" === e.mode ? i.pixelY > 0 ? e.goField() : i.pixelY < 0 && e.leaveFocus() : "field" === e.mode && (i.pixelY < 0 && e.contentTransition.progress < .04 ? e.contentTransition.changedRecently || e.leaveField() : e.contentTransition.addToProgress(4e-4 * i.pixelY))
                        }
                    }
                    ,
                    document.addEventListener("mousewheel", this.wheel.wheelEvent, {
                        passive: !1
                    }),
                    document.addEventListener("wheel", this.wheel.wheelEvent, {
                        passive: !1
                    })
                }
            }, {
                key: "setPointer",
                value: function() {
                    var e = this;
                    this.pointer = {},
                    this.pointer.x = 0,
                    this.pointer.y = 0,
                    this.pointer.normalized = {},
                    this.pointer.normalized.x = 0,
                    this.pointer.normalized.y = 0,
                    this.pointer.raycaster = new q["vb"],
                    this.pointer.origin = {},
                    this.pointer.origin.x = 0,
                    this.pointer.origin.y = 0,
                    this.pointer.needsUpdate = !1,
                    this.pointer.fieldHovered = null,
                    this.pointer.placeHovered = null,
                    this.pointer.nextVillageHovered = null,
                    this.pointer.navNextVillageHovered = null,
                    this.pointer.previewHovered = null,
                    this.pointer.mapButtonHovered = null,
                    this.pointer.menuButtonHovered = null,
                    this.pointer.soundButtonHovered = null,
                    this.pointer.scrollButtonHovered = null,
                    this.pointer.previousButtonHovered = null,
                    this.pointer.nextButtonHovered = null,
                    this.pointer.click = function() {
                        e.pointer.scrollButtonHovered ? "focus" === e.mode ? e.goField() : "field" === e.mode && e.goContent() : e.pointer.fieldHovered ? e.pointer.fieldHovered.click() : e.pointer.placeHovered ? e.pointer.placeHovered.click() : e.pointer.nextVillageHovered || e.pointer.previewHovered || e.pointer.navNextVillageHovered ? e.trigger("nextVillageClick") : e.pointer.mapButtonHovered ? "free" === e.mode ? r["a"].to(e.camera.zoom, {
                            value: 0,
                            duration: 2,
                            ease: "power1.inOut"
                        }) : "focus" === e.mode ? (e.camera.zoom.value = 0,
                        e.leaveFocus()) : "field" === e.mode && (e.camera.zoom.value = 0,
                        e.leaveField(!0),
                        r["a"].delayedCall(3, (function() {
                            e.leaveFocus()
                        }
                        ))) : e.pointer.menuButtonHovered ? e.trigger("goMenu") : e.pointer.soundButtonHovered ? e.sounds.toggle(!0) : e.pointer.previousButtonHovered ? (e.pointer.previousButtonHovered = !1,
                        e.pointer.nextButtonHovered = !1,
                        e.previous()) : e.pointer.nextButtonHovered ? (e.pointer.previousButtonHovered = !1,
                        e.pointer.nextButtonHovered = !1,
                        e.next()) : "focus" === e.mode && e.leaveFocus()
                    }
                    ,
                    this.pointer.mouseDownEvent = function(t) {
                        e.active && e.playing && (e.pointer.origin.x = t.clientX,
                        e.pointer.origin.y = t.clientY,
                        "grab" === e.domElement.style.cursor && (e.domElement.style.cursor = "grabbing"),
                        e.camera.drag.start(t.clientX, t.clientY),
                        "free" === e.mode && (e.autoplay.interact(),
                        e.map.visible || e.interfaces.items.nav.hide()))
                    }
                    ,
                    this.pointer.mouseMoveEvent = function(t) {
                        if (e.active && e.playing && e.canNavigate)
                            if (e.camera.drag.move(t.clientX, t.clientY),
                            e.camera.drag.dragging) {
                                if ("free" === e.mode)
                                    e.autoplay.interact();
                                else if ("focus" === e.mode) {
                                    var i = Math.hypot(e.pointer.origin.x - t.clientX, e.pointer.origin.y - t.clientY);
                                    i >= 20 && e.leaveFocus(!0)
                                }
                            } else
                                e.pointer.x = t.clientX,
                                e.pointer.y = t.clientY,
                                e.pointer.needsUpdate = !0
                    }
                    ,
                    this.pointer.mouseUpEvent = function(t) {
                        if (e.active && e.playing && e.canNavigate) {
                            e.camera.drag.end(),
                            "free" === e.mode && e.interfaces.items.nav.show(3.5);
                            var i = Math.hypot(e.pointer.origin.x - t.clientX, e.pointer.origin.y - t.clientY);
                            i < 20 && e.pointer.click(),
                            e.pointer.needsUpdate = !0
                        }
                    }
                    ,
                    this.domElement.addEventListener("mousedown", this.pointer.mouseDownEvent),
                    window.addEventListener("mousemove", this.pointer.mouseMoveEvent),
                    window.addEventListener("mouseup", this.pointer.mouseUpEvent),
                    this.pointer.touch = {},
                    this.pointer.touch.pinchDistance = 0,
                    this.pointer.touch.pinchSensitivity = 1.5,
                    this.pointer.touch.distance = 0,
                    this.pointer.touch.distanceX = 0,
                    this.pointer.touch.distanceY = 0,
                    this.pointer.touch.deltaX = 0,
                    this.pointer.touch.deltaY = 0,
                    this.pointer.touchStartEvent = function(t) {
                        if (e.active && e.playing) {
                            t.preventDefault();
                            var i = t.touches[0];
                            if (e.camera.drag.start(i.clientX, i.clientY),
                            e.pointer.origin.x = i.clientX,
                            e.pointer.origin.y = i.clientY,
                            e.pointer.x = i.clientX,
                            e.pointer.y = i.clientY,
                            e.pointer.needsUpdate = !0,
                            e.pointer.touch.distance = 0,
                            e.pointer.touch.distanceX = 0,
                            e.pointer.touch.distanceY = 0,
                            e.pointer.touch.deltaX = 0,
                            e.pointer.touch.deltaY = 0,
                            t.touches.length > 1) {
                                var a = t.touches[1];
                                e.pointer.touch.pinchDistance = Math.hypot(i.clientX - a.clientX, i.clientY - a.clientY)
                            }
                            "free" === e.mode && e.autoplay.interact()
                        }
                    }
                    ,
                    this.pointer.touchMoveEvent = function(t) {
                        if (e.active && e.playing && e.canNavigate) {
                            t.preventDefault();
                            var i = t.touches[0];
                            if (1 === t.touches.length) {
                                e.camera.drag.move(i.clientX, i.clientY),
                                e.pointer.x = i.clientX,
                                e.pointer.y = i.clientY,
                                e.pointer.needsUpdate = !0,
                                e.pointer.touch.distance = Math.hypot(e.pointer.origin.x - i.clientX, e.pointer.origin.y - i.clientY);
                                var a = i.clientX - e.pointer.origin.x
                                  , s = i.clientY - e.pointer.origin.y;
                                e.pointer.touch.deltaX = a - e.pointer.touch.distanceX,
                                e.pointer.touch.deltaY = s - e.pointer.touch.distanceY,
                                e.pointer.touch.distanceX = a,
                                e.pointer.touch.distanceY = s,
                                "free" === e.mode ? e.autoplay.interact() : "focus" === e.mode ? e.pointer.touch.distance >= 20 && (Math.abs(e.pointer.touch.distanceY) < e.pointer.touch.distanceX || e.pointer.touch.distanceY > 0) && e.leaveFocus(!0) : "field" === e.mode && e.contentTransition.addToProgress(.002 * -e.pointer.touch.deltaY)
                            } else {
                                var n = t.touches[1]
                                  , r = Math.hypot(i.clientX - n.clientX, i.clientY - n.clientY)
                                  , o = e.pointer.touch.pinchDistance - r;
                                "free" === e.mode && (e.autoplay.interact(),
                                e.camera.zoom.value -= o * e.pointer.touch.pinchSensitivity / e.sizes.viewport.width,
                                e.pointer.touch.pinchDistance = r,
                                e.camera.zoom.value < 0 ? e.camera.zoom.value = 0 : e.camera.zoom.value > 1 && (e.camera.zoom.value = 1))
                            }
                        }
                    }
                    ,
                    this.pointer.touchEndEvent = function(t) {
                        e.active && e.playing && e.canNavigate && (t.preventDefault(),
                        e.camera.drag.end(),
                        e.pointer.touch.distance < 20 ? window.requestAnimationFrame((function() {
                            e.pointer.click()
                        }
                        )) : "focus" === e.mode ? Math.abs(e.pointer.touch.distanceY) > e.pointer.touch.distanceX && e.pointer.touch.distanceY < -60 && e.goField() : "field" === e.mode && Math.abs(e.pointer.touch.distanceY) > e.pointer.touch.distanceX && e.pointer.touch.distanceY > 60 && (e.contentTransition.changedRecently || e.leaveField()))
                    }
                    ,
                    this.domElement.addEventListener("touchstart", this.pointer.touchStartEvent),
                    window.addEventListener("touchmove", this.pointer.touchMoveEvent, {
                        passive: !1
                    }),
                    window.addEventListener("touchend", this.pointer.touchEndEvent),
                    this.time.on("tick", (function() {
                        if (e.active && e.playing && e.pointer.needsUpdate) {
                            e.pointer.needsUpdate = !1,
                            e.pointer.normalized.x = e.pointer.x / e.sizes.viewport.width * 2 - 1,
                            e.pointer.normalized.y = 2 * (1 - e.pointer.y / e.sizes.viewport.height) - 1,
                            e.pointer.raycaster.setFromCamera(e.pointer.normalized, e.camera.instance);
                            var t = e.interfaces.getInteractiveForCoordinates(e.pointer.x, e.pointer.y)
                              , i = t[0];
                            if (i)
                                if ("navNextVillage" === i.type)
                                    e.autoplay.interact(),
                                    e.pointer.navNextVillageHovered = i,
                                    e.interfaces.items.nav.highlight.goIndex(i.index),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide(),
                                    e.pointer.fieldHovered && (e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null);
                                else if ("field" === i.type) {
                                    e.autoplay.interact(),
                                    e.interfaces.items.nav.highlight.goIndex(i.index);
                                    var a = e.fieldsVillage.getFieldByIndex(i.index);
                                    e.pointer.fieldHovered ? a !== e.pointer.fieldHovered && (e.pointer.fieldHovered && e.pointer.fieldHovered.leave(),
                                    a.enter(),
                                    e.pointer.fieldHovered = a) : (a.enter(),
                                    e.pointer.fieldHovered = a,
                                    e.interfaces.items.preview.hide()),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide()
                                } else
                                    "preview" === i.type ? (e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide(),
                                    e.pointer.previewHovered || (e.pointer.previewHovered = !0,
                                    e.pointer.fieldHovered && (e.interfaces.items.nav.highlight.leave(),
                                    e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null))) : "mapButton" === i.type ? (e.autoplay.interact(),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide(),
                                    e.pointer.mapButtonHovered && i === e.pointer.mapButtonHovered || (e.pointer.mapButtonHovered = i),
                                    e.pointer.fieldHovered && (e.interfaces.items.nav.highlight.leave(),
                                    e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null)) : "menuButton" === i.type ? (e.autoplay.interact(),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide(),
                                    e.pointer.menuButtonHovered && i === e.pointer.menuButtonHovered || (e.pointer.menuButtonHovered = i,
                                    e.interfaces.items.menuButton.enter()),
                                    e.pointer.fieldHovered && (e.interfaces.items.nav.highlight.leave(),
                                    e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null)) : "soundButton" === i.type ? (e.autoplay.interact(),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide(),
                                    e.pointer.soundButtonHovered && i === e.pointer.soundButtonHovered || (e.pointer.soundButtonHovered = i),
                                    e.pointer.fieldHovered && (e.interfaces.items.nav.highlight.leave(),
                                    e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null)) : "scrollButton" === i.type ? (e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.cursor.label.hide(),
                                    e.pointer.scrollButtonHovered || (e.pointer.scrollButtonHovered = e.interfaces.items.scrollButton,
                                    e.pointer.scrollButtonHovered.enter())) : "previousButton" === i.type ? (e.domElement.style.cursor = "pointer",
                                    e.pointer.previousButtonHovered && i === e.pointer.previousButtonHovered || (e.pointer.previousButtonHovered = i)) : "nextButton" === i.type && (e.domElement.style.cursor = "pointer",
                                    e.pointer.nextButtonHovered && i === e.pointer.nextButtonHovered || (e.pointer.nextButtonHovered = i));
                            else {
                                if ("free" === e.mode) {
                                    var s = e.pencilVillage.places.testPointer(e.pointer.raycaster)
                                      , n = e.pencilVillage.nextVillage.testPointer(e.pointer.raycaster)
                                      , r = e.fieldsVillage.testPointer(e.pointer.raycaster);
                                    s ? (e.autoplay.interact(),
                                    e.pointer.placeHovered || (e.pointer.placeHovered = s,
                                    e.pointer.placeHovered.enter(),
                                    e.pointer.placeHovered.url && (e.domElement.style.cursor = "pointer"),
                                    e.cursor.hide())) : n ? (e.autoplay.interact(),
                                    e.pointer.nextVillageHovered || (e.pointer.nextVillageHovered = !0,
                                    e.pencilVillage.nextVillage.enter(),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide())) : r ? (e.autoplay.interact(),
                                    e.domElement.style.cursor = "pointer",
                                    e.cursor.hide(),
                                    e.interfaces.items.nav.highlight.goIndex(r.index),
                                    e.pointer.fieldHovered ? r !== e.pointer.fieldHovered && (e.pointer.fieldHovered && e.pointer.fieldHovered.leave(),
                                    r.enter(),
                                    e.pointer.fieldHovered = r) : (r.enter(),
                                    e.pointer.fieldHovered = r,
                                    e.interfaces.items.preview.hide())) : (e.domElement.style.cursor = e.camera.drag.dragging ? "grabbing" : "grab",
                                    e.cursor.show(),
                                    e.pointer.fieldHovered && (e.interfaces.items.nav.highlight.leave(),
                                    e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null,
                                    e.camera.zoom.value < .25 && e.interfaces.items.preview.show()),
                                    e.pointer.nextVillageHovered && (e.pencilVillage.nextVillage.leave(),
                                    e.pointer.nextVillageHovered = null),
                                    e.pointer.placeHovered && (e.pointer.placeHovered.leave(),
                                    e.pointer.placeHovered = null))
                                } else
                                    "focus" === e.mode ? (e.interfaces.items.nav.highlight.goIndex(e.fields.current.index),
                                    e.pointer.fieldHovered && (e.interfaces.items.nav.highlight.leave(),
                                    e.pointer.fieldHovered.leave(),
                                    e.pointer.fieldHovered = null),
                                    e.domElement.style.cursor = e.camera.drag.dragging ? "grabbing" : "grab",
                                    e.cursor.show(),
                                    e.canNavigate && e.cursor.label.show()) : "field" === e.mode && (e.domElement.style.cursor = "default",
                                    e.cursor.show());
                                e.pointer.previewHovered && (e.pointer.previewHovered = !1),
                                e.pointer.navNextVillageHovered && (e.pointer.navNextVillageHovered = !1,
                                e.interfaces.items.nav.highlight.leave()),
                                e.pointer.mapButtonHovered && (e.pointer.mapButtonHovered = !1),
                                e.pointer.menuButtonHovered && (e.interfaces.items.menuButton.leave(),
                                e.pointer.menuButtonHovered = !1),
                                e.pointer.soundButtonHovered && (e.pointer.soundButtonHovered = !1),
                                e.pointer.scrollButtonHovered && (e.pointer.scrollButtonHovered.leave(),
                                e.pointer.scrollButtonHovered = !1),
                                e.pointer.previousButtonHovered && (e.pointer.previousButtonHovered = !1),
                                e.pointer.nextButtonHovered && (e.pointer.nextButtonHovered = !1)
                            }
                        }
                    }
                    ))
                }
            }, {
                key: "goFocus",
                value: function(e) {
                    var t = this
                      , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                      , a = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    if (!this.fields.current || this.fields.current.index !== e)
                        if (this.latestIndex = e,
                        "focus" === this.mode) {
                            a || this.autoplay.interact();
                            var s = this.fields.current;
                            s.setMode("free"),
                            r["a"].delayedCall(1.5, (function() {
                                s.setMode("hidden")
                            }
                            ));
                            var n = this.fieldsVillage.items[e];
                            this.fields.current = n,
                            r["a"].delayedCall(1.5, (function() {
                                n === t.fields.current && t.fields.current.setMode("free")
                            }
                            )),
                            r["a"].delayedCall(2.5, (function() {
                                n === t.fields.current && t.fields.current.setMode("focus")
                            }
                            )),
                            this.interfaces.items.nav.highlight.goIndex(this.fields.current.index),
                            this.interfaces.items.nav.bar.goField(this.fields.current.index, a),
                            this.interfaces.items.arrowButtonLeft.hide(),
                            this.interfaces.items.arrowButtonRight.hide(),
                            this.interfaces.items.anecdote.hide(),
                            this.breakpoints.currentIndex >= 3 && r["a"].delayedCall(2, (function() {
                                "focus" === t.mode && (t.interfaces.items.arrowButtonLeft.show(),
                                t.interfaces.items.arrowButtonRight.show())
                            }
                            )),
                            r["a"].delayedCall(.5, (function() {
                                n === t.fields.current && t.camera.goFocus(t.fields.current)
                            }
                            )),
                            this.interfaces.items.scrollButton.hide(),
                            this.interfaces.items.mapButton.hide(),
                            r["a"].delayedCall(2, (function() {
                                "focus" === t.mode && (t.fields.current.data.hasContent && t.interfaces.items.scrollButton.show(),
                                (t.breakpoints.currentIndex < 5 || !t.fields.current.data.hasContent) && t.interfaces.items.anecdote.show(t.config.texts.villages[t.villageName][t.fields.current.index]),
                                t.interfaces.items.mapButton.show())
                            }
                            )),
                            this.canNavigate = !1,
                            r["a"].delayedCall(2.3, (function() {
                                "focus" === t.mode && (t.canNavigate = !0)
                            }
                            ))
                        } else {
                            this.mode = "focus",
                            a || this.autoplay.interact(),
                            this.cursor.setMode("focus"),
                            r["a"].delayedCall(3, (function() {
                                "focus" === t.mode && (t.config.mobile || t.config.touch || t.cursor.visible) && t.cursor.label.show()
                            }
                            ));
                            var o = this.fieldsVillage.items[e];
                            this.fields.current = o,
                            this.fields.current.highlight.hide(),
                            "free" !== this.fields.current.mode && o === this.fields.current && this.fields.current.setMode("free"),
                            r["a"].delayedCall(1.5, (function() {
                                o === t.fields.current && t.fields.current.setMode("focus")
                            }
                            ));
                            var l, u = Object(L["a"])(this.fieldsVillage.items);
                            try {
                                for (u.s(); !(l = u.n()).done; ) {
                                    var h = l.value;
                                    h !== this.fields.current && h.setMode("hidden")
                                }
                            } catch (p) {
                                u.e(p)
                            } finally {
                                u.f()
                            }
                            var c, d = Object(L["a"])(this.pencilVillage.places.items);
                            try {
                                for (d.s(); !(c = d.n()).done; ) {
                                    var m = c.value;
                                    m.hide()
                                }
                            } catch (p) {
                                d.e(p)
                            } finally {
                                d.f()
                            }
                            this.camera.goFocus(this.fields.current, i),
                            this.pointer.fieldHovered && (this.pointer.fieldHovered.leave(),
                            this.pointer.fieldHovered = null),
                            this.fieldsVillage.interactivesActive = !1,
                            this.map.hide(),
                            r["a"].delayedCall(.3, (function() {
                                "focus" === t.mode && (t.interfaces.items.map.hide(),
                                t.interfaces.items.mapTitle.hide())
                            }
                            )),
                            r["a"].delayedCall(.1, (function() {
                                "focus" === t.mode && (t.interfaces.items.nav.show(),
                                t.interfaces.items.nav.highlight.goIndex(e),
                                t.interfaces.items.nav.bar.goField(e, a))
                            }
                            )),
                            r["a"].delayedCall(2, (function() {
                                "focus" === t.mode && ((t.breakpoints.currentIndex < 5 || !t.fields.current.data.hasContent) && t.interfaces.items.anecdote.show(t.config.texts.villages[t.villageName][t.fields.current.index]),
                                t.fields.current.data.hasContent && t.interfaces.items.scrollButton.show(),
                                t.interfaces.items.mapButton.show(),
                                t.breakpoints.currentIndex >= 3 && (t.interfaces.items.arrowButtonLeft.show(),
                                t.interfaces.items.arrowButtonRight.show()))
                            }
                            )),
                            r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength, {
                                value: 3,
                                duration: 2.5
                            }),
                            r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteOffset, {
                                value: -.6,
                                duration: 2.5
                            }),
                            r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uNoiseStrength, {
                                value: .123,
                                duration: 2.5
                            }),
                            this.canNavigate = !1,
                            r["a"].delayedCall(2.3, (function() {
                                "focus" === t.mode && (t.canNavigate = !0)
                            }
                            ))
                        }
                }
            }, {
                key: "leaveFocus",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.mode = "free",
                    this.cursor.setMode("free"),
                    this.cursor.label.hide(),
                    this.fields.current.setMode("free"),
                    this.fields.current.leave(),
                    this.autoplay.interact();
                    var i, a = Object(L["a"])(this.fieldsVillage.items);
                    try {
                        var s = function() {
                            var t = i.value;
                            t !== e.fields.current && r["a"].delayedCall(2 + .075 * t.getDistanceToCamera(), (function() {
                                "free" === e.mode && t.setMode("free")
                            }
                            ))
                        };
                        for (a.s(); !(i = a.n()).done; )
                            s()
                    } catch (n) {
                        a.e(n)
                    } finally {
                        a.f()
                    }
                    r["a"].delayedCall(2.15, (function() {
                        if ("free" === e.mode) {
                            var t, i = Object(L["a"])(e.pencilVillage.places.items);
                            try {
                                for (i.s(); !(t = i.n()).done; ) {
                                    var a = t.value;
                                    a.show()
                                }
                            } catch (n) {
                                i.e(n)
                            } finally {
                                i.f()
                            }
                        }
                    }
                    )),
                    this.fields.current = null,
                    this.fields.hovered !== this.fields.current && this.fields.hovered.trigger("enter"),
                    this.camera.goFree(t ? 1 : 2),
                    this.fieldsVillage.interactivesActive = !0,
                    this.interfaces.items.nav.interactivesActive = !0,
                    this.interfaces.items.nav.bar.leaveField(),
                    this.interfaces.items.scrollButton.hide(!1),
                    this.interfaces.items.arrowButtonLeft.hide(),
                    this.interfaces.items.arrowButtonRight.hide(),
                    this.interfaces.items.anecdote.hide(),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength, {
                        value: 1.8,
                        duration: 3
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteOffset, {
                        value: -.28,
                        duration: 3
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uNoiseStrength, {
                        value: .123,
                        duration: 2.5
                    }),
                    t || (this.canNavigate = !1,
                    r["a"].delayedCall(2.3, (function() {
                        "free" === e.mode && (e.canNavigate = !0)
                    }
                    )))
                }
            }, {
                key: "goField",
                value: function() {
                    var e = this;
                    this.fields.current && this.fields.current.data.hasContent && (this.mode = "field",
                    this.autoplay.interact(),
                    this.sounds.pause("loopFree"),
                    this.sounds.play("loopField"),
                    r["a"].delayedCall(.95, (function() {
                        "field" === e.mode && e.sounds.play("goField")
                    }
                    )),
                    this.cursor.setMode("focus"),
                    this.cursor.label.hide(),
                    r["a"].delayedCall(3, (function() {
                        e.pencilVillage.deactivate()
                    }
                    )),
                    this.particlesVillage.activate(),
                    r["a"].delayedCall(.5, (function() {
                        "field" === e.mode && e.fields.current.setMode("field")
                    }
                    )),
                    this.toggleTransition.goToParticles(),
                    this.particlesVillage.setForField(this.fields.current),
                    this.contentTransition.updateTimeline(),
                    this.contentTransition.ended = !1,
                    this.contentTransition.progress = 0,
                    this.contentTransition.targetProgress = 0,
                    this.interfaces.items.nav.hide(),
                    this.interfaces.items.arrowButtonLeft.hide(),
                    this.interfaces.items.arrowButtonRight.hide(),
                    this.interfaces.items.anecdote.hide(),
                    r["a"].delayedCall(.6, (function() {
                        "field" === e.mode && e.interfaces.items.scrollButton.goExtended()
                    }
                    )),
                    r["a"].delayedCall(.6, (function() {
                        r["a"].to(e.renderer.passes.composition.compositionPass.uniforms.uPaperStrength, {
                            value: 0,
                            duration: 5,
                            ease: "power1.out"
                        }),
                        r["a"].to(e.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength, {
                            value: 0,
                            duration: 5,
                            ease: "power1.in"
                        }),
                        r["a"].to(e.renderer.passes.composition.compositionPass.uniforms.uNoiseStrength, {
                            value: 0,
                            duration: 5,
                            ease: "power1.inOut"
                        })
                    }
                    )),
                    r["a"].to(this.overlay.material.uniforms.uGlowAlpha, {
                        value: 1,
                        duration: 3
                    }),
                    this.canNavigate = !1,
                    r["a"].delayedCall(3, (function() {
                        "field" === e.mode && (e.canNavigate = !0)
                    }
                    )))
                }
            }, {
                key: "leaveField",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.mode = "focus",
                    this.autoplay.interact(),
                    this.sounds.pause("loopField"),
                    this.sounds.play("loopFree"),
                    r["a"].delayedCall(.95, (function() {
                        "focus" === e.mode && e.sounds.play("leaveField")
                    }
                    )),
                    this.pencilVillage.activate();
                    var i = this.fields.current;
                    r["a"].delayedCall(2.2, (function() {
                        i.setMode("focus"),
                        e.particlesVillage.deactivate()
                    }
                    )),
                    this.toggleTransition.goToPencil(),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uPaperStrength, {
                        value: .25,
                        duration: 5,
                        ease: "power1.in"
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength, {
                        value: 3,
                        duration: 2.5,
                        ease: "power1.out"
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteOffset, {
                        value: -.6,
                        duration: 2.5,
                        ease: "power1.out"
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uNoiseStrength, {
                        value: .123,
                        duration: 5,
                        ease: "power1.inOut"
                    }),
                    r["a"].to(this.overlay.material.uniforms.uGlowAlpha, {
                        value: 0,
                        duration: 1.5,
                        delay: 1.5
                    }),
                    this.breakpoints.currentIndex <= 2 && this.interfaces.items.nav.bar.goField(this.fields.current.index, !1, !0),
                    this.interfaces.items.scrollButton.leaveExtended(),
                    t || (r["a"].delayedCall(1.5, (function() {
                        "focus" === e.mode && (e.interfaces.items.nav.show(),
                        (e.breakpoints.currentIndex < 5 || !e.fields.current.data.hasContent) && e.interfaces.items.anecdote.show(e.config.texts.villages[e.villageName][e.fields.current.index]),
                        e.breakpoints.currentIndex >= 3 && (e.interfaces.items.arrowButtonLeft.show(),
                        e.interfaces.items.arrowButtonRight.show()))
                    }
                    )),
                    this.canNavigate = !1,
                    r["a"].delayedCall(2.2, (function() {
                        "focus" === e.mode && (e.canNavigate = !0)
                    }
                    )))
                }
            }, {
                key: "goContent",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    if (this.fields.current) {
                        this.mode = "content",
                        this.autoplay.interact(),
                        this.toggleTransition.toParticlesTimeline.pause(),
                        this.cursor.hide(.3, !0);
                        var i = function() {
                            e.trigger("goContent", [e.fields.current.index])
                        };
                        t ? (r["a"].killTweensOf(this.particlesVillage.fieldParticles.material.uniforms.uPointSizeAttenuation),
                        r["a"].killTweensOf(this.particlesVillage.terrainPlane.material.uniforms.uAlpha),
                        r["a"].killTweensOf(this.particlesVillage.terrainParticles.terrain.material.uniforms.uPointSize),
                        r["a"].to(this.particlesVillage.fieldParticles.material.uniforms.uPointSizeAttenuation, {
                            value: 1,
                            duration: 2,
                            ease: "power1.out"
                        }),
                        r["a"].to(this.particlesVillage.terrainPlane.material.uniforms.uAlpha, {
                            value: 0,
                            duration: 2,
                            ease: "power2.out"
                        }),
                        r["a"].to(this.particlesVillage.terrainParticles.terrain.material.uniforms.uPointSize, {
                            value: 0,
                            duration: 2.8,
                            ease: "power2.out",
                            onComplete: i
                        }),
                        this.interfaces.items.mapButton.hide(),
                        this.interfaces.items.soundButton.hide(),
                        this.interfaces.items.menuButton.hide(),
                        this.interfaces.items.scrollButton.hide(!0)) : (r["a"].killTweensOf(this.particlesVillage.fieldParticles.material.uniforms.uPointSizeAttenuation),
                        r["a"].killTweensOf(this.particlesVillage.terrainPlane.material.uniforms.uAlpha),
                        r["a"].killTweensOf(this.particlesVillage.terrainParticles.terrain.material.uniforms.uPointSize),
                        r["a"].to(this.contentTransition, {
                            targetProgress: 1,
                            duration: 2
                        }),
                        r["a"].to(this.particlesVillage.fieldParticles.material.uniforms.uPointSizeAttenuation, {
                            value: 1,
                            duration: 1.5,
                            ease: "power1.out",
                            delay: .5
                        }),
                        r["a"].to(this.particlesVillage.fieldParticles.material.uniforms.uPointSize, {
                            value: 0,
                            duration: 1,
                            delay: 1
                        }),
                        r["a"].to(this.particlesVillage.terrainPlane.material.uniforms.uAlpha, {
                            value: 0,
                            duration: 2,
                            ease: "power2.out"
                        }),
                        r["a"].to(this.particlesVillage.terrainParticles.terrain.material.uniforms.uPointSize, {
                            value: 0,
                            duration: 1.5,
                            ease: "power2.out",
                            delay: .8
                        }),
                        r["a"].delayedCall(.3, (function() {
                            e.interfaces.items.scrollButton.hide(!0)
                        }
                        )),
                        r["a"].delayedCall(1, (function() {
                            e.interfaces.items.mapButton.hide(),
                            e.interfaces.items.soundButton.hide(),
                            e.interfaces.items.menuButton.hide()
                        }
                        )),
                        r["a"].delayedCall(2.3, i))
                    }
                }
            }, {
                key: "leaveContent",
                value: function() {
                    this.mode = "field"
                }
            }, {
                key: "goNotFound",
                value: function() {}
            }, {
                key: "activate",
                value: function() {
                    var e = this;
                    this.active = !0,
                    this.canNavigate = !0,
                    this.sounds.play("loopFree"),
                    this.overlay.hide(),
                    this.camera.activate(),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength, {
                        value: 1.8,
                        duration: 3
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uVignetteOffset, {
                        value: -.28,
                        duration: 3
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uPaperStrength, {
                        value: .25,
                        duration: 3,
                        ease: "power1.in"
                    }),
                    r["a"].to(this.renderer.passes.composition.compositionPass.uniforms.uNoiseStrength, {
                        value: .123,
                        duration: 3
                    }),
                    this.contentTransition.timeline && this.contentTransition.timeline.progress(0),
                    this.particlesVillage.reset(),
                    this.fieldsVillage.interactivesActive = !0;
                    var t, i = Object(L["a"])(this.fieldsVillage.items);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value;
                            a.reset()
                        }
                    } catch (s) {
                        i.e(s)
                    } finally {
                        i.f()
                    }
                    this.fields.current = null,
                    this.toggleTransition.reset(),
                    this.interfaces.items.menuButton.show(),
                    this.interfaces.items.scrollButton.reset(),
                    this.autoplay.active = !0,
                    this.pencilVillage.particles.size.value = this.pencilVillage.particles.size.min,
                    null !== this.defaultFieldIndex ? (this.pencilVillage.nextVillage.show(),
                    this.interfaces.items.mapButton.show(),
                    this.interfaces.items.soundButton.show(),
                    r["a"].delayedCall(.1, (function() {
                        e.goFocus(e.defaultFieldIndex, !0),
                        e.defaultFieldIndex = null
                    }
                    )),
                    r["a"].to(this.pencilVillage.particles.size, {
                        duration: 3,
                        value: this.pencilVillage.particles.size.max
                    })) : (this.mode = "intro",
                    this.camera.playIntro((function() {
                        e.mode = "free",
                        e.camera.setMode("free"),
                        e.pencilVillage.nextVillage.show(),
                        e.interfaces.items.mapButton.show(),
                        e.interfaces.items.soundButton.show(),
                        e.cursor.show(),
                        e.interfaces.items.nav.show(3.5),
                        e.autoplay.interact(!0),
                        r["a"].to(e.pencilVillage.particles.size, {
                            duration: 3,
                            value: e.pencilVillage.particles.size.max
                        }),
                        e.fields.hovered && e.fields.hovered !== e.fields.current && e.fields.hovered.trigger("enter");
                        var t, i = Object(L["a"])(e.fieldsVillage.items);
                        try {
                            var a = function() {
                                var i = t.value;
                                "free" === e.mode && r["a"].delayedCall(.075 * i.getDistanceToCamera(), (function() {
                                    "intro" !== e.mode && "free" !== e.mode && e.fields.current !== i || i.setMode("free")
                                }
                                ))
                            };
                            for (i.s(); !(t = i.n()).done; )
                                a()
                        } catch (s) {
                            i.e(s)
                        } finally {
                            i.f()
                        }
                        r["a"].delayedCall(.5, (function() {
                            if ("free" === e.mode) {
                                var t, i = Object(L["a"])(e.pencilVillage.places.items);
                                try {
                                    for (i.s(); !(t = i.n()).done; ) {
                                        var a = t.value;
                                        a.show()
                                    }
                                } catch (s) {
                                    i.e(s)
                                } finally {
                                    i.f()
                                }
                            }
                        }
                        ))
                    }
                    )))
                }
            }, {
                key: "deactivate",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                      , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (this.domElement.style.cursor = "default",
                    this.autoplay.active = !1,
                    this.autoplay.startTimeout && this.autoplay.startTimeout.kill(),
                    this.autoplay.nextTimeout && this.autoplay.nextTimeout.kill(),
                    i) {
                        this.mode = "outro",
                        this.active = !1,
                        this.overlay.show(0),
                        this.camera.deactivate(),
                        this.pencilVillage.nextVillage.hide(0),
                        this.autoplay.startTimeout && this.autoplay.startTimeout.kill(),
                        this.autoplay.nextTimeout && this.autoplay.nextTimeout.kill();
                        var a, s = Object(L["a"])(this.fieldsVillage.items);
                        try {
                            for (s.s(); !(a = s.n()).done; ) {
                                var n = a.value;
                                n.setMode("hidden", !0)
                            }
                        } catch (m) {
                            s.e(m)
                        } finally {
                            s.f()
                        }
                        this.fields.hovered = null;
                        var o, l = Object(L["a"])(this.pencilVillage.places.items);
                        try {
                            for (l.s(); !(o = l.n()).done; ) {
                                var u = o.value;
                                u.hide()
                            }
                        } catch (m) {
                            l.e(m)
                        } finally {
                            l.f()
                        }
                        this.pointer.fieldHovered = null,
                        this.pointer.placeHovered = null,
                        this.pointer.nextVillageHovered = null,
                        this.pointer.previewHovered = null,
                        this.pointer.navNextVillageHovered = null,
                        this.pointer.mapButtonHovered = null,
                        this.pointer.menuButtonHovered && this.interfaces.items.menuButton.leave(),
                        this.pointer.menuButtonHovered = null,
                        this.pointer.soundButtonHovered,
                        this.pointer.soundButtonHovered = null,
                        this.pointer.scrollButtonHovered = null,
                        this.pointer.previousButtonHovered = null,
                        this.pointer.nextButtonHovered = null,
                        this.domElement.style.cursor = "default",
                        this.interfaces.items.nav.hide(0),
                        this.interfaces.items.preview.hide(0),
                        this.interfaces.items.map.hide(0),
                        this.interfaces.items.mapTitle.hide(0),
                        this.interfaces.items.mapButton.hide(0),
                        this.interfaces.items.menuButton.hide(0),
                        this.interfaces.items.scrollButton.hide(!0, !0),
                        this.interfaces.items.arrowButtonLeft.hide(0),
                        this.interfaces.items.arrowButtonRight.hide(0),
                        this.interfaces.items.anecdote.hide(0),
                        t()
                    } else {
                        this.mode = "outro",
                        r["a"].delayedCall(1, (function() {
                            e.overlay.show(2)
                        }
                        )),
                        this.pencilVillage.nextVillage.hide(),
                        this.camera.playOutro((function() {
                            e.active = !1,
                            e.camera.deactivate(),
                            null !== t && t()
                        }
                        ));
                        var h, c = Object(L["a"])(this.fieldsVillage.items);
                        try {
                            for (c.s(); !(h = c.n()).done; ) {
                                var d = h.value;
                                d.setMode("hidden"),
                                d.highlight.hide()
                            }
                        } catch (m) {
                            c.e(m)
                        } finally {
                            c.f()
                        }
                        this.fields.hovered && (r["a"].to(this.fields.hovered.title.material.uniforms.uRevealProgress, {
                            value: 0,
                            duration: 3
                        }),
                        r["a"].to(this.fields.hovered.subTitle.material.uniforms.uRevealProgress, {
                            value: 0,
                            duration: 3
                        })),
                        this.interfaces.items.nav.hide(),
                        this.interfaces.items.preview.hide(),
                        this.interfaces.items.scrollButton.hide(),
                        this.interfaces.items.anecdote.hide(),
                        this.interfaces.items.mapButton.hide(),
                        this.interfaces.items.soundButton.hide(),
                        r["a"].delayedCall(.5, (function() {
                            e.interfaces.items.map.hide(),
                            e.interfaces.items.mapTitle.hide(),
                            e.interfaces.items.menuButton.hide()
                        }
                        ))
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.toggleTransition.toParticlesTimeline.kill(),
                    this.toggleTransition.toPencilTimeline.kill(),
                    this.contentTransition.timeline && this.contentTransition.timeline.kill(),
                    window.removeEventListener("keydown", this.keyboard.keyDownEvent),
                    document.removeEventListener("mousewheel", this.wheel.wheelEvent),
                    document.removeEventListener("wheel", this.wheel.wheelEvent),
                    this.domElement.removeEventListener("mousedown", this.pointer.mouseDownEvent),
                    window.removeEventListener("mousemove", this.pointer.mouseMoveEvent),
                    window.removeEventListener("mouseup", this.pointer.mouseUpEvent),
                    this.domElement.removeEventListener("touchstart", this.pointer.touchStartEvent),
                    window.removeEventListener("touchmove", this.pointer.touchMoveEvent, {
                        passive: !1
                    }),
                    window.removeEventListener("touchend", this.pointer.touchEndEvent)
                }
            }]),
            i
        }(_["a"])
          , Pt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.breakpoints = t.breakpoints,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.sounds = t.sounds,
                this.isDefault = t.isDefault,
                this.defaultFieldIndex = t.defaultFieldIndex,
                this.name = t.name,
                this.title = t.title,
                this.previewImage = t.previewImage,
                this.previewTitle = t.previewTitle,
                this.navNextTitle = t.navNextTitle,
                this.domElement = t.domElement,
                this.notFound = t.notFound,
                this.resources = t.resources,
                this.renderer = t.renderer,
                this.overlay = t.overlay,
                this.cursor = t.cursor,
                this.originalCamera = t.originalCamera,
                this.scene = t.scene,
                this.colors = t.colors,
                this.nextVillageLength = t.nextVillageLength,
                this.nextVillageY = t.nextVillageY,
                this.terrainData1Texture = t.terrainData1Texture,
                this.cameraOptions = t.cameraOptions,
                this.fieldOptions = t.fieldOptions,
                this.placesOptions = t.placesOptions,
                this.showReims = t.showReims,
                this.debug && (this.debugFolder = this.debug.addFolder(this.name)),
                this.active = !1,
                this.playing = !0,
                this.needsUpdate = !0,
                this.restIsSet = !1,
                this.container = new q["fb"],
                this.container.visible = this.active,
                this.container.matrixAutoUpdate = !1,
                this.setInterfaces()
            }
            return Object(O["a"])(e, [{
                key: "setInterfaces",
                value: function() {
                    this.interfaces = new wt({
                        config: this.config,
                        breakpoints: this.breakpoints,
                        fieldOptions: this.fieldOptions,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        sounds: this.sounds,
                        colors: this.colors,
                        scene: this.scene,
                        renderer: this.renderer,
                        isDefault: this.isDefault,
                        title: this.title,
                        previewImage: this.previewImage,
                        previewTitle: this.previewTitle,
                        navNextTitle: this.navNextTitle
                    })
                }
            }, {
                key: "setRest",
                value: function(e) {
                    this.restIsSet = !0,
                    this.fieldsGeometries = e.fieldsGeometries,
                    this.terrainData1Texture = e.terrainData1Texture,
                    this.terrainData2Texture = e.terrainData2Texture,
                    this.terrainData3Texture = e.terrainData3Texture,
                    this.villageInstancedMeshes = e.villageInstancedMeshes,
                    this.streetsModel = e.streetsModel,
                    this.streetsTexture = e.streetsTexture,
                    this.fieldShapesModel = e.fieldShapesModel,
                    this.nextVillageTexture = e.nextVillageTexture,
                    this.setCamera(),
                    this.setFieldsVillage(),
                    this.setPencilVillage(),
                    this.setParticlesVillage(),
                    this.setNavigation();
                    var t, i = Object(L["a"])(this.interfaces.items.all);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a, s = t.value, n = Object(L["a"])(s.meshes);
                            try {
                                for (n.s(); !(a = n.n()).done; ) {
                                    var r = a.value;
                                    this.scene.add(r)
                                }
                            } catch (o) {
                                n.e(o)
                            } finally {
                                n.f()
                            }
                        }
                    } catch (o) {
                        i.e(o)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "setCamera",
                value: function() {
                    this.camera = new fe(Object(K["a"])({
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        scene: this.scene,
                        domElement: this.domElement,
                        originalCamera: this.originalCamera,
                        notFound: this.notFound,
                        resources: this.resources,
                        terrainData2Texture: this.terrainData2Texture
                    }, this.cameraOptions))
                }
            }, {
                key: "setFieldsVillage",
                value: function() {
                    this.fieldsVillage = new pe({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        domElement: this.domElement,
                        resources: this.resources,
                        renderer: this.renderer,
                        container: this.container,
                        camera: this.camera,
                        colors: this.colors,
                        fieldShapesModel: this.fieldShapesModel,
                        fieldOptions: this.fieldOptions
                    })
                }
            }, {
                key: "setPencilVillage",
                value: function() {
                    this.pencilVillage = new Ge({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        domElement: this.domElement,
                        resources: this.resources,
                        renderer: this.renderer,
                        camera: this.camera,
                        scene: this.scene,
                        container: this.container,
                        colors: this.colors,
                        terrainData1Texture: this.terrainData1Texture,
                        terrainData2Texture: this.terrainData2Texture,
                        terrainData3Texture: this.terrainData3Texture,
                        villageInstancedMeshes: this.villageInstancedMeshes,
                        streetsModel: this.streetsModel,
                        streetsTexture: this.streetsTexture,
                        fieldsGeometries: this.fieldsGeometries,
                        fieldShapesModel: this.fieldShapesModel,
                        fields: this.fields,
                        nextVillageLength: this.nextVillageLength,
                        nextVillageY: this.nextVillageY,
                        nextVillageTexture: this.nextVillageTexture,
                        placesOptions: this.placesOptions,
                        showReims: this.showReims
                    })
                }
            }, {
                key: "setParticlesVillage",
                value: function() {
                    this.particlesVillage = new at({
                        config: this.config,
                        debug: this.debugFolder,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        renderer: this.renderer,
                        container: this.container,
                        camera: this.camera,
                        colors: this.colors,
                        fieldsGeometries: this.fieldsGeometries,
                        terrainData1Texture: this.terrainData1Texture,
                        terrainData2Texture: this.terrainData2Texture,
                        terrainData3Texture: this.terrainData3Texture
                    })
                }
            }, {
                key: "setNavigation",
                value: function() {
                    this.navigation = new kt({
                        config: this.config,
                        breakpoints: this.breakpoints,
                        debug: this.debugFolder,
                        time: this.time,
                        sounds: this.sounds,
                        sizes: this.sizes,
                        camera: this.camera,
                        renderer: this.renderer,
                        domElement: this.domElement,
                        defaultFieldIndex: this.defaultFieldIndex,
                        overlay: this.overlay,
                        cursor: this.cursor,
                        interfaces: this.interfaces,
                        fieldsVillage: this.fieldsVillage,
                        pencilVillage: this.pencilVillage,
                        particlesVillage: this.particlesVillage,
                        villageName: this.name
                    })
                }
            }, {
                key: "updatePencilTerrainFallback",
                value: function() {
                    this.fieldsVillage.setForPass("terrain"),
                    this.particlesVillage.setForPass("terrain"),
                    this.pencilVillage.setForPass("terrain"),
                    this.pencilVillage.updateTerrainFallback()
                }
            }, {
                key: "activate",
                value: function() {
                    this.active = !0,
                    this.container.visible = !0,
                    this.fieldsVillage.activate(),
                    this.pencilVillage.activate(),
                    this.navigation.activate(),
                    this.interfaces.activate()
                }
            }, {
                key: "deactivate",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                      , i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    this.navigation.deactivate((function() {
                        e.active = !1,
                        e.container.visible = !1,
                        e.fieldsVillage.deactivate(),
                        e.pencilVillage.deactivate(),
                        e.particlesVillage.deactivate(),
                        e.interfaces.deactivate(),
                        null !== t && t()
                    }
                    ), i)
                }
            }, {
                key: "destroy",
                value: function() {
                    this.interfaces.destroy(),
                    this.camera.destroy(),
                    this.fieldsVillage.destroy(),
                    this.pencilVillage.destroy(),
                    this.particlesVillage.destroy(),
                    this.navigation.destroy()
                }
            }]),
            e
        }()
          , Ct = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.breakpoints = t.breakpoints,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.sounds = t.sounds,
                this.domElement = t.domElement,
                this.defaultVillageName = t.defaultVillageName,
                this.defaultFieldIndex = t.defaultFieldIndex,
                this.notFound = t.notFound,
                this.resources = t.resources,
                this.renderer = t.renderer,
                this.overlay = t.overlay,
                this.cursor = t.cursor,
                this.originalCamera = t.originalCamera,
                this.scene = t.scene,
                this.colors = t.colors,
                this.restIsActive = !1,
                this.setVillages()
            }
            return Object(O["a"])(e, [{
                key: "setVillages",
                value: function() {
                    var e = this;
                    this.villages = {},
                    this.villages.all = [],
                    this.villages.avize = new Pt({
                        config: this.config,
                        breakpoints: this.breakpoints,
                        debug: this.debug,
                        sizes: this.sizes,
                        time: this.time,
                        sounds: this.sounds,
                        isDefault: "avize" === this.defaultVillageName,
                        defaultFieldIndex: this.defaultFieldIndex,
                        name: "avize",
                        title: "Avize et Oger",
                        previewImage: this.resources.items.merfyPreview,
                        previewTitle: "Merfy et Saint Thierry",
                        navNextTitle: "Merfy",
                        domElement: this.domElement,
                        notFound: this.notFound,
                        resources: this.resources,
                        renderer: this.renderer,
                        overlay: this.overlay,
                        cursor: this.cursor,
                        originalCamera: this.originalCamera,
                        scene: this.scene,
                        colors: this.colors,
                        nextVillageLength: 3.9,
                        nextVillageY: .05,
                        terrainData1Texture: this.resources.items.avizeTerrainData1Texture,
                        cameraOptions: {
                            notFoundPosition: {
                                x: 2.97896,
                                y: .15023,
                                z: 2.49551
                            },
                            notFoundRotation: {
                                x: -.1912,
                                y: .76776,
                                z: 1.41354
                            },
                            introPositionStart: {
                                x: 3.5,
                                y: .5,
                                z: -8
                            },
                            introRotationStart: {
                                x: 0,
                                y: Math.PI
                            },
                            introPositionEnd: {
                                x: 2,
                                y: 1.01,
                                z: 3
                            },
                            introRotationEnd: {
                                x: -.47,
                                y: .85
                            },
                            outroPositionEnd: {
                                x: 0,
                                y: .5,
                                z: -8
                            },
                            outroRotationEnd: {
                                x: 0,
                                y: 0
                            },
                            boundingPoints: [{
                                x: 5,
                                y: 5
                            }, {
                                x: 5,
                                y: -5
                            }, {
                                x: -5,
                                y: -5
                            }, {
                                x: -1.5,
                                y: 5
                            }]
                        },
                        fieldOptions: this.config.data.villages.avize.fields,
                        placesOptions: this.config.data.villages.avize.places,
                        showReims: !1
                    }),
                    this.villages.all.push(this.villages.avize),
                    this.scene.add(this.villages.avize.container),
                    this.villages.merfy = new Pt({
                        config: this.config,
                        breakpoints: this.breakpoints,
                        debug: this.debug,
                        sizes: this.sizes,
                        time: this.time,
                        sounds: this.sounds,
                        isDefault: "merfy" === this.defaultVillageName,
                        defaultFieldIndex: this.defaultFieldIndex,
                        name: "merfy",
                        title: "Merfy et Saint Thierry",
                        previewImage: this.resources.items.avizePreview,
                        previewTitle: "Avize et Oger",
                        navNextTitle: "Avize",
                        domElement: this.domElement,
                        notFound: this.notFound,
                        resources: this.resources,
                        renderer: this.renderer,
                        overlay: this.overlay,
                        cursor: this.cursor,
                        originalCamera: this.originalCamera,
                        scene: this.scene,
                        colors: this.colors,
                        nextVillageLength: 5.1,
                        nextVillageY: .07,
                        terrainData1Texture: this.resources.items.merfyTerrainData1Texture,
                        cameraOptions: {
                            notFoundPosition: {
                                x: .55541,
                                y: .131395,
                                z: 2.7667
                            },
                            notFoundRotation: {
                                x: -.052144,
                                y: .756969,
                                z: 0
                            },
                            introPositionStart: {
                                x: 1,
                                y: .5,
                                z: 8
                            },
                            introRotationStart: {
                                x: 0,
                                y: 0
                            },
                            introPositionEnd: {
                                x: 1.7,
                                y: .88,
                                z: 2.2
                            },
                            introRotationEnd: {
                                x: -.47,
                                y: .95
                            },
                            outroPositionEnd: {
                                x: 1,
                                y: .5,
                                z: 8
                            },
                            outroRotationEnd: {
                                x: 0,
                                y: Math.PI
                            },
                            boundingPoints: [{
                                x: 2.5,
                                y: 5
                            }, {
                                x: 5,
                                y: -5
                            }, {
                                x: -5,
                                y: -1
                            }, {
                                x: -4,
                                y: 4
                            }]
                        },
                        fieldOptions: this.config.data.villages.merfy.fields,
                        placesOptions: this.config.data.villages.merfy.places,
                        showReims: !0
                    }),
                    this.villages.all.push(this.villages.merfy),
                    this.scene.add(this.villages.merfy.container),
                    this.villages.go = function(t) {
                        if (!e.villages.current || t !== e.villages.current.name) {
                            var i = e.villages.current
                              , a = e.villages[t];
                            i ? (Q["w"].delayedCall(.3, (function() {
                                e.sounds.play("changeVillage")
                            }
                            )),
                            i.deactivate((function() {
                                a.activate(),
                                e.villages.current = a
                            }
                            ))) : (a.activate(),
                            e.villages.current = a)
                        }
                    }
                }
            }, {
                key: "setRest",
                value: function() {
                    var e = this;
                    this.villages.avize.setRest({
                        fieldsGeometries: this.resources.items.fieldsGeometries,
                        terrainData1Texture: this.resources.items.avizeTerrainData1Texture,
                        terrainData2Texture: this.resources.items.avizeTerrainData2Texture,
                        terrainData3Texture: this.resources.items.avizeTerrainData3Texture,
                        villageInstancedMeshes: this.resources.items.avizeVillageInstancedMeshes,
                        streetsModel: this.resources.items.avizeStreetsModel,
                        streetsTexture: this.resources.items.avizeStreetsTexture,
                        fieldShapesModel: this.resources.items.avizeFieldsModel,
                        nextVillageTexture: this.resources.items.merfyFieldSubTitleTexture
                    }),
                    this.villages.avize.navigation.on("nextVillageClick", (function() {
                        e.villages.go("merfy")
                    }
                    )),
                    this.villages.merfy.setRest({
                        fieldsGeometries: this.resources.items.fieldsGeometries,
                        terrainData1Texture: this.resources.items.merfyTerrainData1Texture,
                        terrainData2Texture: this.resources.items.merfyTerrainData2Texture,
                        terrainData3Texture: this.resources.items.merfyTerrainData3Texture,
                        villageInstancedMeshes: this.resources.items.merfyVillageInstancedMeshes,
                        streetsModel: this.resources.items.merfyStreetsModel,
                        streetsTexture: this.resources.items.merfyStreetsTexture,
                        fieldShapesModel: this.resources.items.merfyFieldsModel,
                        nextVillageTexture: this.resources.items.avizeFieldSubTitleTexture
                    }),
                    this.villages.merfy.navigation.on("nextVillageClick", (function() {
                        e.villages.go("avize")
                    }
                    ))
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    if (this.restIsActive) {
                        if (!this.villages.current)
                            return;
                        this.villages.current.fieldsVillage.setForPass(e),
                        this.villages.current.particlesVillage.setForPass(e),
                        this.villages.current.pencilVillage.setForPass(e),
                        this.villages.current.interfaces.setForPass(e)
                    } else
                        this.villages[this.defaultVillageName].interfaces.setForPass(e)
                }
            }, {
                key: "destroy",
                value: function() {
                    var e, t = Object(L["a"])(this.villages.all);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.destroy()
                        }
                    } catch (a) {
                        t.e(a)
                    } finally {
                        t.f()
                    }
                }
            }]),
            e
        }()
          , zt = i("32d9")
          , Rt = i("93e9")
          , Ft = i("360d")
          , At = "#define GLSLIFY 1\nuniform sampler2D tDiffuse;\nuniform sampler2D tPerlin;\nuniform vec2 resolution;\nuniform float uLineWidth;\n// uniform float uPerlinFrequency;\n// uniform float uPerlinStrength;\nuniform float uTreshold;\n\nuniform sampler2D tPaper;\n// uniform sampler2D tStroke;\nuniform sampler2D tHighlight;\nuniform vec3 uPaperColor;\nuniform vec3 uPencilColor;\nuniform vec3 uHighlightColor;\nuniform float uVignetteStrength;\nuniform float uVignetteOffset;\nuniform float uNoiseStrength;\nuniform float uPencilStrength;\nuniform float uTime;\n// uniform float uDisplacementStrength;\n// uniform float uDisplacementFrequency;\nuniform float uPaperSize;\nuniform float uPaperStrength;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n#define M_PI 3.1415926535897932384626433832795\n\nfloat easeSin(float _value)\n{\n    return sin((_value - 0.5) * M_PI) * 0.5 + 0.5;\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    /**\n     * Base\n     */\n    vec2 uv = vUv;\n\n    // Base\n    vec3 diffuseColor = texture2D(tDiffuse, uv).rgb;\n\n    /**\n     * Outline\n     */\n    vec2 texel = vec2(1.0 / resolution.x, 1.0 / resolution.y);\n    texel *= vec2(uLineWidth * 0.5 + diffuseColor.b * 1.0);\n\n    // Perlin offset\n    // vec2 perlinUv = texture2D(tDiffuse, vUv).gb;\n    // float perlinNoise1 = texture2D(tPerlin, perlinUv * uPerlinFrequency).r - 0.5;\n    // float perlinNoise2 = texture2D(tPerlin, perlinUv * uPerlinFrequency * 3.456).r - 0.5;\n    // texel += vec2(perlinNoise1 + perlinNoise2) * uPerlinStrength * 1.0;\n\n    #ifdef USE_FALLBACK_ALGORITHM\n        /**\n        * Cheap edge detection\n        */\n        vec4 color1 = texture2D(tDiffuse, vUv + texel * vec2(-1, -1));\n        vec4 color2 = texture2D(tDiffuse, vUv + texel * vec2(1, 1));\n        vec4 color3 = texture2D(tDiffuse, vUv + texel * vec2(- 1, 1));\n\n        float outlineStrength = step(0.45, length(color1 - color2) + length(color1 - color3));\n    #else\n        /**\n        * Edge detection\n        */\n        // kernel definition (in glsl matrices are filled in column-major order)\n        const mat3 Gx = mat3(-1, -2, -1, 0, 0, 0, 1, 2, 1); // x direction kernel\n        const mat3 Gy = mat3(-1, 0, 1, -2, 0, 2, -1, 0, 1); // y direction kernel\n\n        // fetch the 3x3 neighbourhood of a fragment\n\n        // first column\n        float tx0y0 = texture2D(tDiffuse, vUv + texel * vec2(-1, -1)).r;\n        float tx0y1 = texture2D(tDiffuse, vUv + texel * vec2(-1,  0)).r;\n        float tx0y2 = texture2D(tDiffuse, vUv + texel * vec2(-1,  1)).r;\n\n        // second column\n        float tx1y0 = texture2D(tDiffuse, vUv + texel * vec2( 0, -1)).r;\n        float tx1y1 = texture2D(tDiffuse, vUv + texel * vec2( 0,  0)).r;\n        float tx1y2 = texture2D(tDiffuse, vUv + texel * vec2( 0,  1)).r;\n\n        // third column\n        float tx2y0 = texture2D(tDiffuse, vUv + texel * vec2( 1, -1)).r;\n        float tx2y1 = texture2D(tDiffuse, vUv + texel * vec2( 1,  0)).r;\n        float tx2y2 = texture2D(tDiffuse, vUv + texel * vec2( 1,  1)).r;\n\n        // gradient value in x direction\n        float valueGx = Gx[0][0] * tx0y0 + Gx[1][0] * tx1y0 + Gx[2][0] * tx2y0 + Gx[0][1] * tx0y1 + Gx[1][1] * tx1y1 + Gx[2][1] * tx2y1 + Gx[0][2] * tx0y2 + Gx[1][2] * tx1y2 + Gx[2][2] * tx2y2;\n\n        // gradient value in y direction\n        float valueGy = Gy[0][0] * tx0y0 + Gy[1][0] * tx1y0 + Gy[2][0] * tx2y0 + Gy[0][1] * tx0y1 + Gy[1][1] * tx1y1 + Gy[2][1] * tx2y1 + Gy[0][2] * tx0y2 + Gy[1][2] * tx1y2 + Gy[2][2] * tx2y2;\n\n        // magnitute of the total gradient\n        float outlineStrength = sqrt((valueGx * valueGx) + (valueGy * valueGy));\n        outlineStrength = mix(0.0, 1.0, outlineStrength * (1.0 + uTreshold) - (uTreshold));\n        // G += step(0.6, G);\n\n    #endif\n\n    /**\n     * Final composition\n     */\n    // Highlight\n    float highlightStrength = texture2D(tHighlight, vUv).r;\n\n    // Pencil color\n    vec3 pencilColor = mix(uPencilColor, uHighlightColor, highlightStrength);\n\n    // Pencil strength\n    float pencilStrength = getPerlinProgress(vUv, tPerlin, uRevealTextureFrequency, uRevealRandomFrequency, uPencilStrength, 0.0);\n\n    // Strokes\n    float strokeStrength = texture2D(tDiffuse, vUv).g;\n    strokeStrength *= pencilStrength;\n    diffuseColor = mix(uPaperColor, pencilColor, strokeStrength);\n\n    // Outline\n    outlineStrength *= pencilStrength;\n    diffuseColor = mix(diffuseColor, pencilColor, clamp(outlineStrength, 0.0, 1.0));\n\n    // Noise\n    diffuseColor += (random2d(vUv * 100.0 + mod(uTime, 100.0)) - 0.5) * uNoiseStrength;\n\n    // Vignette\n    float vignetteStrength = distance(vUv, vec2(0.5, 0.5));\n    vignetteStrength *= uVignetteStrength;\n    vignetteStrength += uVignetteOffset;\n    vignetteStrength = min(max(vignetteStrength, 0.0), 1.0);\n    vignetteStrength = easeSin(vignetteStrength);\n    // vignetteStrength = smoothstep(0.0, 1.0, vignetteStrength);\n    diffuseColor = mix(diffuseColor, uPaperColor, vignetteStrength);\n\n    // Paper\n    vec2 paperUv = vUv * resolution / uPaperSize;\n    float paperStrength = texture2D(tPaper, paperUv).r;\n    paperStrength *= uPaperStrength;\n    paperStrength += 1.0 - uPaperStrength;\n    diffuseColor = mix(uPencilColor, diffuseColor, paperStrength);\n\n    gl_FragColor = vec4(diffuseColor, 1.0);\n    // gl_FragColor = vec4(vec3(outlineStrength), 1.0);\n}\n"
          , Lt = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main()\n{\n    vUv = uv;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"
          , Et = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                tPerlin: {
                    value: null
                },
                resolution: {
                    value: new q["Qb"]
                },
                uLineWidth: {
                    value: 1
                },
                uPerlinFrequency: {
                    value: 1
                },
                uPerlinStrength: {
                    value: .0035
                },
                uTreshold: {
                    value: .2
                },
                tPaper: {
                    type: "t",
                    value: null
                },
                tStroke: {
                    type: "t",
                    value: null
                },
                tHighlight: {
                    type: "t",
                    value: null
                },
                uPaperColor: {
                    type: "v3",
                    value: new q["j"]("#ffffff")
                },
                uPencilColor: {
                    type: "v3",
                    value: new q["j"]("#414141")
                },
                uHighlightColor: {
                    type: "v3",
                    value: new q["j"]("#ff0000")
                },
                uVignetteStrength: {
                    type: "f",
                    value: 2
                },
                uVignetteOffset: {
                    type: "f",
                    value: -.5
                },
                uNoiseStrength: {
                    type: "f",
                    value: .1
                },
                uPencilStrength: {
                    type: "f",
                    value: 1
                },
                uTime: {
                    type: "f",
                    value: 0
                },
                uWidth: {
                    type: "f",
                    value: 0
                },
                uHeight: {
                    type: "f",
                    value: 0
                },
                uDisplacementStrength: {
                    type: "f",
                    value: .015
                },
                uDisplacementFrequency: {
                    type: "f",
                    value: .5
                },
                uPaperStrength: {
                    type: "f",
                    value: null
                },
                uPaperSize: {
                    type: "f",
                    value: null
                },
                uRevealTextureFrequency: {
                    value: null
                },
                uRevealRandomFrequency: {
                    value: null
                }
            },
            vertexShader: Lt,
            fragmentShader: At
        }
          , Mt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.resources = t.resources,
                this.$canvas = t.$canvas,
                this.scene = t.scene,
                this.originalCamera = t.originalCamera,
                this.colors = t.colors,
                this.setInstance(),
                this.setPasses()
            }
            return Object(O["a"])(e, [{
                key: "setInstance",
                value: function() {
                    var e = this;
                    this.instance = new q["Vb"]({
                        canvas: this.$canvas,
                        alpha: !0,
                        preserveDrawingBuffer: !0,
                        powerPreference: "high-performance"
                    }),
                    this.instance.sortObjects = !1,
                    this.instance.setClearColor(this.colors.paper.three, 1),
                    this.instance.shadowMap.enabled = !1,
                    this.instance.shadowMap.type = q["hb"],
                    this.instance.shadowMap.autoUpdate = !1,
                    this.instance.setPixelRatio(this.config.pixelRatio),
                    this.instance.setSize(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.instance.physicallyCorrectLights = !0,
                    this.instance.setScissor(0, 0, 800, 600),
                    this.sizes.on("resize", (function() {
                        e.instance.setSize(e.sizes.viewport.width, e.sizes.viewport.height)
                    }
                    ))
                }
            }, {
                key: "setPasses",
                value: function() {
                    var e = this;
                    if (this.passes = {},
                    this.passes.highlight = {},
                    this.passes.highlight.renderTarget = new q["Ub"](.2 * this.sizes.viewport.width,.2 * this.sizes.viewport.height,{
                        minFilter: q["J"],
                        magFilter: q["J"],
                        format: q["wb"],
                        stencilBuffer: !1
                    }),
                    this.passes.composition = {},
                    this.passes.composition.noiseAnimated = !1,
                    this.passes.composition.displacementProgress = 1,
                    this.passes.composition.displacementStrength = .008,
                    this.passes.composition.composer = new zt["a"](this.instance),
                    this.passes.composition.renderPass = new Rt["a"](this.scene,this.originalCamera),
                    this.passes.composition.compositionPass = new Ft["a"](Et),
                    this.passes.composition.compositionPass.uniforms.tPerlin.value = this.resources.items.perlinTexture,
                    this.passes.composition.compositionPass.uniforms.resolution.value.x = this.sizes.viewport.width,
                    this.passes.composition.compositionPass.uniforms.resolution.value.y = this.sizes.viewport.height,
                    this.passes.composition.compositionPass.uniforms.uLineWidth.value = .5,
                    this.passes.composition.compositionPass.uniforms.uTreshold.value = .5,
                    this.passes.composition.compositionPass.uniforms.uPerlinFrequency.value = .5,
                    this.passes.composition.compositionPass.uniforms.uPerlinStrength.value = .002,
                    this.passes.composition.compositionPass.uniforms.tPaper.value = this.resources.items.paperTexture,
                    this.passes.composition.compositionPass.uniforms.tHighlight.value = this.passes.highlight.renderTarget.texture,
                    this.passes.composition.compositionPass.uniforms.uVignetteStrength.value = 0,
                    this.passes.composition.compositionPass.uniforms.uVignetteOffset.value = -.25,
                    this.passes.composition.compositionPass.uniforms.uPaperColor.value = this.colors.paper.three,
                    this.passes.composition.compositionPass.uniforms.uPencilColor.value = this.colors.pencil.three,
                    this.passes.composition.compositionPass.uniforms.uHighlightColor.value = this.colors.highlight.three,
                    this.passes.composition.compositionPass.uniforms.uNoiseStrength.value = 0,
                    this.passes.composition.compositionPass.uniforms.uPencilStrength.value = 1,
                    this.passes.composition.compositionPass.uniforms.uTime.value = 0,
                    this.passes.composition.compositionPass.uniforms.uDisplacementStrength.value = this.passes.composition.displacementStrength,
                    this.passes.composition.compositionPass.uniforms.uDisplacementFrequency.value = 32,
                    this.passes.composition.compositionPass.uniforms.uPaperSize.value = 256,
                    this.passes.composition.compositionPass.uniforms.uPaperStrength.value = 0,
                    this.passes.composition.compositionPass.uniforms.uRevealTextureFrequency.value = new q["Qb"](2,6),
                    this.passes.composition.compositionPass.uniforms.uRevealRandomFrequency.value = new q["Qb"](3.8,10),
                    this.passes.composition.compositionPass.renderToScreen = !0,
                    this.passes.composition.composer.addPass(this.passes.composition.renderPass),
                    this.passes.composition.composer.addPass(this.passes.composition.compositionPass),
                    this.passes.composition.composer.setSize(this.sizes.viewport.width, this.sizes.viewport.height),
                    this.passes.composition.composer.setPixelRatio(this.instance.getPixelRatio()),
                    this.passes.mode = "all",
                    this.passes.updatePasses = function() {
                        switch (e.passes.mode) {
                        case "highlight":
                            e.passes.composition.composer.renderToScreen = !1,
                            e.passes.composition.compositionPass.enabled = !1;
                            break;
                        case "data":
                            e.passes.composition.composer.renderToScreen = !0,
                            e.passes.composition.compositionPass.enabled = !1;
                            break;
                        case "composition":
                            e.passes.composition.composer.renderToScreen = !0,
                            e.passes.composition.compositionPass.enabled = !0;
                            break;
                        case "overlay":
                            e.passes.composition.composer.renderToScreen = !1,
                            e.passes.composition.compositionPass.enabled = !0;
                            break;
                        case "all":
                            e.passes.composition.composer.renderToScreen = !0,
                            e.passes.composition.compositionPass.enabled = !0;
                            break
                        }
                    }
                    ,
                    this.passes.updatePasses(),
                    this.sizes.on("resize", (function() {
                        e.passes.highlight.renderTarget.setSize(.2 * e.sizes.viewport.width, .2 * e.sizes.viewport.height),
                        e.passes.composition.compositionPass.uniforms.resolution.value.x = e.sizes.viewport.width,
                        e.passes.composition.compositionPass.uniforms.resolution.value.y = e.sizes.viewport.height,
                        e.passes.composition.composer.setSize(e.sizes.viewport.width, e.sizes.viewport.height)
                    }
                    )),
                    this.debug) {
                        var t = this.debug.addFolder("postprocess");
                        t.add(this.passes, "mode", ["highlight", "data", "composition", "overlay", "all"]).name("mode").onChange(this.passes.updatePasses),
                        t.add(this.passes.composition.compositionPass.uniforms.uVignetteStrength, "value").min(0).max(5).step(.001).name("vignette strength"),
                        t.add(this.passes.composition.compositionPass.uniforms.uVignetteOffset, "value").min(-5).max(5).step(.001).name("vignette offset"),
                        t.add(this.passes.composition.compositionPass.uniforms.uNoiseStrength, "value").min(0).max(1).step(.001).name("noise strength"),
                        t.add(this.passes.composition, "noiseAnimated").name("noise animated"),
                        t.add(this.passes.composition.compositionPass.uniforms.uLineWidth, "value").min(1).max(10).step(.001).name("stroke line width"),
                        t.add(this.passes.composition.compositionPass.uniforms.uPerlinFrequency, "value").min(.001).max(10).step(.001).name("stroke perlin frequency"),
                        t.add(this.passes.composition.compositionPass.uniforms.uPerlinStrength, "value").min(0).max(.01).step(1e-5).name("stroke perlin strength"),
                        t.add(this.passes.composition.compositionPass.uniforms.uTreshold, "value").min(0).max(1).step(.001).name("stroke line treshold"),
                        t.add(this.passes.composition, "displacementStrength").min(0).max(.1).step(1e-4).name("displacement strength"),
                        t.add(this.passes.composition.compositionPass.uniforms.uDisplacementFrequency, "value").min(0).max(50).step(.01).name("displacement frequency"),
                        t.add(this.passes.composition.compositionPass.uniforms.uPaperSize, "value").step(1).min(1).max(512).name("paper size"),
                        t.add(this.passes.composition.compositionPass.uniforms.uPaperStrength, "value").step(.001).min(0).max(1).name("paper strength")
                    }
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                        this.instance.autoClearColor = !0,
                        "highlight" !== this.passes.mode && this.instance.setRenderTarget(this.passes.highlight.renderTarget),
                        this.instance.setClearColor(0, 1),
                        this.instance.render(this.scene, this.originalCamera);
                        break;
                    case "composition":
                        this.instance.autoClearColor = !0,
                        this.instance.setClearColor(0, 1),
                        this.passes.composition.composer.render();
                        break;
                    case "overlay":
                        this.instance.setRenderTarget(null),
                        this.instance.autoClearColor = "overlay" === this.passes.mode,
                        this.instance.render(this.scene, this.originalCamera);
                        break
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.instance.dispose(),
                    this.passes.highlight.renderTarget.dispose(),
                    this.passes.composition.composer.renderTarget1.dispose(),
                    this.passes.composition.composer.renderTarget2.dispose()
                }
            }]),
            e
        }()
          , Ot = (i("fb6a"),
        i("1e5c"))
          , Bt = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                return Object(M["a"])(this, i),
                a = t.call(this),
                a.config = e.config,
                a.debug = e.debug,
                a.resources = e.resources,
                a.muted = null === e.muted ? null !== window.localStorage.getItem("muted") : e.muted,
                a.items = {},
                a.pendings = [],
                a.masterVolume = a.muted ? 0 : 1,
                a.ready = !1,
                Ot["Howler"].volume(a.masterVolume),
                a.testAudio = new Audio,
                a.testAudio.src = "data:audio/mpeg;base64,/+MYxAAEaAIEeUAQAgBgNgP/////KQQ/////Lvrg+lcWYHgtjadzsbTq+yREu495tq9c6v/7vt/of7mna9v6/btUnU17Jun9/+MYxCkT26KW+YGBAj9v6vUh+zab//v/96C3/pu6H+pv//r/ycIIP4pcWWTRBBBAMXgNdbRaABQAAABRWKwgjQVX0ECmrb///+MYxBQSM0sWWYI4A++Z/////////////0rOZ3MP//7H44QEgxgdvRVMXHZseL//540B4JAvMPEgaA4/0nHjxLhRgAoAYAgA/+MYxAYIAAJfGYEQAMAJAIAQMAwX936/q/tWtv/2f/+v//6v/+7qTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV",
                a.testAudio.volume = 0,
                a.testAudio.play().then((function() {
                    a.canPlay = !0,
                    a.ready = !0,
                    a.trigger("unmute"),
                    console.log("sounds:", "can play")
                }
                )).catch((function() {
                    a.canPlay = !1,
                    a.ready = !0,
                    console.log("sounds:", "cannot play"),
                    window.addEventListener("mousedown", (function() {
                        a.canPlay = !0
                    }
                    ), {
                        once: !0
                    })
                }
                )),
                window.setInterval((function() {
                    a.tryPendings()
                }
                ), 2e3),
                a
            }
            return Object(O["a"])(i, [{
                key: "getOptions",
                value: function(e) {
                    var t = {};
                    switch (e) {
                    case "leaveIntro":
                        t.volume = .9,
                        t.fadeOut = 2;
                        break;
                    case "loopFree":
                        t.volume = .4,
                        t.loop = !0,
                        t.fadeIn = 2,
                        t.fadeOut = 3,
                        t.pending = !0;
                        break;
                    case "loopField":
                        t.volume = .4,
                        t.loop = !0,
                        t.fadeIn = 2,
                        t.fadeOut = 3,
                        t.pending = !0;
                        break;
                    case "leaveField":
                        t.volume = 1,
                        t.fadeOut = 2;
                        break;
                    case "goField":
                        t.volume = 1,
                        t.fadeOut = 2;
                        break;
                    case "changeVillage":
                        t.volume = 1,
                        t.fadeOut = 2;
                        break;
                    case "goMap":
                        t.volume = .55,
                        t.fadeOut = 1;
                        break
                    }
                    return t
                }
            }, {
                key: "get",
                value: function(e) {
                    var t = this.items[e];
                    if ("undefined" !== typeof t)
                        return t;
                    var i = "sound".concat(e.charAt(0).toUpperCase() + e.slice(1))
                      , a = this.resources.items[i];
                    if (this.resources.items[i]) {
                        var s = this.getOptions(e)
                          , n = new Ot["Howl"](Object(K["a"])({
                            src: [a.src]
                        }, s));
                        return n.on("play", (function() {
                            s.fadeIn ? n.fade(0, s.volume, 1e3 * s.fadeIn) : n.volume(s.volume)
                        }
                        )),
                        n.on("fade", (function() {
                            0 === n.volume() && n.stop()
                        }
                        )),
                        this.items[e] = n,
                        n
                    }
                    return !1
                }
            }, {
                key: "play",
                value: function(e) {
                    var t = this.getOptions(e)
                      , i = this.get(e);
                    return "loopFree" === e && (window.sound = i),
                    i ? i.playing() ? void 0 : (i.play(),
                    i) : (t.pending && !this.pendings.includes(e) && this.pendings.push(e),
                    !1)
                }
            }, {
                key: "pause",
                value: function(e) {
                    var t = this.getOptions(e)
                      , i = this.get(e);
                    return !(!i || !i.playing()) && (t.fadeOut ? i.fade(t.volume, 0, 1e3 * t.fadeOut) : i.stop(),
                    i)
                }
            }, {
                key: "tryPendings",
                value: function() {
                    var e, t = this, i = Object(L["a"])(this.pendings);
                    try {
                        var a = function() {
                            var i = e.value
                              , a = t.play(i);
                            a && (t.pendings = t.pendings.filter((function(e) {
                                return e !== i
                            }
                            )))
                        };
                        for (i.s(); !(e = i.n()).done; )
                            a()
                    } catch (s) {
                        i.e(s)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "mute",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.muted || (r["a"].killTweensOf(this),
                    r["a"].to(this, {
                        masterVolume: 0,
                        duration: 1.25,
                        ease: "power3.easeOut",
                        onUpdate: function() {
                            Ot["Howler"].volume(e.masterVolume)
                        },
                        onComplete: function() {
                            for (var t in Ot["Howler"].mute(!0),
                            e.items) {
                                var i = e.items[t];
                                i.stop()
                            }
                        }
                    }),
                    this.muted = !0,
                    t && window.localStorage.setItem("muted", "1"),
                    this.trigger("mute"))
                }
            }, {
                key: "unmute",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.muted && (Ot["Howler"].mute(!1),
                    r["a"].killTweensOf(this),
                    r["a"].to(this, {
                        masterVolume: 1,
                        duration: 2,
                        ease: "power3.easeIn",
                        onUpdate: function() {
                            Ot["Howler"].volume(e.masterVolume)
                        }
                    }),
                    this.muted = !1,
                    t && window.localStorage.removeItem("muted"),
                    this.trigger("unmute"))
                }
            }, {
                key: "toggle",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.muted ? this.unmute(e) : this.mute(e)
                }
            }]),
            i
        }(_["a"])
          , It = function() {
            function e(t) {
                var i = this;
                if (Object(M["a"])(this, e),
                this.application = t.application,
                this.debug = t.debug,
                this.config = t.config,
                this.levels = [{
                    pixelRatio: 2,
                    birds: !0,
                    streets: !0,
                    wind: !0,
                    pencilParticles: !0,
                    edgeDetection: !0,
                    outline: !0,
                    strokeLineWidth: .75,
                    strokesOutlineFallback: !1,
                    strokesShadowFallback: !1,
                    particlesFlowField: !this.config.iOS
                }, {
                    pixelRatio: 1.5,
                    birds: !0,
                    streets: !0,
                    wind: !0,
                    pencilParticles: !0,
                    edgeDetection: !0,
                    outline: !0,
                    strokeLineWidth: .75,
                    strokesOutlineFallback: !1,
                    strokesShadowFallback: !1,
                    particlesFlowField: !this.config.iOS
                }, {
                    pixelRatio: 1.5,
                    birds: !1,
                    streets: !1,
                    wind: !0,
                    pencilParticles: !1,
                    edgeDetection: !0,
                    outline: !0,
                    strokeLineWidth: .75,
                    strokesOutlineFallback: !1,
                    strokesShadowFallback: !1,
                    particlesFlowField: !1
                }, {
                    pixelRatio: 1,
                    birds: !1,
                    streets: !1,
                    wind: !1,
                    pencilParticles: !1,
                    edgeDetection: !0,
                    outline: !0,
                    strokeLineWidth: 1,
                    strokesOutlineFallback: !1,
                    strokesShadowFallback: !1,
                    particlesFlowField: !1
                }, {
                    pixelRatio: 1,
                    birds: !1,
                    streets: !1,
                    wind: !1,
                    pencilParticles: !1,
                    edgeDetection: !1,
                    outline: !1,
                    strokeLineWidth: 1,
                    strokesOutlineFallback: !1,
                    strokesShadowFallback: !0,
                    particlesFlowField: !1
                }],
                this.targetFPS = 40,
                this.stable = !1,
                this.running = !1,
                this.qualityLevel = 0,
                this.debug) {
                    var a = this.debug.addFolder("qualityLevel");
                    a.open(),
                    a.add(this, "qualityLevel").min(0).max(this.levels.length - 1).step(1).listen().onChange((function() {
                        i.applyQuality(i.qualityLevel, !0)
                    }
                    ))
                }
            }
            return Object(O["a"])(e, [{
                key: "startTest",
                value: function() {
                    var e = this;
                    this.running ? console.log("quality: already running") : (this.running = !0,
                    this.startTime = Date.now(),
                    this.testDuration = 2e3,
                    this.framesCount = 0,
                    this.biased = document.hidden,
                    document.addEventListener("visibilitychange", (function() {
                        e.running && (console.log("quality: visibility changed"),
                        e.biased = !0)
                    }
                    ), {
                        once: !0
                    }),
                    this.tick())
                }
            }, {
                key: "tick",
                value: function() {
                    var e = this
                      , t = Date.now()
                      , i = t - this.startTime;
                    if (this.framesCount++,
                    i > this.testDuration) {
                        var a = this.framesCount / (i / 1e3);
                        a > this.targetFPS ? this.stabilize() : this.biased ? (console.log("quality: biased => restart"),
                        this.running = !1,
                        this.startTest()) : this.lowerQuality()
                    } else
                        window.requestAnimationFrame((function() {
                            e.tick()
                        }
                        ))
                }
            }, {
                key: "stabilize",
                value: function() {
                    console.log("quality: stabilize"),
                    this.running = !1,
                    this.stable = !0
                }
            }, {
                key: "lowerQuality",
                value: function() {
                    var e = this;
                    if (console.log("quality: lowerQuality"),
                    this.qualityLevel < this.levels.length - 1) {
                        var t = this.qualityLevel + 1;
                        this.applyQuality(t),
                        this.application.config.mobile && t < 3 && (console.log("quality: save ".concat(t)),
                        window.localStorage.setItem("qualityLevel", t)),
                        window.requestAnimationFrame((function() {
                            e.running = !1,
                            e.startTest()
                        }
                        ))
                    }
                }
            }, {
                key: "applyQuality",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (e !== this.qualityLevel || t) {
                        this.qualityLevel = e,
                        this.level = this.levels[this.qualityLevel],
                        console.log("quality: applyQuality", e, this.level),
                        this.application.config.pixelRatio = this.level.pixelRatio,
                        this.application.renderer.instance.setPixelRatio(this.level.pixelRatio),
                        this.application.renderer.passes.composition.composer.setPixelRatio(this.level.pixelRatio),
                        this.application.renderer.passes.composition.compositionPass.uniforms.resolution.value.x = this.application.renderer.sizes.viewport.width,
                        this.application.renderer.passes.composition.compositionPass.uniforms.resolution.value.y = this.application.renderer.sizes.viewport.height,
                        this.application.renderer.passes.composition.compositionPass.uniforms.uLineWidth.value = this.level.strokeLineWidth,
                        this.level.strokesOutlineFallback ? "undefined" === typeof this.application.renderer.passes.composition.compositionPass.material.defines.USE_FALLBACK_ALGORITHM && (this.application.renderer.passes.composition.compositionPass.material.defines.USE_FALLBACK_ALGORITHM = "",
                        this.application.renderer.passes.composition.compositionPass.material.needsUpdate = !0) : "undefined" !== typeof this.application.renderer.passes.composition.compositionPass.material.defines.USE_FALLBACK_ALGORITHM && (delete this.application.renderer.passes.composition.compositionPass.material.defines.USE_FALLBACK_ALGORITHM,
                        this.application.renderer.passes.composition.compositionPass.material.needsUpdate = !0),
                        this.application.renderer.passes.composition.compositionPass.uniforms.uLineWidth.value = this.level.strokeLineWidth;
                        var i, a = Object(L["a"])(this.application.world.villages.all);
                        try {
                            for (a.s(); !(i = a.n()).done; ) {
                                var s, n = i.value, r = Object(L["a"])(n.particlesVillage.terrainParticles.items);
                                try {
                                    for (r.s(); !(s = r.n()).done; ) {
                                        var o = s.value;
                                        o.material.uniforms.uPointSize.value = o.settings.pointSize * this.application.config.pixelRatio
                                    }
                                } catch (c) {
                                    r.e(c)
                                } finally {
                                    r.f()
                                }
                                n.particlesVillage.fieldParticles.material.uniforms.uPointSize.value = n.particlesVillage.fieldParticles.pointSize * this.application.config.pixelRatio * n.particlesVillage.sizes.viewport.height,
                                this.level.particlesFlowField || (n.particlesVillage.fieldParticles.material.uniforms.uPointSize.value *= .5),
                                n.particlesVillage.terrainPlane.material.uniforms.uResolution.value.x = n.particlesVillage.sizes.viewport.width * this.application.config.pixelRatio,
                                n.particlesVillage.terrainPlane.material.uniforms.uResolution.value.y = n.particlesVillage.sizes.viewport.height * this.application.config.pixelRatio,
                                n.interfaces.items.nav.material.uniforms.uHighlightPixelRatio.value = this.application.config.pixelRatio,
                                n.pencilVillage.birds.visible = this.level.birds,
                                n.pencilVillage.streets.visible = this.level.streets,
                                n.pencilVillage.particles.visible = this.level.pencilParticles;
                                var l, u = Object(L["a"])(n.pencilVillage.materials.all);
                                try {
                                    for (u.s(); !(l = u.n()).done; ) {
                                        var h = l.value;
                                        this.level.strokesShadowFallback ? "undefined" === typeof h.defines.USE_STROKES_FALLBACK && (h.defines.USE_STROKES_FALLBACK = "",
                                        h.needsUpdate = !0) : "undefined" !== typeof h.defines.USE_STROKES_FALLBACK && (delete h.defines.USE_STROKES_FALLBACK,
                                        h.needsUpdate = !0)
                                    }
                                } catch (c) {
                                    u.e(c)
                                } finally {
                                    u.f()
                                }
                                this.level.particlesFlowField ? (n.particlesVillage.fieldParticles.flowField.active = !0,
                                "undefined" === typeof n.particlesVillage.fieldParticles.material.defines.USE_FLOWFIELD && (n.particlesVillage.fieldParticles.material.defines.USE_FLOWFIELD = "",
                                delete n.particlesVillage.fieldParticles.material.defines.USE_LAVA,
                                delete n.particlesVillage.fieldParticles.material.defines.USE_POSITION_RANDOMNESS,
                                n.particlesVillage.fieldParticles.material.needsUpdate = !0)) : (n.particlesVillage.fieldParticles.flowField.active = !1,
                                "undefined" !== typeof n.particlesVillage.fieldParticles.material.defines.USE_FLOWFIELD && (delete n.particlesVillage.fieldParticles.material.defines.USE_FLOWFIELD,
                                n.particlesVillage.fieldParticles.material.defines.USE_LAVA = "",
                                n.particlesVillage.fieldParticles.material.defines.USE_POSITION_RANDOMNESS = "",
                                n.particlesVillage.fieldParticles.material.needsUpdate = !0)),
                                this.level.wind ? "undefined" === typeof n.pencilVillage.materials.trees.defines.USE_WIND && (n.pencilVillage.materials.trees.defines.USE_WIND = "",
                                n.pencilVillage.materials.trees.needsUpdate = !0) : "undefined" !== typeof n.pencilVillage.materials.trees.defines.USE_WIND && (delete n.pencilVillage.materials.trees.defines.USE_WIND,
                                n.pencilVillage.materials.trees.needsUpdate = !0)
                            }
                        } catch (c) {
                            a.e(c)
                        } finally {
                            a.f()
                        }
                    }
                }
            }, {
                key: "destroy",
                value: function() {}
            }]),
            e
        }()
          , qt = "precision highp float;\n#define GLSLIFY 1\n\nuniform vec3 uColor;\nuniform float uStrength;\n\nuniform vec2 uGlowPosition;\nuniform float uGlowRadius;\nuniform vec3 uGlowColor;\nuniform float uGlowAlpha;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    // Glow\n    float glowStrength = distance(vUv, uGlowPosition) / uGlowRadius;\n    glowStrength = 1.0 - glowStrength;\n    glowStrength *= uGlowAlpha;\n    glowStrength = clamp(glowStrength, 0.0, 1.0);\n    vec4 glowColor = vec4(uGlowColor, glowStrength);\n\n    // Base color\n    vec4 baseColor = vec4(uColor, uStrength);\n\n    // gl_FragColor = vec4(uColor, uStrength);\n    gl_FragColor = vec4(mix(baseColor.rgb, glowColor.rgb, glowColor.a), max(glowColor.a, baseColor.a));\n}\n"
          , Dt = "#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_Position = vec4(position, 1.0);\n\n    vUv = uv;\n}\n"
          , Vt = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return new q["ub"]({
                transparent: !0,
                uniforms: {
                    uColor: {
                        type: "vec3",
                        value: e.color
                    },
                    uStrength: {
                        type: "f",
                        value: e.strength
                    },
                    uGlowPosition: {
                        type: "v2",
                        value: e.glowPosition
                    },
                    uGlowRadius: {
                        type: "f",
                        value: e.glowRadius
                    },
                    uGlowColor: {
                        type: "v3",
                        value: e.glowColor
                    },
                    uGlowAlpha: {
                        type: "f",
                        value: e.glowAlpha
                    }
                },
                depthTest: !1,
                depthWrite: !1,
                vertexShader: Dt,
                fragmentShader: qt
            })
        }
          , Nt = function() {
            function e(t) {
                var i = this;
                if (Object(M["a"])(this, e),
                this.debug = t.debug,
                this.colors = t.colors,
                this.scene = t.scene,
                this.glowColor = "#ffffe4",
                this.geometry = new q["jb"](2,2),
                this.geometry.deleteAttribute("normal"),
                this.material = new Vt({
                    color: this.colors.paper.three,
                    strength: 0,
                    glowPosition: new q["Qb"](.35,1),
                    glowRadius: .9,
                    glowColor: new q["j"](this.glowColor),
                    glowAlpha: .3
                }),
                this.mesh = new q["T"](this.geometry,this.material),
                this.mesh.frustumCulled = !1,
                this.mesh.matrixAutoUpdate = !1,
                this.scene.add(this.mesh),
                this.debug) {
                    var a = this.debug.addFolder("overlay");
                    a.add(this.material.uniforms.uGlowPosition.value, "x").step(.001).min(-1).max(2).name("glow position x"),
                    a.add(this.material.uniforms.uGlowPosition.value, "y").step(.001).min(-1).max(2).name("glow position y"),
                    a.add(this.material.uniforms.uGlowRadius, "value").step(.001).min(0).max(2).name("glow radius"),
                    a.addColor(this, "glowColor").name("glow color").onChange((function() {
                        i.material.uniforms.uGlowColor.value = new q["j"](i.glowColor)
                    }
                    )),
                    a.add(this.material.uniforms.uGlowAlpha, "value").step(.001).min(0).max(1).name("glow alpha")
                }
            }
            return Object(O["a"])(e, [{
                key: "show",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;
                    r["a"].to(this.material.uniforms.uStrength, {
                        value: 1,
                        duration: e,
                        ease: "power1.in"
                    })
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;
                    r["a"].to(this.material.uniforms.uStrength, {
                        value: 0,
                        duration: e,
                        ease: "power1.out"
                    })
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                    case "composition":
                        this.mesh.visible = !1;
                        break;
                    case "overlay":
                        this.mesh.visible = !0;
                        break
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.geometry.dispose(),
                    this.material.dispose()
                }
            }]),
            e
        }()
          , Ht = "precision highp float;\n#define GLSLIFY 1\n\nuniform vec3 uColor;\nuniform sampler2D uNorthTexture;\nuniform float uMainRadius;\nuniform float uMainProgress;\nuniform float uMainThickness;\nuniform float uSecondRadius;\nuniform float uSecondDistance;\nuniform float uSecondAngle;\nuniform float uSecondThickness;\nuniform float uNorthDistance;\nuniform float uNorthScale;\nuniform float uGrow;\n\nvarying vec2 vUv;\n\n#define M_PI 3.1415926535897932384626433832795\n\nvec2 rotateUV(vec2 uv, float rotation)\n{\n    float mid = 0.5;\n    return vec2(\n        cos(rotation) * (uv.x - mid) + sin(rotation) * (uv.y - mid) + mid,\n        cos(rotation) * (uv.y - mid) - sin(rotation) * (uv.x - mid) + mid\n    );\n}\n\nfloat getCircle(vec2 _position, float _radius, float _thickiness, float _progress, float _offsetAngle)\n{\n    vec2 rotatedUv = rotateUV(vUv, _offsetAngle + M_PI);\n    float result = distance(vUv, _position);\n\n    result -= _radius;\n    result = abs(result);\n\n    result = 1.0 - step(_thickiness, result);\n\n    float angle = abs(atan(rotatedUv.y - 0.5, rotatedUv.x - 0.5));\n    result *= step(angle / M_PI, _progress);\n\n    return result;\n}\n\nvoid main()\n{\n    // Main circle\n    float mainCircle = getCircle(vec2(0.5, 0.5), uMainRadius + uGrow, uMainThickness, uMainProgress, uSecondAngle);\n\n    // Second circle\n    float secondX = 0.5 + cos(uSecondAngle) * (uSecondDistance + uGrow * 2.0);\n    float secondY = 0.5 + sin(uSecondAngle) * (uSecondDistance + uGrow * 2.0);\n    float secondCircle = getCircle(vec2(secondX, secondY), uSecondRadius, uSecondThickness, 1.0, uSecondAngle);\n\n    vec2 northUv = (vUv - vec2(0.5, 0.5 + uNorthDistance)) / uNorthScale + 0.5;\n    float north = texture2D(uNorthTexture, northUv).r;\n\n    gl_FragColor = vec4(uColor, mainCircle + secondCircle + north);\n}\n"
          , _t = "#define GLSLIFY 1\nuniform float uSize;\nuniform vec2 uResolution;\nuniform vec2 uOffset;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    vec2 newPosition = position.xy;\n\n    // Set square\n    float ratio = uResolution.x / uResolution.y;\n    newPosition.x /= ratio;\n\n    // Resize\n    newPosition *= uSize / uResolution.x * ratio;\n\n    // Move\n    newPosition.x += (uOffset.x - 0.5) * 2.0;\n    newPosition.y += (uOffset.y - 0.5) * 2.0;\n\n    gl_Position = vec4(newPosition, 0.0, 1.0);\n\n    // Varyings\n    vUv = uv;\n}\n"
          , jt = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return new q["ub"]({
                transparent: !0,
                uniforms: {
                    uColor: {
                        type: "vec3",
                        value: e.color
                    },
                    uSize: {
                        type: "float",
                        value: e.size
                    },
                    uResolution: {
                        type: "vec2",
                        value: e.resolution
                    },
                    uNorthTexture: {
                        type: "sampler2D",
                        value: e.northTexture
                    },
                    uOffset: {
                        type: "vec2",
                        value: e.offset
                    },
                    uMainRadius: {
                        type: "float",
                        value: e.mainRadius
                    },
                    uMainProgress: {
                        type: "float",
                        value: e.mainProgress
                    },
                    uMainThickness: {
                        type: "float",
                        value: e.mainThickness
                    },
                    uSecondRadius: {
                        type: "float",
                        value: e.secondRadius
                    },
                    uSecondDistance: {
                        type: "float",
                        value: e.secondDistance
                    },
                    uSecondAngle: {
                        type: "float",
                        value: e.secondAngle
                    },
                    uSecondThickness: {
                        type: "float",
                        value: e.secondThickness
                    },
                    uNorthDistance: {
                        type: "float",
                        value: e.northDistance
                    },
                    uNorthScale: {
                        type: "float",
                        value: e.northScale
                    },
                    uGrow: {
                        type: "float",
                        value: 0
                    }
                },
                depthTest: !1,
                depthWrite: !1,
                vertexShader: _t,
                fragmentShader: Ht
            })
        }
          , Ut = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.config = t.config,
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.resources = t.resources,
                this.colors = t.colors,
                this.scene = t.scene,
                this.originalCamera = t.originalCamera,
                this.debug && (this.debugFolder = this.debug.addFolder("cursor"),
                this.debugFolder.open()),
                this.playing = !0,
                this.mode = "free",
                this.size = 100,
                this.visible = !1,
                this.setMeasures(),
                this.setPosition(),
                this.setResize(),
                this.setGeometry(),
                this.setColor(),
                this.setMaterial(),
                this.setMesh(),
                this.setLabel()
            }
            return Object(O["a"])(e, [{
                key: "setMeasures",
                value: function() {
                    this.measures = {},
                    this.measures.mainRadius = .25,
                    this.measures.secondRadius = .02,
                    this.measures.secondDistance = .3,
                    this.measures.secondAngle = 0,
                    this.measures.thickness = .01,
                    this.measures.northDistance = .4,
                    this.measures.northScale = .14
                }
            }, {
                key: "setPosition",
                value: function() {
                    var e = this;
                    this.position = {},
                    this.position.x = .5 * this.sizes.viewport.width,
                    this.position.y = this.config.touch || this.config.mobile ? .165 * this.sizes.viewport.height : .5 * this.sizes.viewport.height,
                    this.position.target = {
                        x: this.position.x,
                        y: this.position.y
                    },
                    this.position.rounded = {
                        x: Math.round(this.position.x),
                        y: Math.round(this.position.y)
                    },
                    this.position.easing = .01,
                    this.position.speed = 0,
                    this.position.targetSpeed = 0,
                    this.position.mouseMoveEvent = function(t) {
                        e.config.touch || (e.position.target.x = t.clientX,
                        e.position.target.y = t.clientY)
                    }
                    ,
                    window.addEventListener("mousemove", this.position.mouseMoveEvent),
                    this.time.on("tick", (function() {
                        if (e.playing) {
                            var t = e.time.delta < 100 ? e.time.delta : 100
                              , i = e.position.x + (e.position.target.x - e.position.x) * e.position.easing * t
                              , a = e.position.y + (e.position.target.y - e.position.y) * e.position.easing * t;
                            e.position.targetSpeed = Math.hypot(e.position.x - i, e.position.y - a) / t,
                            e.position.speed += (e.position.targetSpeed - e.position.speed) * e.position.easing * t,
                            e.position.x = i,
                            e.position.y = a;
                            var s = .25 * Math.round(e.position.x / .25)
                              , n = .25 * Math.round(e.position.y / .25);
                            s === e.position.rounded.x && n === e.position.rounded.y || (e.position.rounded.x = s,
                            e.position.rounded.y = n,
                            e.material.uniforms.uOffset.value.x = e.position.rounded.x / e.sizes.viewport.width,
                            e.material.uniforms.uOffset.value.y = 1 - e.position.rounded.y / e.sizes.viewport.height,
                            e.label.material.uniforms.uBounding.value.x = e.position.rounded.x - .5 * e.label.width,
                            e.label.material.uniforms.uBounding.value.y = e.position.rounded.y - .5 * e.label.height + e.label.offset)
                        }
                    }
                    ))
                }
            }, {
                key: "setResize",
                value: function() {
                    var e = this;
                    this.sizes.on("resize", (function() {
                        e.material.uniforms.uResolution.value.set(e.sizes.viewport.width, e.sizes.viewport.height)
                    }
                    ))
                }
            }, {
                key: "setGeometry",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal")
                }
            }, {
                key: "setColor",
                value: function() {
                    var e = this;
                    this.color = {},
                    this.color.black = this.colors.darkPencil.three,
                    this.color.red = this.colors.highlight.three,
                    this.color.mix = this.color.red.clone(),
                    this.color.progress = 0,
                    this.color.update = function() {
                        e.color.mix.copy(e.color.black),
                        e.color.mix.lerp(e.color.red, e.color.progress)
                    }
                    ,
                    this.color.goBlack = function() {
                        r["a"].killTweensOf(e.color),
                        r["a"].to(e.color, {
                            progress: 0,
                            onUpdate: e.color.update,
                            duration: .3,
                            delay: .1
                        })
                    }
                    ,
                    this.color.goRed = function() {
                        r["a"].killTweensOf(e.color),
                        r["a"].to(e.color, {
                            progress: 1,
                            onUpdate: e.color.update,
                            duration: .3,
                            delay: .1
                        })
                    }
                    ,
                    this.debug && (this.debugFolder.add(this.color, "goBlack"),
                    this.debugFolder.add(this.color, "goRed"))
                }
            }, {
                key: "setMaterial",
                value: function() {
                    var e = this;
                    this.resources.items.cursorNorthTexture.magFilter = q["ab"],
                    this.resources.items.cursorNorthTexture.minFilter = q["ab"],
                    this.material = new jt({
                        color: this.color.mix,
                        size: this.size,
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        northTexture: this.resources.items.cursorNorthTexture,
                        offset: new q["Qb"],
                        mainRadius: 0,
                        mainProgress: 1,
                        mainThickness: 0,
                        secondRadius: 0,
                        secondDistance: 0,
                        secondAngle: 0,
                        secondThickness: 0,
                        northDistance: 0,
                        northScale: 0
                    }),
                    this.material.uniforms.uOffset.value.x = this.position.rounded.x / this.sizes.viewport.width,
                    this.material.uniforms.uOffset.value.y = 1 - this.position.rounded.y / this.sizes.viewport.height,
                    this.time.on("tick", (function() {
                        e.playing && (e.material.uniforms.uSecondAngle.value = -e.originalCamera.rotation.y + .5 * Math.PI,
                        e.material.uniforms.uGrow.value = Math.min(.25, .05 * e.position.speed))
                    }
                    ))
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.renderOrder = 9999,
                    this.mesh.frustumCulled = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.scene.add(this.mesh)
                }
            }, {
                key: "setLabel",
                value: function() {
                    var e = this;
                    this.label = {},
                    this.label.width = 100,
                    this.label.height = 20,
                    this.label.offset = 30,
                    this.label.visible = !1,
                    this.label.canvas = {},
                    this.label.canvas.instance = document.createElement("canvas"),
                    this.label.canvas.instance.width = this.label.width,
                    this.label.canvas.instance.height = this.label.height,
                    this.label.canvas.context = this.label.canvas.instance.getContext("2d"),
                    this.label.canvas.context.fillStyle = this.colors.darkerPencil.string,
                    this.label.canvas.context.font = "12px ShipleyRegular",
                    this.label.canvas.context.textAlign = "center",
                    this.label.canvas.context.textBaseline = "middle",
                    this.label.texture = new q["g"](this.label.canvas.instance),
                    this.label.texture.generateMipmaps = !1,
                    this.label.texture.minFilter = q["ab"],
                    this.label.texture.magFilter = q["ab"],
                    this.label.geometry = new q["jb"](2,2),
                    this.label.geometry.deleteAttribute("normal"),
                    this.label.material = new rt({
                        resolution: new q["Qb"](this.sizes.viewport.width,this.sizes.viewport.height),
                        bounding: new q["Sb"](0,0,this.label.width,this.label.height),
                        texture: this.label.texture,
                        revealTexture: this.resources.items.perlinTexture,
                        textureFrequency: new q["Qb"](1.2,1.7),
                        randomFrequency: new q["Qb"](5,2.6),
                        highlight: !1
                    }),
                    this.label.material.uniforms.uBounding.value.x = this.position.rounded.x - .5 * this.label.width,
                    this.label.material.uniforms.uBounding.value.y = this.position.rounded.y - .5 * this.label.height + this.label.offset,
                    this.label.mesh = new q["T"](this.label.geometry,this.label.material),
                    this.scene.add(this.label.mesh),
                    this.label.neverUpdated = !0,
                    this.label.update = function() {
                        e.label.canvas.context.clearRect(0, 0, e.label.canvas.instance.width, e.label.canvas.instance.height),
                        e.label.canvas.context.fillText(e.config.texts.explore.toUpperCase().split("").join(" "), .5 * e.label.width, .5 * e.label.height),
                        e.label.texture.needsUpdate = !0
                    }
                    ,
                    this.label.show = function() {
                        e.label.visible || (e.label.neverUpdated && (e.label.neverUpdated = !1,
                        e.label.update()),
                        r["a"].killTweensOf(e.label.material.uniforms.uRevealProgress),
                        r["a"].to(e.label.material.uniforms.uRevealProgress, {
                            value: 1,
                            duration: 1,
                            delay: .15
                        }),
                        e.label.visible = !0)
                    }
                    ,
                    this.label.hide = function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        e.label.visible && (r["a"].killTweensOf(e.label.material.uniforms.uRevealProgress),
                        0 === t ? e.label.material.uniforms.uRevealProgress.value = 0 : r["a"].to(e.label.material.uniforms.uRevealProgress, {
                            value: 0,
                            duration: t
                        }),
                        e.label.visible = !1)
                    }
                    ,
                    this.sizes.on("resize", (function() {
                        e.label.material.uniforms.uResolution.value.set(e.sizes.viewport.width, e.sizes.viewport.height)
                    }
                    ))
                }
            }, {
                key: "setMode",
                value: function(e) {
                    if (e !== this.mode) {
                        switch (r["a"].killTweensOf(this.material.uniforms.uMainRadius),
                        r["a"].killTweensOf(this.material.uniforms.uMainProgress),
                        r["a"].killTweensOf(this.material.uniforms.uMainThickness),
                        r["a"].killTweensOf(this.material.uniforms.uSecondRadius),
                        r["a"].killTweensOf(this.material.uniforms.uSecondDistance),
                        r["a"].killTweensOf(this.material.uniforms.uSecondThickness),
                        r["a"].killTweensOf(this.material.uniforms.uNorthDistance),
                        r["a"].killTweensOf(this.material.uniforms.uNorthScale),
                        e) {
                        case "free":
                            this.color.goRed(),
                            r["a"].to(this.material.uniforms.uMainRadius, {
                                value: this.measures.mainRadius,
                                ease: "back.out(2)",
                                duration: .5,
                                delay: 0
                            }),
                            r["a"].to(this.material.uniforms.uMainProgress, {
                                value: 1,
                                duration: .5
                            }),
                            r["a"].to(this.material.uniforms.uMainThickness, {
                                value: this.measures.thickness,
                                ease: "back.out(2)",
                                duration: .25,
                                delay: 0
                            }),
                            r["a"].to(this.material.uniforms.uSecondRadius, {
                                value: this.measures.secondRadius,
                                ease: "back.out(2)",
                                duration: .5,
                                delay: .1
                            }),
                            r["a"].to(this.material.uniforms.uSecondDistance, {
                                value: this.measures.secondDistance,
                                ease: "back.out(2)",
                                duration: .5,
                                delay: .1
                            }),
                            r["a"].to(this.material.uniforms.uSecondThickness, {
                                value: this.measures.thickness,
                                ease: "back.out(2)",
                                duration: .25,
                                delay: 0
                            }),
                            r["a"].to(this.material.uniforms.uNorthDistance, {
                                value: this.measures.northDistance,
                                ease: "back.out(2)",
                                duration: .5,
                                delay: .2
                            }),
                            r["a"].to(this.material.uniforms.uNorthScale, {
                                value: this.measures.northScale,
                                ease: "back.out(2)",
                                duration: .5,
                                delay: .2
                            });
                            break;
                        case "focus":
                            this.color.goBlack(),
                            r["a"].to(this.material.uniforms.uMainRadius, {
                                value: .5 * this.measures.mainRadius,
                                ease: "power1.inOut",
                                duration: .5
                            }),
                            r["a"].to(this.material.uniforms.uMainProgress, {
                                value: 1,
                                ease: "power1.inOut",
                                duration: .5
                            }),
                            r["a"].to(this.material.uniforms.uMainThickness, {
                                value: this.measures.thickness,
                                duration: .25
                            }),
                            r["a"].to(this.material.uniforms.uSecondRadius, {
                                value: 0,
                                ease: "power1.in",
                                duration: .3
                            }),
                            r["a"].to(this.material.uniforms.uSecondDistance, {
                                value: 0,
                                ease: "power1.in",
                                duration: .3
                            }),
                            r["a"].to(this.material.uniforms.uSecondThickness, {
                                value: 0,
                                ease: "power1.in",
                                duration: .25
                            }),
                            r["a"].to(this.material.uniforms.uNorthDistance, {
                                value: 0,
                                ease: "power1.in",
                                duration: .3
                            }),
                            r["a"].to(this.material.uniforms.uNorthScale, {
                                value: 0,
                                ease: "power1.in",
                                duration: .3
                            });
                            break
                        }
                        this.mode = e
                    }
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (this.visible = !0,
                    r["a"].killTweensOf(this.material.uniforms.uMainRadius),
                    r["a"].killTweensOf(this.material.uniforms.uMainThickness),
                    r["a"].killTweensOf(this.material.uniforms.uSecondRadius),
                    r["a"].killTweensOf(this.material.uniforms.uSecondDistance),
                    r["a"].killTweensOf(this.material.uniforms.uSecondThickness),
                    r["a"].killTweensOf(this.material.uniforms.uNorthDistance),
                    r["a"].killTweensOf(this.material.uniforms.uNorthScale),
                    "free" === this.mode ? (r["a"].to(this.material.uniforms.uMainRadius, {
                        value: this.measures.mainRadius,
                        ease: "back.out(2)",
                        delay: 0,
                        duration: .5
                    }),
                    r["a"].to(this.material.uniforms.uMainThickness, {
                        value: this.measures.thickness,
                        ease: "back.out(2)",
                        delay: 0,
                        duration: .25
                    }),
                    r["a"].to(this.material.uniforms.uSecondRadius, {
                        value: this.measures.secondRadius,
                        ease: "back.out(2)",
                        delay: .1,
                        duration: .5
                    }),
                    r["a"].to(this.material.uniforms.uSecondDistance, {
                        value: this.measures.secondDistance,
                        ease: "back.out(2)",
                        delay: .1,
                        duration: .5
                    }),
                    r["a"].to(this.material.uniforms.uSecondThickness, {
                        value: this.measures.thickness,
                        ease: "back.out(2)",
                        delay: 0,
                        duration: .25
                    }),
                    r["a"].to(this.material.uniforms.uNorthDistance, {
                        value: this.measures.northDistance,
                        ease: "back.out(2)",
                        delay: .2,
                        duration: .5
                    }),
                    r["a"].to(this.material.uniforms.uNorthScale, {
                        value: this.measures.northScale,
                        ease: "back.out(2)",
                        delay: .2,
                        duration: .5
                    })) : "focus" === this.mode && (r["a"].to(this.material.uniforms.uMainRadius, {
                        value: .5 * this.measures.mainRadius,
                        ease: "back.out(2)",
                        delay: 0,
                        duration: .5
                    }),
                    r["a"].to(this.material.uniforms.uMainThickness, {
                        value: this.measures.thickness,
                        ease: "back.out(2)",
                        delay: 0,
                        duration: .25
                    }),
                    r["a"].to(this.material.uniforms.uSecondThickness, {
                        value: 0,
                        ease: "back.out(2)",
                        delay: 0,
                        duration: .25
                    })))
                }
            }, {
                key: "hide",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .3
                      , t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    (this.visible || t) && (this.visible = !1,
                    r["a"].killTweensOf(this.material.uniforms.uMainRadius),
                    r["a"].killTweensOf(this.material.uniforms.uMainThickness),
                    r["a"].killTweensOf(this.material.uniforms.uSecondRadius),
                    r["a"].killTweensOf(this.material.uniforms.uSecondDistance),
                    r["a"].killTweensOf(this.material.uniforms.uSecondThickness),
                    r["a"].killTweensOf(this.material.uniforms.uNorthDistance),
                    r["a"].killTweensOf(this.material.uniforms.uNorthScale),
                    0 === e ? (this.material.uniforms.uMainRadius.value = 0,
                    this.material.uniforms.uMainThickness.value = 0,
                    this.material.uniforms.uSecondRadius.value = 0,
                    this.material.uniforms.uSecondDistance.value = 0,
                    this.material.uniforms.uSecondThickness.value = 0,
                    this.material.uniforms.uNorthDistance.value = 0,
                    this.material.uniforms.uNorthScale.value = 0) : (r["a"].to(this.material.uniforms.uMainRadius, {
                        value: 0,
                        ease: "power3.in",
                        delay: 0,
                        duration: e
                    }),
                    r["a"].to(this.material.uniforms.uMainThickness, {
                        value: 0,
                        ease: "power3.in",
                        delay: .1,
                        duration: e
                    }),
                    r["a"].to(this.material.uniforms.uSecondRadius, {
                        value: 0,
                        ease: "power3.in",
                        delay: .1,
                        duration: e
                    }),
                    r["a"].to(this.material.uniforms.uSecondDistance, {
                        value: 0,
                        ease: "power3.in",
                        delay: .1,
                        duration: e
                    }),
                    r["a"].to(this.material.uniforms.uSecondThickness, {
                        value: 0,
                        ease: "power3.in",
                        delay: .1,
                        duration: e
                    }),
                    r["a"].to(this.material.uniforms.uNorthDistance, {
                        value: 0,
                        ease: "power3.in",
                        delay: .2,
                        duration: e
                    }),
                    r["a"].to(this.material.uniforms.uNorthScale, {
                        value: 0,
                        ease: "power3.in",
                        delay: .2,
                        duration: e
                    })))
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                    case "composition":
                        this.mesh.visible = !1,
                        this.label.mesh.visible = !1;
                        break;
                    case "overlay":
                        this.mesh.visible = !0,
                        this.label.mesh.visible = !0;
                        break
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.geometry.dispose(),
                    this.material.dispose(),
                    window.removeEventListener("mousemove", this.position.mouseMoveEvent)
                }
            }]),
            e
        }()
          , Wt = "precision highp float;\n#define GLSLIFY 1\n\nuniform float uTime;\nuniform sampler2D uTerrainData1;\nuniform vec3 uBackColor;\nuniform vec3 uFrontColor;\nuniform sampler2D uRevealTexture;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\nuniform float uRevealProgress;\nuniform float uAlpha;\n\nvarying vec2 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    vec4 textureData1Color = texture2D(uTerrainData1, vUv);\n\n    // Strength\n    float strength = step(0.11, textureData1Color.g);\n    strength += step(0.7, textureData1Color.r) * 0.05;\n\n    // Perlin progress\n    strength *= getPerlinProgress(vUv, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, uRevealProgress, uTime);\n    strength *= 0.35;\n\n    // // Color\n    // vec3 backColor = uBackColor;\n    // vec3 frontColor = uFrontColor;\n    // vec3 color = mix(backColor, frontColor, strength);\n\n    // gl_FragColor = vec4(color, uAlpha);\n    gl_FragColor = vec4(0.0, strength, 0.0, 1.0);\n}\n"
          , Gt = "#define GLSLIFY 1\nuniform vec2 uScale;\nuniform vec2 uOffset;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    gl_Position = vec4(position, 1.0);\n\n    vec2 newUV = (uv - 0.5) * uScale + 0.5;\n    newUV += uOffset;\n    vUv = newUV;\n}\n"
          , Yt = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return new q["ub"]({
                transparent: !0,
                uniforms: {
                    uTime: {
                        value: 0
                    },
                    uTerrainData1: {
                        value: e.terrainData1
                    },
                    uBackColor: {
                        value: e.backColor
                    },
                    uFrontColor: {
                        value: e.frontColor
                    },
                    uScale: {
                        value: new q["Qb"](1,1)
                    },
                    uOffset: {
                        value: new q["Qb"](-.07,-.07)
                    },
                    uRevealTexture: {
                        value: e.revealTexture
                    },
                    uRevealTextureFrequency: {
                        value: e.revealTextureFrequency
                    },
                    uRevealRandomFrequency: {
                        value: e.revealRandomFrequency
                    },
                    uRevealProgress: {
                        value: 0
                    },
                    uAlpha: {
                        value: 1
                    }
                },
                depthTest: !1,
                depthWrite: !1,
                vertexShader: Gt,
                fragmentShader: Wt
            })
        }
          , $t = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.debug = t.debug,
                this.sizes = t.sizes,
                this.time = t.time,
                this.defaultVillageName = t.defaultVillageName,
                this.resources = t.resources,
                this.colors = t.colors,
                this.scene = t.scene,
                this.debug && (this.debugFolder = this.debug.addFolder("intro"),
                this.debugFolder.open()),
                this.active = !1,
                this.playing = !0,
                this.scale = new q["Qb"],
                this.zoom = {},
                this.zoom.amplitude = .4,
                this.zoom.progress = 0,
                this.oscillation = {},
                this.oscillation.amplitude = .2,
                this.oscillation.progress = 0,
                this.oscillation.frequency = {
                    x: 32e-6,
                    y: 2e-5
                },
                this.setOffset(),
                this.setGeometry(),
                this.setMaterial(),
                this.setMesh(),
                this.setResize()
            }
            return Object(O["a"])(e, [{
                key: "setOffset",
                value: function() {
                    var e = this;
                    this.offset = {},
                    this.offset.base = {
                        x: 0,
                        y: 0
                    },
                    this.offset.mouse = {
                        x: 0,
                        y: 0,
                        amplitude: .1,
                        easing: .004,
                        target: {
                            x: 0,
                            y: 0
                        }
                    },
                    this.offset.mousemove = function(t) {
                        e.offset.mouse.target.x = (t.clientX / e.sizes.viewport.width - .5) * e.offset.mouse.amplitude,
                        e.offset.mouse.target.y = -(t.clientY / e.sizes.viewport.height - .5) * e.offset.mouse.amplitude
                    }
                    ,
                    window.addEventListener("mousemove", this.offset.mousemove),
                    this.time.on("tick.intro", (function() {
                        if (e.active && e.playing) {
                            var t = Date.now();
                            e.offset.mouse.x += (e.offset.mouse.target.x - e.offset.mouse.x) * e.time.delta * e.offset.mouse.easing,
                            e.offset.mouse.y += (e.offset.mouse.target.y - e.offset.mouse.y) * e.time.delta * e.offset.mouse.easing,
                            e.material.uniforms.uTime.value = 2e-4 * e.time.elapsed,
                            e.material.uniforms.uOffset.value.x = Math.sin(t * e.oscillation.frequency.x) * e.oscillation.amplitude * e.oscillation.progress,
                            e.material.uniforms.uOffset.value.y = Math.sin(t * e.oscillation.frequency.y) * e.oscillation.amplitude * e.oscillation.progress,
                            e.material.uniforms.uOffset.value.x += e.offset.mouse.x * e.offset.mouse.amplitude,
                            e.material.uniforms.uOffset.value.y += e.offset.mouse.y * e.offset.mouse.amplitude,
                            e.material.uniforms.uScale.value.copy(e.scale),
                            e.material.uniforms.uScale.value.y *= 1 - e.zoom.amplitude * e.zoom.progress,
                            e.material.uniforms.uScale.value.x *= 1 - e.zoom.amplitude * e.zoom.progress
                        }
                    }
                    ))
                }
            }, {
                key: "setGeometry",
                value: function() {
                    this.geometry = new q["jb"](2,2),
                    this.geometry.deleteAttribute("normal")
                }
            }, {
                key: "setMaterial",
                value: function() {
                    this.texture = this.resources.items["".concat(this.defaultVillageName, "TerrainData1Texture")],
                    this.material = new Yt({
                        terrainData1: this.texture,
                        backColor: this.colors.paper.three,
                        frontColor: this.colors.lightPencil.three,
                        revealTexture: this.resources.items.perlinTexture,
                        revealTextureFrequency: new q["Qb"](3.2,14),
                        revealRandomFrequency: new q["Qb"](6.5,14)
                    }),
                    this.debug && (this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "x").min(0).max(20).step(.01).name("uRevealTextureFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealTextureFrequency.value, "y").min(0).max(20).step(.01).name("uRevealTextureFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "x").min(0).max(20).step(.01).name("uRevealRandomFrequencyX"),
                    this.debugFolder.add(this.material.uniforms.uRevealRandomFrequency.value, "y").min(0).max(20).step(.01).name("uRevealRandomFrequencyY"),
                    this.debugFolder.add(this.material.uniforms.uRevealProgress, "value").min(0).max(1).step(.001).name("uRevealProgress"))
                }
            }, {
                key: "setMesh",
                value: function() {
                    this.mesh = new q["T"](this.geometry,this.material),
                    this.mesh.renderOrder = 999,
                    this.mesh.frustumCulled = !1,
                    this.mesh.matrixAutoUpdate = !1,
                    this.mesh.visible = !1,
                    this.scene.add(this.mesh)
                }
            }, {
                key: "setResize",
                value: function() {
                    var e = this;
                    this.sizes.on("resize.intro", (function() {
                        e.active && e.playing && e.resize()
                    }
                    )),
                    this.resize()
                }
            }, {
                key: "resize",
                value: function() {
                    var e = this.sizes.viewport.width / this.sizes.viewport.height
                      , t = this.texture.image.width / this.texture.image.height;
                    t < e ? (this.scale.x = 1,
                    this.scale.y = t / e) : (this.scale.x = e / t,
                    this.scale.y = 1)
                }
            }, {
                key: "show",
                value: function() {
                    r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].killTweensOf(this.material.uniforms.uAlpha),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: .6,
                        duration: 3
                    }),
                    r["a"].to(this.zoom, {
                        progress: 1,
                        duration: 5,
                        ease: Q["b"].easeOut
                    }),
                    r["a"].to(this.oscillation, {
                        progress: 1,
                        duration: 12,
                        ease: Q["b"].easeInOut,
                        delay: 2
                    }),
                    r["a"].to(this.material.uniforms.uAlpha, {
                        value: 1,
                        duration: 2
                    }),
                    this.active = !0
                }
            }, {
                key: "hide",
                value: function(e) {
                    var t = this;
                    r["a"].killTweensOf(this.material.uniforms.uRevealProgress),
                    r["a"].killTweensOf(this.material.uniforms.uAlpha),
                    r["a"].to(this.material.uniforms.uRevealProgress, {
                        value: 0,
                        duration: 3
                    }),
                    r["a"].to(this.material.uniforms.uAlpha, {
                        value: 0,
                        delay: .7,
                        duration: 2,
                        onComplete: function() {
                            window.removeEventListener("mousemove", t.offset.mousemove),
                            "function" === typeof e && e(),
                            t.active = !1
                        }
                    })
                }
            }, {
                key: "setForPass",
                value: function(e) {
                    switch (e) {
                    case "highlight":
                    case "overlay":
                        this.mesh.visible = !1;
                        break;
                    case "composition":
                        this.mesh.visible = this.active;
                        break
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    this.material.dispose(),
                    this.geometry.dispose(),
                    this.scene.remove(this.mesh),
                    this.time.off("tick.intro"),
                    this.sizes.off("resize.intro")
                }
            }]),
            e
        }()
          , Xt = function() {
            function e(t) {
                Object(M["a"])(this, e),
                this.visible = !1,
                this.setCanvas(),
                this.setVaryings(),
                t.visible && this.show()
            }
            return Object(O["a"])(e, [{
                key: "getScatterRatio",
                value: function(e) {
                    var t = e + 1
                      , i = Math.pow(2, Math.floor(Math.log(t) / Math.log(2)))
                      , a = 1 / i;
                    return a * (t - i) + .5 * a
                }
            }, {
                key: "setCanvas",
                value: function() {
                    this.canvas = {},
                    this.canvas.size = 400,
                    this.canvas.halfSize = Math.round(this.canvas.size / 2),
                    this.canvas.quarterSize = Math.round(this.canvas.size / 4),
                    this.canvas.element = document.createElement("canvas"),
                    this.canvas.element.width = this.canvas.size,
                    this.canvas.element.height = this.canvas.size,
                    this.canvas.element.style.position = "fixed",
                    this.canvas.element.style.bottom = 0,
                    this.canvas.element.style.left = 0,
                    this.canvas.element.style.zIndex = 1,
                    this.canvas.context = this.canvas.element.getContext("2d")
                }
            }, {
                key: "setVaryings",
                value: function() {
                    this.varyings = {},
                    this.varyings.items = []
                }
            }, {
                key: "show",
                value: function() {
                    this.visible || (document.body.appendChild(this.canvas.element),
                    this.visible = !0)
                }
            }, {
                key: "hide",
                value: function() {
                    this.visible && (document.body.removeChild(this.canvas.element),
                    this.visible = !0)
                }
            }, {
                key: "createVarying",
                value: function(e) {
                    var t = {};
                    return t.name = e,
                    t.start = null,
                    t.end = null,
                    t.count = 0,
                    t.color = "hsl(".concat(360 * this.getScatterRatio(this.varyings.items.length), ", 100%, 80%)"),
                    this.varyings.items.push(t),
                    t
                }
            }, {
                key: "varyingStart",
                value: function(e) {
                    if (this.visible) {
                        var t = this.varyings.items.find((function(t) {
                            return t.name === e
                        }
                        ));
                        t || (t = this.createVarying(e)),
                        t.start = window.performance.now()
                    }
                }
            }, {
                key: "varyingEnd",
                value: function(e) {
                    if (this.visible) {
                        var t = this.varyings.items.find((function(t) {
                            return t.name === e
                        }
                        ));
                        t ? (t.end = window.performance.now(),
                        t.delta += t.end - t.start,
                        t.count++) : console.warn("varyingEnd: varying ".concat(e, " not found"))
                    }
                }
            }, {
                key: "flush",
                value: function() {
                    if (this.visible) {
                        var e, t = 0, i = Object(L["a"])(this.varyings.items);
                        try {
                            for (i.s(); !(e = i.n()).done; ) {
                                var a = e.value;
                                null !== a.start && null !== a.end && (a.start = null,
                                a.end = null,
                                a.needDraw = !0,
                                a.averageDelta = a.delta / a.count,
                                a.delta = 0,
                                a.count = 0,
                                t += a.averageDelta)
                            }
                        } catch (g) {
                            i.e(g)
                        } finally {
                            i.f()
                        }
                        this.canvas.context.fillStyle = "#000000",
                        this.canvas.context.fillRect(0, 0, this.canvas.size, this.canvas.size);
                        var s, n = 0, r = Object(L["a"])(this.varyings.items);
                        try {
                            for (r.s(); !(s = r.n()).done; ) {
                                var o = s.value;
                                if (o.needDraw) {
                                    var l = n
                                      , u = o.averageDelta / t * Math.PI * 2
                                      , h = l + u
                                      , c = l + .5 * u;
                                    n = h,
                                    this.canvas.context.beginPath(),
                                    this.canvas.context.moveTo(this.canvas.halfSize, this.canvas.halfSize),
                                    this.canvas.context.arc(this.canvas.halfSize, this.canvas.halfSize, this.canvas.quarterSize, l, h),
                                    this.canvas.context.fillStyle = o.color,
                                    this.canvas.context.fill();
                                    var d = "".concat(o.name, " - ").concat(o.averageDelta.toFixed(3), "ms")
                                      , m = null;
                                    m = c < .5 * Math.PI ? "left" : c < 1.5 * Math.PI ? "right" : "left",
                                    this.canvas.context.textAlign = m,
                                    this.canvas.context.textBaseline = "middle",
                                    this.canvas.context.fillText(d, this.canvas.halfSize + Math.cos(c) * (this.canvas.quarterSize + 10), this.canvas.halfSize + Math.sin(c) * (this.canvas.quarterSize + 10)),
                                    o.needDraw = !1
                                }
                            }
                        } catch (g) {
                            r.e(g)
                        } finally {
                            r.f()
                        }
                        var p = "".concat(t.toFixed(3), "ms");
                        this.canvas.context.fillStyle = "#ffffff",
                        this.canvas.context.textAlign = "left",
                        this.canvas.context.textBaseline = "hanging",
                        this.canvas.context.fillText(p, 10, 10)
                    }
                }
            }, {
                key: "destroy",
                value: function() {}
            }]),
            e
        }()
          , Jt = {
            villages: {
                avize: {
                    fields: [{
                        navName: "Fosse\nle prêtre",
                        modelName: "field01",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField01TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: .2 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Justice",
                        modelName: "field02",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField02TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: .2 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Pierres\nVaudon",
                        modelName: "field03",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField03TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: .4 * Math.PI,
                        cameraRotationX: -.08,
                        cameraElevation: .05,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Monts\nChenevaux",
                        modelName: "field04",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField04TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: .4 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "La Noue\ndu Porchet",
                        modelName: "field05",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField05TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: .4 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Chemin\nde Chalons",
                        modelName: "field06",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField06TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Chantraines",
                        modelName: "field07",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField07TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Gros Yeux\nDu Couchant",
                        modelName: "field08",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField08TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Crayeres",
                        modelName: "field09",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField09TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1.2 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Le Mont\nCramant",
                        modelName: "field10",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField10TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1.2 * Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Roches",
                        modelName: "field11",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField11TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1.4 * Math.PI,
                        cameraRotationX: -.35,
                        cameraElevation: .12,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Le Clos\nJacquin",
                        modelName: "field12",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField12TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1.4 * Math.PI,
                        cameraRotationX: -.35,
                        cameraElevation: .12,
                        hasContent: !0,
                        category: 1
                    }, {
                        navName: "Les Barmonts",
                        modelName: "field13",
                        subTitleTexture: "avizeFieldSubTitleTexture",
                        titleTexture: "avizeField13TitleTexture",
                        labelTexture: "avizeFieldLabelTexture",
                        cameraRotationY: 1.8 * Math.PI,
                        cameraRotationX: -.4,
                        cameraElevation: .14,
                        hasContent: !0,
                        category: 1
                    }],
                    places: [{
                        url: "https://www.selosse-lesavises.com/",
                        blazonTexture: "hotelBlazonTexture",
                        labelTexture: "hotelLabelTexture",
                        x: -2,
                        y: .36,
                        z: .49
                    }]
                },
                merfy: {
                    fields: [{
                        navName: "Les Barres",
                        modelName: "field01",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField01TitleTexture",
                        labelTexture: "merfyField01LabelTexture",
                        cameraRotationY: .2 * -Math.PI,
                        cameraRotationX: -.08,
                        cameraElevation: .06,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Oriseaux",
                        modelName: "field02",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField03TitleTexture",
                        labelTexture: "merfyField03LabelTexture",
                        cameraRotationY: .2 * -Math.PI,
                        cameraRotationX: -.08,
                        cameraElevation: .05,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Beaux Sens",
                        modelName: "field03",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField02TitleTexture",
                        labelTexture: "merfyFieldLabelTexture",
                        cameraRotationY: .4 * Math.PI,
                        cameraRotationX: -.08,
                        cameraElevation: .04,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Le Chemin\nde Reims",
                        modelName: "field04",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField04TitleTexture",
                        labelTexture: "merfyField04LabelTexture",
                        cameraRotationY: .4 * Math.PI,
                        cameraRotationX: -.06,
                        cameraElevation: .04,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Grands\nChamps",
                        modelName: "field05",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField05TitleTexture",
                        labelTexture: "merfyFieldLabelTexture",
                        cameraRotationY: .4 * Math.PI,
                        cameraRotationX: -.08,
                        cameraElevation: .04,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Bermonts",
                        modelName: "field06",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField06TitleTexture",
                        labelTexture: "",
                        cameraRotationY: .5 * Math.PI,
                        cameraRotationX: -.1,
                        cameraElevation: .05,
                        hasContent: !1,
                        category: !1
                    }, {
                        navName: "Les Fontaines",
                        modelName: "field07",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField07TitleTexture",
                        labelTexture: "merfyFieldLabelTexture",
                        cameraRotationY: 1 * Math.PI,
                        cameraRotationX: -.16,
                        cameraElevation: .07,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Ricordanes",
                        modelName: "field08",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField08TitleTexture",
                        labelTexture: "",
                        cameraRotationY: .5 * -Math.PI,
                        cameraRotationX: -.16,
                        cameraElevation: .07,
                        hasContent: !1,
                        category: !1
                    }, {
                        navName: "Les Brets",
                        modelName: "field09",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField09TitleTexture",
                        labelTexture: "merfyFieldLabelTexture",
                        cameraRotationY: .5 * -Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Le Closet",
                        modelName: "field10",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField10TitleTexture",
                        labelTexture: "",
                        cameraRotationY: .6 * -Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !1,
                        category: !1
                    }, {
                        navName: "Le Mont Agé",
                        modelName: "field11",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField11TitleTexture",
                        labelTexture: "merfyFieldLabelTexture",
                        cameraRotationY: .5 * -Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Alliées",
                        modelName: "field12",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField12TitleTexture",
                        labelTexture: "merfyFieldLabelTexture",
                        cameraRotationY: .4 * -Math.PI,
                        cameraRotationX: -.18,
                        cameraElevation: .08,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Couarres",
                        modelName: "field13",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField13TitleTexture",
                        labelTexture: "merfyField13LabelTexture",
                        cameraRotationY: .5 * -Math.PI,
                        cameraRotationX: -.14,
                        cameraElevation: .06,
                        hasContent: !0,
                        category: !1
                    }, {
                        navName: "Les Heurtes\nBises",
                        modelName: "field14",
                        subTitleTexture: "merfyFieldSubTitleTexture",
                        titleTexture: "merfyField14TitleTexture",
                        labelTexture: "merfyField14LabelTexture",
                        cameraRotationY: .4 * -Math.PI,
                        cameraRotationX: -.14,
                        cameraElevation: .06,
                        hasContent: !0,
                        category: !1
                    }],
                    places: [{
                        url: null,
                        blazonTexture: "domainBlazonTexture",
                        labelTexture: "domainLabelTexture",
                        x: -.23,
                        y: .28,
                        z: 1.19
                    }]
                }
            }
        }
          , Qt = i("5d59")
          , Kt = i.n(Qt)
          , Zt = i("dbc7")
          , ei = i.n(Zt)
          , ti = i("b01f")
          , ii = i.n(ti)
          , ai = i("45ee")
          , si = i.n(ai)
          , ni = i("7f07")
          , ri = i.n(ni)
          , oi = i("ebce")
          , li = i.n(oi)
          , ui = i("eee1")
          , hi = i.n(ui)
          , ci = i("2a10")
          , di = i.n(ci)
          , mi = i("cea8")
          , pi = i.n(mi)
          , gi = i("8ef7")
          , vi = i.n(gi)
          , fi = i("9a2c")
          , bi = i.n(fi)
          , xi = i("220b")
          , yi = i.n(xi)
          , wi = i("5d4d")
          , Ti = i.n(wi)
          , Si = i("c78c")
          , ki = i.n(Si)
          , Pi = i("1173")
          , Ci = i.n(Pi)
          , zi = i("551d")
          , Ri = i.n(zi)
          , Fi = i("f65b")
          , Ai = i.n(Fi)
          , Li = i("fa52")
          , Ei = i.n(Li)
          , Mi = i("153a")
          , Oi = i.n(Mi)
          , Bi = i("dc43")
          , Ii = i.n(Bi)
          , qi = i("ed9f")
          , Di = i.n(qi)
          , Vi = i("c0ff")
          , Ni = i.n(Vi)
          , Hi = i("a447")
          , _i = i.n(Hi)
          , ji = i("03cf")
          , Ui = i.n(ji)
          , Wi = i("99c0")
          , Gi = i.n(Wi)
          , Yi = i("f9c5")
          , $i = i.n(Yi)
          , Xi = i("e3bb")
          , Ji = i.n(Xi)
          , Qi = i("7e10")
          , Ki = i.n(Qi)
          , Zi = i("0d18")
          , ea = i.n(Zi)
          , ta = i("2022")
          , ia = i.n(ta)
          , aa = i("46c1")
          , sa = i.n(aa)
          , na = i("1eaa")
          , ra = i.n(na)
          , oa = i("43bc")
          , la = i.n(oa)
          , ua = i("70c9")
          , ha = i.n(ua)
          , ca = i("1588")
          , da = i.n(ca)
          , ma = i("b64b7")
          , pa = i.n(ma)
          , ga = i("2e21")
          , va = i.n(ga)
          , fa = i("b659")
          , ba = i.n(fa)
          , xa = i("2093")
          , ya = i.n(xa)
          , wa = i("4f51")
          , Ta = i.n(wa)
          , Sa = i("3c9e")
          , ka = i.n(Sa)
          , Pa = i("1f15")
          , Ca = i.n(Pa)
          , za = i("2ce1")
          , Ra = i.n(za)
          , Fa = i("640b")
          , Aa = i.n(Fa)
          , La = i("0930")
          , Ea = i.n(La)
          , Ma = i("34dd")
          , Oa = i.n(Ma)
          , Ba = i("592f")
          , Ia = i.n(Ba)
          , qa = i("cea2")
          , Da = i.n(qa)
          , Va = i("2fb5")
          , Na = i.n(Va)
          , Ha = i("6729")
          , _a = i.n(Ha)
          , ja = i("9976")
          , Ua = i.n(ja)
          , Wa = i("c73c")
          , Ga = i.n(Wa)
          , Ya = i("a7b1")
          , $a = i.n(Ya)
          , Xa = i("eb83")
          , Ja = i.n(Xa)
          , Qa = i("ae6d")
          , Ka = i.n(Qa)
          , Za = i("0cfa")
          , es = i.n(Za)
          , ts = i("b8a8")
          , is = i.n(ts)
          , as = i("54e0")
          , ss = i.n(as)
          , ns = i("f3da")
          , rs = i.n(ns)
          , os = i("d6f9")
          , ls = i.n(os)
          , us = i("90b2")
          , hs = i.n(us)
          , cs = i("da5d")
          , ds = i.n(cs)
          , ms = i("24cd")
          , ps = i.n(ms)
          , gs = i("f336")
          , vs = i.n(gs)
          , fs = i("d102")
          , bs = i.n(fs)
          , xs = i("d068")
          , ys = i.n(xs)
          , ws = i("4881")
          , Ts = i.n(ws)
          , Ss = i("3139")
          , ks = i.n(Ss)
          , Ps = i("de3a")
          , Cs = i.n(Ps)
          , zs = i("7535")
          , Rs = i.n(zs)
          , Fs = i("52d2")
          , As = i.n(Fs)
          , Ls = i("ac73")
          , Es = i.n(Ls)
          , Ms = i("64bd")
          , Os = i.n(Ms)
          , Bs = i("a271")
          , Is = i.n(Bs)
          , qs = i("5f75")
          , Ds = i.n(qs)
          , Vs = function(e) {
            return [{
                name: "intro",
                items: [{
                    name: "mapButton",
                    source: Kt.a
                }, {
                    name: "menuButton",
                    source: ei.a,
                    type: "texture"
                }, {
                    name: "cursorNorth",
                    source: ii.a,
                    type: "texture"
                }, {
                    name: "avize" === e ? "avizeTerrainData1" : "merfyTerrainData1",
                    source: "avize" === e ? Oa.a : Ai.a,
                    type: "texture"
                }, {
                    name: "perlin",
                    source: di.a,
                    type: "texture"
                }, {
                    name: "paper",
                    source: pi.a,
                    type: "texture"
                }, {
                    name: "merfyPreview",
                    source: Ui.a
                }, {
                    name: "avizePreview",
                    source: $a.a
                }, {
                    name: "arrowButton",
                    source: vi.a
                }]
            }, {
                name: "rest",
                items: [{
                    name: "soundLeaveIntro",
                    source: Cs.a
                }, {
                    name: "soundLoopFree",
                    source: Rs.a
                }, {
                    name: "clouds",
                    source: si.a,
                    type: "texture"
                }, {
                    name: "paintingMask",
                    source: ri.a,
                    type: "texture"
                }, {
                    name: "fieldsModel",
                    source: li.a
                }, {
                    name: "blazonData",
                    source: hi.a,
                    type: "texture"
                }, {
                    name: "compassArrow",
                    source: bi.a,
                    type: "texture"
                }, {
                    name: "reims",
                    source: yi.a,
                    type: "texture"
                }, {
                    name: "domainBlazon",
                    source: Ti.a,
                    type: "texture"
                }, {
                    name: "hotelBlazon",
                    source: ki.a,
                    type: "texture"
                }, {
                    name: "domainLabel",
                    source: Ci.a,
                    type: "texture"
                }, {
                    name: "hotelLabel",
                    source: Ri.a,
                    type: "texture"
                }, {
                    name: "avize" === e ? "merfyTerrainData1" : "avizeTerrainData1",
                    source: "avize" === e ? Ai.a : Oa.a,
                    type: "texture"
                }, {
                    name: "merfyTerrainData2",
                    source: Ei.a,
                    type: "texture"
                }, {
                    name: "merfyTerrainData3",
                    source: Oi.a,
                    type: "texture"
                }, {
                    name: "merfyVillageModel",
                    source: Ii.a
                }, {
                    name: "merfyStreetsModel",
                    source: Di.a
                }, {
                    name: "merfyStreets",
                    source: Ni.a,
                    type: "texture"
                }, {
                    name: "merfyFieldsModel",
                    source: _i.a
                }, {
                    name: "merfyFieldSubTitle",
                    source: Gi.a,
                    type: "texture"
                }, {
                    name: "merfyField01Title",
                    source: $i.a,
                    type: "texture"
                }, {
                    name: "merfyField02Title",
                    source: Ji.a,
                    type: "texture"
                }, {
                    name: "merfyField03Title",
                    source: Ki.a,
                    type: "texture"
                }, {
                    name: "merfyField04Title",
                    source: ea.a,
                    type: "texture"
                }, {
                    name: "merfyField05Title",
                    source: ia.a,
                    type: "texture"
                }, {
                    name: "merfyField06Title",
                    source: sa.a,
                    type: "texture"
                }, {
                    name: "merfyField07Title",
                    source: ra.a,
                    type: "texture"
                }, {
                    name: "merfyField08Title",
                    source: la.a,
                    type: "texture"
                }, {
                    name: "merfyField09Title",
                    source: ha.a,
                    type: "texture"
                }, {
                    name: "merfyField10Title",
                    source: da.a,
                    type: "texture"
                }, {
                    name: "merfyField11Title",
                    source: pa.a,
                    type: "texture"
                }, {
                    name: "merfyField12Title",
                    source: va.a,
                    type: "texture"
                }, {
                    name: "merfyField13Title",
                    source: ba.a,
                    type: "texture"
                }, {
                    name: "merfyField14Title",
                    source: ya.a,
                    type: "texture"
                }, {
                    name: "merfyFieldLabel",
                    source: Ta.a,
                    type: "texture"
                }, {
                    name: "merfyField01Label",
                    source: ka.a,
                    type: "texture"
                }, {
                    name: "merfyField03Label",
                    source: Ca.a,
                    type: "texture"
                }, {
                    name: "merfyField04Label",
                    source: Ra.a,
                    type: "texture"
                }, {
                    name: "merfyField13Label",
                    source: Aa.a,
                    type: "texture"
                }, {
                    name: "merfyField14Label",
                    source: Ea.a,
                    type: "texture"
                }, {
                    name: "avizeTerrainData2",
                    source: Ia.a,
                    type: "texture"
                }, {
                    name: "avizeTerrainData3",
                    source: Da.a,
                    type: "texture"
                }, {
                    name: "avizeVillageModel",
                    source: Na.a
                }, {
                    name: "avizeStreetsModel",
                    source: _a.a
                }, {
                    name: "avizeStreets",
                    source: Ua.a,
                    type: "texture"
                }, {
                    name: "avizeFieldsModel",
                    source: Ga.a
                }, {
                    name: "avizeFieldSubTitle",
                    source: Ja.a,
                    type: "texture"
                }, {
                    name: "avizeField01Title",
                    source: Ka.a,
                    type: "texture"
                }, {
                    name: "avizeField02Title",
                    source: es.a,
                    type: "texture"
                }, {
                    name: "avizeField03Title",
                    source: is.a,
                    type: "texture"
                }, {
                    name: "avizeField04Title",
                    source: ss.a,
                    type: "texture"
                }, {
                    name: "avizeField05Title",
                    source: rs.a,
                    type: "texture"
                }, {
                    name: "avizeField06Title",
                    source: ls.a,
                    type: "texture"
                }, {
                    name: "avizeField07Title",
                    source: hs.a,
                    type: "texture"
                }, {
                    name: "avizeField08Title",
                    source: ds.a,
                    type: "texture"
                }, {
                    name: "avizeField09Title",
                    source: ps.a,
                    type: "texture"
                }, {
                    name: "avizeField10Title",
                    source: vs.a,
                    type: "texture"
                }, {
                    name: "avizeField11Title",
                    source: bs.a,
                    type: "texture"
                }, {
                    name: "avizeField12Title",
                    source: ys.a,
                    type: "texture"
                }, {
                    name: "avizeField13Title",
                    source: Ts.a,
                    type: "texture"
                }, {
                    name: "avizeFieldLabel",
                    source: ks.a,
                    type: "texture"
                }]
            }, {
                name: "sounds",
                items: [{
                    name: "soundLoopField",
                    source: As.a
                }, {
                    name: "soundLeaveField",
                    source: Es.a
                }, {
                    name: "soundChangeVillage",
                    source: Is.a
                }, {
                    name: "soundGoField",
                    source: Os.a
                }, {
                    name: "soundGoMap",
                    source: Ds.a
                }]
            }]
        }
          , Ns = function(e) {
            Object(B["a"])(i, e);
            var t = Object(I["a"])(i);
            function i(e) {
                var a;
                Object(M["a"])(this, i),
                a = t.call(this),
                a.$canvas = e.$canvas,
                a.texts = e.texts,
                a.defaultVillageName = e.defaultVillageName,
                a.defaultFieldIndex = e.defaultFieldIndex,
                a.showIntro = e.showIntro,
                a.showLoader = e.showLoader,
                a.notFound = e.notFound,
                a.pencilColor = e.pencilColor,
                a.paperColor = e.paperColor,
                a.hasSound = e.hasSound,
                a.playing = !0,
                a.time = new U["a"],
                a.sizes = new j({
                    throttle: 200
                }),
                a.resources = new J(Vs()),
                a.restLoaded = !1;
                var s = 0;
                return r["a"].ticker.remove(r["a"].updateRoot),
                a.time.on("tick", (function() {
                    s += a.time.delta * (a.debug ? 2 : 1),
                    r["a"].updateRoot(s / 1e3),
                    a.playing
                }
                )),
                a.setBreakpoints(),
                a.setStats(),
                a.setSteps(),
                a.resources.on("progress", (function(e) {
                    if ("rest" === e.name) {
                        var t = e.loaded / e.toLoad;
                        a.world.villages[a.defaultVillageName].interfaces.items.nav.bar.setProgress(t)
                    }
                }
                )),
                a.resources.on("groupEnd", (function(e) {
                    if ("intro" === e.name)
                        a.steps.next();
                    else if ("rest" === e.name) {
                        a.restLoaded = !0,
                        a.world.setRest(),
                        "loading-rest" === a.steps.current && a.steps.next(),
                        a.scene.add(a.overlay.mesh),
                        a.scene.add(a.originalCamera),
                        a.scene.add(a.cursor.mesh),
                        a.scene.add(a.cursor.label.mesh),
                        a.scene.add(a.intro.mesh);
                        var t, i = Object(L["a"])(a.world.villages.all);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var s, n = t.value, r = Object(L["a"])(n.interfaces.items.all);
                                try {
                                    for (r.s(); !(s = r.n()).done; ) {
                                        var o, l = s.value, u = Object(L["a"])(l.meshes);
                                        try {
                                            for (u.s(); !(o = u.n()).done; ) {
                                                var h = o.value;
                                                a.scene.add(h)
                                            }
                                        } catch (p) {
                                            u.e(p)
                                        } finally {
                                            u.f()
                                        }
                                    }
                                } catch (p) {
                                    r.e(p)
                                } finally {
                                    r.f()
                                }
                            }
                        } catch (p) {
                            i.e(p)
                        } finally {
                            i.f()
                        }
                        var c, d = Object(L["a"])(a.world.villages.all);
                        try {
                            var m = function() {
                                var e = c.value;
                                e.navigation.on("goMenu", (function() {
                                    a.trigger("goMenu")
                                }
                                )),
                                e.navigation.on("goContent", (function(t) {
                                    a.trigger("goContent", [e.name, t])
                                }
                                ))
                            };
                            for (d.s(); !(c = d.n()).done; )
                                m()
                        } catch (p) {
                            d.e(p)
                        } finally {
                            d.f()
                        }
                    }
                }
                )),
                a
            }
            return Object(O["a"])(i, [{
                key: "setBreakpoints",
                value: function() {
                    var e = this;
                    this.breakpoints = {},
                    this.breakpoints.steps = [1600, 1250, 1e3, 750, 500],
                    this.breakpoints.current = null,
                    this.breakpoints.currentIndex = null,
                    this.breakpoints.update = function() {
                        e.breakpoints.current = 1 / 0,
                        e.breakpoints.currentIndex = 0;
                        var t, i = 1, a = Object(L["a"])(e.breakpoints.steps);
                        try {
                            for (a.s(); !(t = a.n()).done; ) {
                                var s = t.value;
                                e.sizes.viewport.width < s && (e.breakpoints.current = s,
                                e.breakpoints.currentIndex = i),
                                i++
                            }
                        } catch (n) {
                            a.e(n)
                        } finally {
                            a.f()
                        }
                    }
                    ,
                    this.sizes.on("resize", this.breakpoints.update),
                    this.breakpoints.update()
                }
            }, {
                key: "setStats",
                value: function() {
                    var e = this;
                    this.stats = {},
                    this.stats.active = !1,
                    this.stats.instance = new N.a,
                    this.stats.instance.showPanel(0),
                    this.time.on("tick", (function() {
                        e.stats.active && (e.stats.instance.end(),
                        e.stats.instance.begin())
                    }
                    )),
                    this.stats.toggle = function() {
                        e.stats.active ? e.stats.deactivate() : e.stats.activate()
                    }
                    ,
                    this.stats.activate = function() {
                        e.stats.active || (document.body.appendChild(e.stats.instance.dom),
                        e.stats.active = !0)
                    }
                    ,
                    this.stats.deactivate = function() {
                        e.stats.active && (document.body.removeChild(e.stats.instance.dom),
                        e.stats.active = !1)
                    }
                    ,
                    window.addEventListener("keydown", (function(t) {
                        "KeyF" === t.code && e.stats.toggle()
                    }
                    ))
                }
            }, {
                key: "setSteps",
                value: function() {
                    var e = this;
                    this.steps = {},
                    this.steps.all = ["loading-intro", "intro", "loading-rest", "village"],
                    this.steps.current = "loading-intro",
                    this.steps.next = function() {
                        var t = e.steps.current;
                        switch (t) {
                        case "loading-intro":
                            e.steps.current = "intro",
                            e.setConfig(),
                            e.setDebug(),
                            e.setQuality(),
                            e.setColors(),
                            e.setScene(),
                            e.setOriginalCamera(),
                            e.setRenderer(),
                            e.setSounds(),
                            e.setOverlay(),
                            e.setCursor(),
                            e.setIntro(),
                            e.setWorld(),
                            e.setPerformanceMonitor(),
                            e.setRender(),
                            r["a"].to(e.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength, {
                                value: 1.8,
                                ease: "power1.inOut",
                                duration: e.showIntro ? 5 : 3
                            }),
                            r["a"].to(e.renderer.passes.composition.compositionPass.uniforms.uVignetteOffset, {
                                value: -.28,
                                ease: "power1.inOut",
                                duration: e.showIntro ? 5 : 3
                            }),
                            e.showIntro || e.steps.next();
                            break;
                        case "intro":
                            e.steps.current = "loading-rest",
                            e.sounds.play("loopFree"),
                            r["a"].fromTo(e.renderer.passes.composition.compositionPass.uniforms.uPaperStrength, {
                                value: 0
                            }, {
                                value: .25,
                                duration: e.showIntro ? 8 : 3,
                                ease: "power1.in"
                            }),
                            e.showIntro || e.showLoader ? (e.intro && e.intro.hide(),
                            e.world.villages[e.defaultVillageName].interfaces.activate(),
                            e.world.villages[e.defaultVillageName].interfaces.items.nav.show(),
                            e.world.villages[e.defaultVillageName].interfaces.items.loading.show(),
                            e.restLoaded && (e.world.villages[e.defaultVillageName].interfaces.items.nav.bar.fakeProgress(),
                            r["a"].delayedCall(4, (function() {
                                e.steps.next()
                            }
                            )))) : e.restLoaded && e.steps.next();
                            break;
                        case "loading-rest":
                            if (e.restLoaded) {
                                e.steps.current = "village",
                                e.world.restIsActive = !0,
                                e.world.villages.go(e.defaultVillageName),
                                r["a"].fromTo(e.renderer.passes.composition.compositionPass.uniforms.uPencilStrength, {
                                    value: .25
                                }, {
                                    value: .82,
                                    duration: 3,
                                    ease: "power1.out"
                                });
                                var i = e.world.villages[e.defaultVillageName];
                                i.interfaces.items.nav.bar.leaveProgress(),
                                i.interfaces.items.loading.hide((function() {
                                    i.interfaces.items.all = i.interfaces.items.all.filter((function(e) {
                                        return e !== i.interfaces.items.loading
                                    }
                                    )),
                                    i.interfaces.items.loading.destroy(),
                                    i.interfaces.items.loading = null
                                }
                                )),
                                window.requestAnimationFrame((function() {
                                    window.requestAnimationFrame((function() {
                                        window.requestAnimationFrame((function() {
                                            e.quality.applyQuality(e.quality.qualityLevel),
                                            e.quality.startTest()
                                        }
                                        ))
                                    }
                                    ))
                                }
                                )),
                                e.qualityInterval = window.setInterval((function() {
                                    e.quality.startTest()
                                }
                                ), 3e4)
                            }
                            break
                        }
                        console.log("next step: ".concat(t, " ➡ ").concat(e.steps.current))
                    }
                }
            }, {
                key: "setConfig",
                value: function() {
                    var e = this;
                    this.config = {},
                    this.config.mobile = navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/Windows Phone/i),
                    this.config.iOS = ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend"in document,
                    this.config.touch = !1,
                    window.addEventListener("touchstart", (function() {
                        window.localStorage.setItem("touch", "1"),
                        e.config.touch = !0
                    }
                    ), {
                        once: !0,
                        passive: !0
                    }),
                    this.config.texts = this.texts,
                    this.config.data = Jt,
                    this.config.debug = "#debug" === window.location.hash,
                    this.config.pixelRatio = 2
                }
            }, {
                key: "setDebug",
                value: function() {
                    this.config.debug && (this.debug = new D["a"]({
                        width: 420
                    }))
                }
            }, {
                key: "setColors",
                value: function() {
                    var e = this;
                    if (this.colors = {},
                    this.colors.lightPencil = {},
                    this.colors.lightPencil.string = "#ded5c1",
                    this.colors.lightPencil.three = new q["j"](this.colors.lightPencil.string),
                    this.colors.pencil = {},
                    this.colors.pencil.default = "#8c887d",
                    this.colors.pencil.string = this.pencilColor ? this.pencilColor : this.colors.pencil.default,
                    this.colors.pencil.three = new q["j"](this.colors.pencil.string),
                    this.colors.darkPencil = {},
                    this.colors.darkPencil.string = "#585858",
                    this.colors.darkPencil.three = new q["j"](this.colors.darkPencil.string),
                    this.colors.darkerPencil = {},
                    this.colors.darkerPencil.string = "#363832",
                    this.colors.darkerPencil.three = new q["j"](this.colors.darkerPencil.string),
                    this.colors.paper = {},
                    this.colors.paper.default = "#fff5dd",
                    this.colors.paper.string = this.paperColor ? this.paperColor : this.colors.paper.default,
                    this.colors.paper.three = new q["j"](this.colors.paper.string),
                    this.colors.highlight = {},
                    this.colors.highlight.string = "#c55656",
                    this.colors.highlight.three = new q["j"](this.colors.highlight.string),
                    this.colors.change = function() {
                        e.colors.lightPencil.three.set(e.colors.lightPencil.string),
                        e.colors.pencil.three.set(e.colors.pencil.string),
                        e.colors.darkPencil.three.set(e.colors.darkPencil.string),
                        e.colors.darkerPencil.three.set(e.colors.darkerPencil.string),
                        e.colors.paper.three.set(e.colors.paper.string),
                        e.colors.highlight.three.set(e.colors.highlight.string);
                        var t, i = Object(L["a"])(e.world.villages.all);
                        try {
                            for (i.s(); !(t = i.n()).done; ) {
                                var a, s = t.value, n = Object(L["a"])(s.navigation.interfaces.items.all);
                                try {
                                    for (n.s(); !(a = n.n()).done; ) {
                                        var r = a.value;
                                        r.update()
                                    }
                                } catch (o) {
                                    n.e(o)
                                } finally {
                                    n.f()
                                }
                            }
                        } catch (o) {
                            i.e(o)
                        } finally {
                            i.f()
                        }
                    }
                    ,
                    this.debug) {
                        var t = this.debug.addFolder("colors");
                        t.addColor(this.colors.lightPencil, "string").name("lightPencil").onFinishChange(this.colors.change),
                        t.addColor(this.colors.pencil, "string").name("pencil").onFinishChange(this.colors.change),
                        t.addColor(this.colors.darkPencil, "string").name("darkPencil").onFinishChange(this.colors.change),
                        t.addColor(this.colors.darkerPencil, "string").name("darkerPencil").onFinishChange(this.colors.change),
                        t.addColor(this.colors.paper, "string").name("paper").onFinishChange(this.colors.change),
                        t.addColor(this.colors.highlight, "string").name("highlight").onFinishChange(this.colors.change)
                    }
                }
            }, {
                key: "setScene",
                value: function() {
                    this.scene = new q["yb"]
                }
            }, {
                key: "setRenderer",
                value: function() {
                    this.renderer = new Mt({
                        config: this.config,
                        debug: this.debug,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        $canvas: this.$canvas,
                        scene: this.scene,
                        originalCamera: this.originalCamera,
                        colors: this.colors
                    })
                }
            }, {
                key: "setSounds",
                value: function() {
                    this.sounds = new Bt({
                        config: this.config,
                        debug: this.debug,
                        resources: this.resources,
                        muted: !1 !== this.hasSound && null
                    })
                }
            }, {
                key: "setOverlay",
                value: function() {
                    this.overlay = new Nt({
                        debug: this.debug,
                        colors: this.colors,
                        scene: this.scene
                    })
                }
            }, {
                key: "setCursor",
                value: function() {
                    this.cursor = new Ut({
                        config: this.config,
                        debug: this.debug,
                        sizes: this.sizes,
                        time: this.time,
                        resources: this.resources,
                        colors: this.colors,
                        scene: this.scene,
                        originalCamera: this.originalCamera
                    })
                }
            }, {
                key: "setIntro",
                value: function() {
                    this.intro = new $t({
                        debug: this.debug,
                        sizes: this.sizes,
                        time: this.time,
                        defaultVillageName: this.defaultVillageName,
                        resources: this.resources,
                        colors: this.colors,
                        scene: this.scene
                    }),
                    this.showIntro && this.intro.show()
                }
            }, {
                key: "setQuality",
                value: function() {
                    this.quality = new It({
                        application: this,
                        debug: this.debug,
                        config: this.config
                    })
                }
            }, {
                key: "setOriginalCamera",
                value: function() {
                    var e = this;
                    this.originalCamera = new q["ib"](65,this.sizes.viewport.width / this.sizes.viewport.height,.0025,40),
                    this.originalCamera.rotation.order = "YXZ",
                    this.originalCamera.position.set(3.5, 5.5, 2.5),
                    this.scene.add(this.originalCamera),
                    this.sizes.on("resize", (function() {
                        e.originalCamera.aspect = e.sizes.viewport.width / e.sizes.viewport.height,
                        e.originalCamera.updateProjectionMatrix()
                    }
                    ))
                }
            }, {
                key: "setWorld",
                value: function() {
                    this.world = new Ct({
                        config: this.config,
                        breakpoints: this.breakpoints,
                        quality: this.quality,
                        debug: this.debug,
                        sizes: this.sizes,
                        time: this.time,
                        sounds: this.sounds,
                        domElement: this.$canvas,
                        defaultVillageName: this.defaultVillageName,
                        defaultFieldIndex: this.defaultFieldIndex,
                        notFound: this.notFound,
                        resources: this.resources,
                        renderer: this.renderer,
                        overlay: this.overlay,
                        cursor: this.cursor,
                        originalCamera: this.originalCamera,
                        scene: this.scene,
                        colors: this.colors
                    })
                }
            }, {
                key: "setPerformanceMonitor",
                value: function() {
                    if (this.performanceMonitor = new Xt({
                        visible: !1
                    }),
                    this.debug) {
                        var e = this.debug.addFolder("performanceMonitor");
                        e.open(),
                        e.add(this.performanceMonitor, "show"),
                        e.add(this.performanceMonitor, "hide")
                    }
                }
            }, {
                key: "setRender",
                value: function() {
                    var e = this;
                    window.setInterval((function() {
                        e.performanceMonitor.flush()
                    }
                    ), 1e3),
                    this.time.on("tick", (function() {
                        e.playing && (e.performanceMonitor.varyingStart("highlight"),
                        e.world && e.world.setForPass("highlight"),
                        e.overlay.setForPass("highlight"),
                        e.cursor.setForPass("highlight"),
                        e.intro && e.intro.setForPass("highlight"),
                        e.renderer.setForPass("highlight"),
                        e.performanceMonitor.varyingEnd("highlight"),
                        "composition" !== e.renderer.passes.mode && "data" !== e.renderer.passes.mode && "all" !== e.renderer.passes.mode || (e.performanceMonitor.varyingStart("composition"),
                        e.world && e.world.setForPass("composition"),
                        e.overlay.setForPass("composition"),
                        e.cursor.setForPass("composition"),
                        e.intro && e.intro.setForPass("composition"),
                        e.renderer.setForPass("composition"),
                        e.performanceMonitor.varyingEnd("composition")),
                        e.performanceMonitor.varyingStart("overlay"),
                        "overlay" !== e.renderer.passes.mode && "all" !== e.renderer.passes.mode || (e.world && e.world.setForPass("overlay"),
                        e.overlay.setForPass("overlay"),
                        e.cursor.setForPass("overlay"),
                        e.intro && e.intro.setForPass("overlay"),
                        e.renderer.setForPass("overlay")),
                        e.performanceMonitor.varyingEnd("overlay"))
                    }
                    ))
                }
            }, {
                key: "showBackground",
                value: function() {
                    this.intro.show(),
                    this.world.villages.current.deactivate()
                }
            }, {
                key: "hideBackground",
                value: function() {
                    this.intro.hide()
                }
            }, {
                key: "pause",
                value: function() {
                    this.playing = !1,
                    this.cursor.playing = !1,
                    this.sizes.paused = !0,
                    this.sizes.oldValues = {
                        width: this.sizes.width,
                        height: this.sizes.height,
                        viewportWidth: this.sizes.viewport.width,
                        viewportHeight: this.sizes.viewport.height
                    },
                    this.$canvas.style.display = "none",
                    this.sounds.mute(),
                    this.intro && (this.intro.playing = !1);
                    var e, t = Object(L["a"])(this.world.villages.all);
                    try {
                        for (t.s(); !(e = t.n()).done; ) {
                            var i = e.value;
                            i.playing = !1,
                            i.camera.playing = !1,
                            i.fieldsVillage.playing = !1,
                            i.navigation.playing = !1,
                            i.particlesVillage.playing = !1,
                            i.pencilVillage.playing = !1;
                            var a, s = Object(L["a"])(i.fieldsVillage.items);
                            try {
                                for (s.s(); !(a = s.n()).done; ) {
                                    var n = a.value;
                                    n.playing = !1
                                }
                            } catch (r) {
                                s.e(r)
                            } finally {
                                s.f()
                            }
                            i.navigation.autoplay.showNavTimeout && (i.navigation.autoplay.showNavTimeout.kill(),
                            i.navigation.autoplay.showNavTimeout = null),
                            i.navigation.autoplay.startTimeout && (i.navigation.autoplay.startTimeout.kill(),
                            i.navigation.autoplay.startTimeout = null),
                            i.navigation.autoplay.nextTimeout && (i.navigation.autoplay.nextTimeout.kill(),
                            i.navigation.autoplay.nextTimeout = null)
                        }
                    } catch (r) {
                        t.e(r)
                    } finally {
                        t.f()
                    }
                }
            }, {
                key: "resume",
                value: function() {
                    var e = this;
                    this.playing = !0,
                    this.cursor.playing = !0,
                    this.sizes.paused = !1,
                    this.sizes.width === this.sizes.oldValues.width && this.sizes.height === this.sizes.oldValues.height && this.sizes.viewport.width === this.sizes.oldValues.viewportWidth && this.sizes.viewport.height === this.sizes.oldValues.viewportHeight || this.sizes.resize(),
                    this.$canvas.style.display = "block",
                    (this.hasSound || null === this.hasSound && !window.localStorage.getItem("muted")) && r["a"].delayedCall(1, (function() {
                        e.sounds.unmute()
                    }
                    )),
                    this.intro && (this.intro.playing = !0);
                    var t, i = Object(L["a"])(this.world.villages.all);
                    try {
                        for (i.s(); !(t = i.n()).done; ) {
                            var a = t.value;
                            a.playing = !0,
                            a.camera.playing = !0,
                            a.fieldsVillage.playing = !0,
                            a.navigation.playing = !0,
                            a.particlesVillage.playing = !0,
                            a.pencilVillage.playing = !0;
                            var s, n = Object(L["a"])(a.fieldsVillage.items);
                            try {
                                for (n.s(); !(s = n.n()).done; ) {
                                    var o = s.value;
                                    o.playing = !0
                                }
                            } catch (l) {
                                n.e(l)
                            } finally {
                                n.f()
                            }
                        }
                    } catch (l) {
                        i.e(l)
                    } finally {
                        i.f()
                    }
                }
            }, {
                key: "restart",
                value: function(e) {
                    this.defaultVillageName = e.defaultVillageName,
                    this.defaultFieldIndex = e.defaultFieldIndex,
                    this.world.defaultVillageName = e.defaultVillageName,
                    this.world.defaultFieldIndex = e.defaultFieldIndex,
                    this.showIntro = e.showIntro,
                    this.hasSound = e.hasSound,
                    this.pencilColor = e.pencilColor,
                    this.colors.pencil.string = e.pencilColor ? e.pencilColor : this.colors.pencil.default,
                    this.colors.pencil.three.set(this.colors.pencil.string),
                    this.paperColor = e.paperColor,
                    this.colors.paper.string = e.paperColor ? e.paperColor : this.colors.paper.default,
                    this.colors.paper.three.set(this.colors.paper.string),
                    "village" === this.steps.current && ("village" === this.steps.current && this.world.villages.current.deactivate(null, !0),
                    this.renderer.passes.composition.compositionPass.uniforms.uPaperStrength.value = 0,
                    this.renderer.passes.composition.compositionPass.uniforms.uVignetteStrength.value = 0,
                    this.renderer.passes.composition.compositionPass.uniforms.uNoiseStrength.value = 0,
                    r["a"].fromTo(this.renderer.passes.composition.compositionPass.uniforms.uPencilStrength, {
                        value: .25
                    }, {
                        value: .82,
                        duration: 3,
                        ease: "power1.out"
                    }),
                    this.overlay.material.uniforms.uGlowAlpha.value = .3,
                    this.cursor.hide(0),
                    this.cursor.label.hide(0),
                    e.showIntro ? (this.intro.show(),
                    this.overlay.hide()) : (this.intro.active = !1,
                    "village" === this.steps.current && (this.world.villages.current = this.world.villages[e.defaultVillageName],
                    this.world.villages.current.navigation.defaultFieldIndex = "undefined" === typeof e.defaultFieldIndex ? null : e.defaultFieldIndex,
                    this.world.villages.current.camera.notFound = "undefined" !== typeof e.notFound && !!e.notFound,
                    this.world.villages.current.activate(),
                    this.world.villages.current.camera.reset())),
                    this.resume())
                }
            }, {
                key: "exit",
                value: function() {
                    var e = this;
                    this.scene.add(this.overlay.mesh),
                    this.overlay.show(1.5),
                    r["a"].delayedCall(1.5, (function() {
                        e.destroy()
                    }
                    ))
                }
            }, {
                key: "destroy",
                value: function() {
                    this.time.off("tick"),
                    this.sizes.off("resize"),
                    this.world && this.world.destroy(),
                    this.renderer.destroy(),
                    this.resources.destroy(),
                    this.overlay.destroy(),
                    this.cursor.destroy(),
                    this.intro && this.intro.destroy(),
                    this.quality.destroy(),
                    this.performanceMonitor.destroy(),
                    this.debug && this.debug.destroy(),
                    window.clearInterval(this.qualityInterval),
                    window.experience = null
                }
            }]),
            i
        }(_["a"])
          , Hs = {
            name: "Scene",
            data: function() {
                return {
                    showIntro: !0,
                    showLoader: !0,
                    notFound: !1,
                    village: "merfy",
                    fieldIndex: null,
                    pristine: !0
                }
            },
            computed: {
                description: function() {
                    var e, t = this.$t("common.validationAge"), i = t.split(" "), a = [], s = Object(L["a"])(i);
                    try {
                        for (s.s(); !(e = s.n()).done; ) {
                            var n, r = e.value, o = [], l = Object(L["a"])(r);
                            try {
                                for (l.s(); !(n = l.n()).done; ) {
                                    var u = n.value
                                      , h = {};
                                    h.value = u,
                                    h.delay = .5 + 1 * Math.random(),
                                    o.push(h)
                                }
                            } catch (c) {
                                l.e(c)
                            } finally {
                                l.f()
                            }
                            a.push(o)
                        }
                    } catch (c) {
                        s.e(c)
                    } finally {
                        s.f()
                    }
                    return a
                },
                enterWording: function() {
                    return '<span class="letter">' + this.$t("common.enter").split("").join('</span><span class="letter">') + "</span>"
                }
            },
            created: function() {},
            mounted: function() {
                !0 === this.$route.meta.gl && this.initiate()
            },
            methods: {
                restartDefault: function() {
                    var e = {
                        defaultVillageName: this.village,
                        defaultFieldIndex: this.fieldIndex,
                        notFound: !1,
                        showIntro: this.pristine,
                        showLoader: this.pristine,
                        pencilColor: null,
                        paperColor: null,
                        hasSound: null
                    };
                    this.experience.restart(e)
                },
                restartSatelliteView: function() {
                    var e = {
                        defaultVillageName: "merfy",
                        defaultFieldIndex: null,
                        notFound: !1,
                        showIntro: !0,
                        pencilColor: "#d1cfca",
                        paperColor: "#fdfcf5",
                        hasSound: !1
                    };
                    this.experience.restart(e)
                },
                initiate: function() {
                    var e = this
                      , t = this.$t("scene")
                      , i = {
                        $canvas: this.$refs.canvas,
                        texts: t,
                        defaultVillageName: this.village,
                        defaultFieldIndex: this.fieldIndex,
                        showIntro: this.showIntro,
                        showLoader: this.showLoader,
                        notFound: !1,
                        hasSound: null
                    };
                    this.$route.meta.fadedScene ? (i.defaultVillageName = "merfy",
                    i.defaultFieldIndex = null,
                    i.notFound = !1,
                    i.showIntro = !0,
                    i.pencilColor = "#d1cfca",
                    i.paperColor = "#fdfcf5",
                    i.hasSound = !1) : "PageNotFound" === this.$route.name && (i.showIntro = !1,
                    i.showLoader = !1,
                    i.notFound = !0,
                    i.pencilColor = null,
                    i.paperColor = null,
                    i.hasSound = null),
                    this.experience = new Ns(i),
                    window.experience = this.experience,
                    this.experience.on("goMenu", (function() {
                        e.$root.menuOpened = !0
                    }
                    )),
                    this.experience.on("goContent", (function(t, i) {
                        e.experience.pause();
                        var a = E[t][i];
                        e.$router.push({
                            name: "ParcelleDetails",
                            params: {
                                slug: a
                            }
                        }).catch((function() {}
                        ))
                    }
                    ))
                },
                enterClick: function() {
                    var e = this;
                    this.showIntro = !1,
                    window.setTimeout((function() {
                        e.pristine = !1,
                        e.experience.steps.next()
                    }
                    ), 1500)
                }
            }
        };
        var _s = Hs
          , js = (i("1212"),
        i("4e5d"),
        Object(d["a"])(_s, F, A, !1, null, "e6107ffe", null))
          , Us = js.exports
          , Ws = {
            name: "App",
            components: {
                Scene: Us,
                MenuCta: p,
                MainMenu: T,
                CookieBanner: R
            },
            data: function() {
                return {
                    cookieAccepted: localStorage.getItem("cookieAccepted")
                }
            },
            watch: {
                $route: {
                    handler: function(e, t) {
                        this.previousRoute = t
                    }
                }
            },
            computed: {
                viewKey: function() {
                    if (this.$route.meta.keyed) {
                        var e = "".concat(this.$route.name, "-").concat(this.$route.params.slug, "-").concat(this.$route.params.locale);
                        return e
                    }
                    var t = this.$route.name + this.$route.params.locale;
                    return t
                }
            },
            methods: {
                checkRouteForXP: function() {
                    this.$route.meta.gl && (this.$refs.scene.experience ? this.$route.meta.fadedScene && !this.previousRoute.meta.fadedScene ? this.$refs.scene.restartSatelliteView() : "Home" === this.$route.name ? this.$refs.scene.restartDefault() : this.$refs.scene.experience.resume() : (console.log("Scene: initiate"),
                    this.$refs.scene.initiate()))
                },
                handleEnter: function(e, t) {
                    var i = this;
                    if (this.menuLeaveTl) {
                        if (!this.menuLeaveTl.paused()) {
                            var a = this.menuLeaveTl.duration() * (1 - this.menuLeaveTl.progress());
                            r["a"].delayedCall(a, (function() {
                                i.checkRouteForXP()
                            }
                            ))
                        }
                    } else
                        this.checkRouteForXP();
                    var s = new r["a"].timeline({
                        onComplete: t
                    });
                    s.resilientToSceneClear = !0,
                    e.classList.contains("vin") ? s.from(e.querySelectorAll(".notice, h1, .discover-cta, .wine-cta"), {
                        duration: 1.2,
                        alpha: 0,
                        ease: "expo.in",
                        clearProps: "opacity"
                    }, "a").from(e.querySelector(".packshot-sizer"), {
                        duration: .3125,
                        alpha: 0,
                        ease: "linear",
                        clearProps: "opacity"
                    }, "a").from(e.querySelector(".packshot-sizer"), {
                        duration: 1,
                        y: "10%",
                        ease: "power2.out"
                    }, "a").from(e.querySelectorAll(".wine-cta-caption, .details, .cta"), {
                        duration: .625,
                        alpha: 0,
                        ease: "linear",
                        clearProps: "opacity"
                    }, "a+=0.325").add(this.$refs.view.$refs.canvasText.$refs.perlin.handleEnter(2), "a+=0.325") : e.classList.contains("details") ? s.from(e, 2, {
                        alpha: 0
                    }, "a") : e.classList.contains("contact") ? s.set(e, {
                        alpha: 1
                    }, "a") : s.fromTo(e, {
                        alpha: 0
                    }, {
                        duration: .625,
                        alpha: 1
                    })
                },
                handleLeave: function(e, t) {
                    var i = this
                      , a = new r["a"].timeline({
                        onComplete: function() {
                            if (i.$refs.scene.experience && !i.$route.meta.gl) {
                                console.log("Scene: pause");
                                var e = r["a"].globalTimeline.getChildren();
                                e.forEach((function(e) {
                                    e.resilientToSceneClear || e.kill(!0)
                                }
                                )),
                                i.$refs.scene.experience.pause()
                            }
                            t()
                        }
                    });
                    a.resilientToSceneClear = !0,
                    a.to(e, .625, {
                        alpha: 0
                    }, "a"),
                    this.$refs.scene.experience && this.$refs.scene.experience.playing && !this.$route.meta.gl && a.to(this.$refs.scene.$el, {
                        duration: .625,
                        alpha: 0,
                        clearProps: "all"
                    })
                },
                handleEnterMenu: function(e, t) {
                    var i = this
                      , a = new r["a"].timeline({
                        onComplete: function() {
                            t()
                        }
                    });
                    a.resilientToSceneClear = !0,
                    a.from(e, {
                        alpha: 0,
                        duration: .625,
                        ease: "linear",
                        onComplete: function() {
                            console.log("menu Scene: pause"),
                            i.$refs.scene.experience && i.$refs.scene.experience.pause()
                        }
                    }, "s").from(e.querySelectorAll(".fade-helper, .indicator"), {
                        alpha: 0,
                        duration: 2,
                        ease: "linear"
                    }, "a").from(e.querySelector(".background"), {
                        alpha: 0,
                        duration: 2,
                        ease: "linear"
                    }, "a+=0.3125").from(e.querySelector(".main-section"), {
                        alpha: 0,
                        duration: 1,
                        ease: "linear"
                    }, "a+=0.3125").add(this.$refs.menu.$refs.canvasText.$refs.perlin.handleEnter(3, !1), "a+=0.625")
                },
                handleLeaveMenu: function(e, t) {
                    console.log("leavemenu"),
                    this.menuLeaveTl && this.menuLeaveTl.kill(),
                    !0 === this.$route.meta.gl && this.$refs.scene.experience ? (!0 === this.$root.needResume && this.$refs.scene.experience.resume(),
                    this.$root.needResume = !1) : this.$root.needResume = !1,
                    this.menuLeaveTl = new r["a"].timeline({
                        onComplete: t
                    }),
                    this.menuLeaveTl.resilientToSceneClear = !0,
                    this.menuLeaveTl.to(e.querySelectorAll(".fade-helper, .indicator"), .625, {
                        alpha: 0
                    }, "a").to(e.querySelector(".background"), .625, {
                        alpha: 0
                    }, "a").add(this.$refs.menu.$refs.canvasText.$refs.perlin.handleLeave(1), "a").to(e, .3215, {
                        alpha: 0
                    }, "d")
                }
            }
        }
          , Gs = Ws
          , Ys = (i("5c0b"),
        Object(d["a"])(Gs, s, n, !1, null, null, null))
          , $s = Ys.exports
          , Xs = (i("c975"),
        i("8c4f"))
          , Js = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div")
        }
          , Qs = []
          , Ks = {
            name: "Home"
        }
          , Zs = Ks
          , en = Object(d["a"])(Zs, Js, Qs, !1, null, null, null)
          , tn = en.exports
          , an = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "page-gabarit details"
            }, [i("div", {
                staticClass: "page-content"
            }, [i("router-link", {
                key: "wine-cta",
                ref: "wineCta",
                staticClass: "wine-cta",
                attrs: {
                    to: {
                        name: "Vin",
                        params: {
                            slug: e.currentWine.slug || e.$t("wines")[0].slug
                        }
                    }
                }
            }, [e._v(e._s(e.$t("common.wines")))]), i("MapCta", {
                key: "map-cta",
                ref: "mapCta"
            }), i("div", {
                ref: "navigator",
                class: ["navigator"]
            }, [i("div", {
                ref: "navigatorDecorator",
                staticClass: "decorator"
            }), e._l(e.navigator, (function(t) {
                return i("div", {
                    key: t.roman,
                    staticClass: "secant"
                }, [i("span", {
                    staticClass: "caption"
                }, [e._v(e._s(t.roman))])])
            }
            ))], 2), e.currentItem.ground ? i("div", {
                staticClass: "scroll-section"
            }, [i("div", {
                ref: "groundHeader",
                staticClass: "section ground-header"
            }, [i("h1", {
                staticClass: "small-heading"
            }, [e._v(e._s(e.currentItem.name))]), i("span", {
                staticClass: "heading-separator"
            }), i("div", {
                staticClass: "title-holder"
            }, [i("h2", {
                staticClass: "crossed section-sizer mobile-inline transparent"
            }, [i("CanvasText", {
                ref: "mainPerlin",
                attrs: {
                    captions: e.parcelleGroundCaption,
                    "font-size": 5,
                    mobile: {
                        fontSize: 2.5
                    },
                    stase: !0,
                    "custom-justify": "en" !== e.$route.params.locale || [{
                        align: "right",
                        offset: .45
                    }, {
                        align: "center"
                    }, {
                        align: "left",
                        offset: .6
                    }]
                }
            })], 1)]), i("div", {
                ref: "specifications",
                staticClass: "specifications center section-sizer main",
                domProps: {
                    innerHTML: e._s(e.currentItem.ground.specifications)
                }
            }), i("div", {
                staticClass: "description text section-sizer",
                domProps: {
                    innerHTML: e._s(e.currentItem.ground.description)
                }
            }), i("div", {
                staticClass: "specifications specifications-helper section-sizer",
                domProps: {
                    innerHTML: e._s(e.currentItem.ground.details)
                }
            })]), e.currentItem.ground && e.currentItem.ground.image ? i("div", {
                ref: "fullPage",
                staticClass: "full-page"
            }, [i("div", {
                staticClass: "image-helper"
            }, [i("img", {
                attrs: {
                    src: e.currentItem.ground.image
                }
            })])]) : e._e()]) : e._e(), e.currentItem.ground ? i("div", {
                ref: "undergroundSection",
                staticClass: "hider scroll-section"
            }, [i("div", {
                staticClass: "underground-section section"
            }, e._l(e.currentItem.ground.underground, (function(t, a) {
                return i("div", {
                    key: a,
                    staticClass: "underground section-sizer"
                }, [i("h3", {
                    domProps: {
                        innerHTML: e._s(t.title)
                    }
                }), i("div", {
                    staticClass: "content"
                }, [e._l(t.levels, (function(t, a) {
                    return i("div", {
                        key: a,
                        staticClass: "entry"
                    }, [i("span", {
                        domProps: {
                            innerHTML: e._s(t.name)
                        }
                    }), i("span", [e._v(e._s(t.caption))])])
                }
                )), i("div", {
                    staticClass: "entry spacer"
                })], 2), i("div", {
                    staticClass: "decorator"
                }, [i("div", {
                    staticClass: "image-helper"
                }, [i("PerlinImage", {
                    attrs: {
                        image: t.image
                    }
                })], 1)])])
            }
            )), 0)]) : e._e(), e.currentWine ? i("div", {
                ref: "wineSection",
                staticClass: "scroll-section wine-section"
            }, [e.currentWine ? i("div", {
                staticClass: "section wine-header"
            }, [i("h1", {
                staticClass: "small-heading"
            }, [e._v(e._s(e.currentWine.name))]), i("span", {
                staticClass: "heading-separator"
            }), i("h2", {
                staticClass: "crossed"
            }, [i("CanvasText", {
                ref: "winePerlin",
                attrs: {
                    captions: e.wineSpecificitesCaption,
                    "font-size": 4.375,
                    mobile: {
                        fontSize: 2.1875
                    },
                    tag: "p",
                    "custom-justify": "en" !== e.$route.params.locale || [{
                        align: "left",
                        offset: 1
                    }, {
                        align: "right",
                        offset: 1.625
                    }, {
                        align: "center"
                    }],
                    color: "#c23d2a"
                }
            })], 1), e.currentWine.specifications ? i("div", {
                staticClass: "specifications specifications-helper section-sizer main",
                domProps: {
                    innerHTML: e._s(e.currentWineSpecifications)
                }
            }) : e._e(), e.currentWine.packshot ? i("div", {
                ref: "packshot",
                staticClass: "packshot"
            }, [i("div", {
                ref: "packshotHelper",
                staticClass: "packshot-helper"
            }, [i("div", {
                staticClass: "image-helper",
                style: {
                    backgroundImage: "url(" + e.currentWine.packshot + ")"
                }
            })])]) : e._e()]) : e._e(), e.currentWine && e.currentWine.content ? i("div", {
                staticClass: "section wine-content"
            }, [i("div", {
                staticClass: "content"
            }, [e._l(e.currentWine.content, (function(e, t) {
                return i(e.type, {
                    key: t,
                    tag: "component",
                    staticClass: "component",
                    attrs: {
                        data: e
                    }
                })
            }
            )), i("DownloadCta", {
                staticClass: "block-component",
                attrs: {
                    href: e.currentWine.fichetechnique
                }
            })], 2)]) : e._e()]) : e._e()], 1), i("ParcelleFooter", {
                ref: "scrollLimit",
                attrs: {
                    parcelle: e.nextItem
                }
            })], 1)
        }
          , sn = []
          , nn = i("b35e");
        function rn(e) {
            if (isNaN(e))
                return NaN;
            var t = String(+e).split("")
              , i = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"]
              , a = ""
              , s = 3;
            while (s--)
                a = (i[+t.pop() + 10 * s] || "") + a;
            return Array(+t.join("") + 1).join("M") + a
        }
        var on = i("49ce")
          , ln = i("1663")
          , un = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "block-component"
            }, [e.data.heading ? i("div", {
                staticClass: "text title",
                domProps: {
                    innerHTML: e._s(e.data.heading)
                }
            }) : e._e(), e.data.text ? i("div", {
                staticClass: "text column",
                domProps: {
                    innerHTML: e._s(e.data.text)
                }
            }) : e._e()])
        }
          , hn = []
          , cn = {
            name: "BlockColumn",
            props: {
                data: {
                    type: Object,
                    default: function() {}
                }
            }
        }
          , dn = cn
          , mn = (i("c70e"),
        Object(d["a"])(dn, un, hn, !1, null, "4df85db3", null))
          , pn = mn.exports
          , gn = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "block-image block-component"
            }, [i("div", {
                staticClass: "spacer",
                style: {
                    backgroundImage: "url(" + e.data.url + ")"
                }
            }), i("img", {
                staticClass: "image",
                attrs: {
                    src: e.data.url
                }
            })])
        }
          , vn = []
          , fn = {
            name: "BlockImage",
            props: {
                data: {
                    type: Object,
                    default: function() {}
                }
            }
        }
          , bn = fn
          , xn = (i("c6a9"),
        Object(d["a"])(bn, gn, vn, !1, null, "276bfef9", null))
          , yn = xn.exports
          , wn = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "highlight",
                domProps: {
                    innerHTML: e._s(e.data.text)
                }
            })
        }
          , Tn = []
          , Sn = {
            name: "BlockHighlight",
            props: {
                data: {
                    type: Object,
                    default: function() {}
                }
            }
        }
          , kn = Sn
          , Pn = (i("b49f"),
        Object(d["a"])(kn, wn, Tn, !1, null, "a4dd3576", null))
          , Cn = Pn.exports
          , zn = i("0bd8")
          , Rn = i("3d5c")
          , Fn = i("9227")
          , An = {
            mixins: [on["a"]],
            components: {
                MapCta: b["a"],
                BlockParagraph: ln["a"],
                BlockColumn: pn,
                BlockHighlight: Cn,
                BlockImage: yn,
                DownloadCta: zn["a"],
                ParcelleFooter: Rn["a"],
                PerlinImage: Fn["a"],
                CanvasText: f["a"]
            },
            data: function() {
                return {
                    navigator: [],
                    idx: 0,
                    imageLoaded: !1
                }
            },
            computed: {
                parcelleGroundCaption: function() {
                    return this.splitParagraphs(this.$t("common.parcelleground"))
                },
                wineSpecificitesCaption: function() {
                    return this.splitParagraphs(this.$t("common.winespecificites"))
                },
                items: function() {
                    return [].concat(Object(W["a"])(this.$t("parcelles")), Object(W["a"])(this.$t("wines").filter((function(e) {
                        return "assemblage" === e.type
                    }
                    ))))
                },
                currentItem: function() {
                    var e = this
                      , t = this.items.find((function(t) {
                        return t.slug === e.$route.params.slug
                    }
                    ));
                    return t
                },
                currentWine: function() {
                    return "assemblage" === this.currentItem.type ? this.currentItem : this.currentItem.wine
                },
                currentWineSpecifications: function() {
                    var e = this.currentWine.name ? "<p>".concat(this.$t("common.name"), " / ").concat(this.currentWine.name, "</p>") : "";
                    return e += this.currentWine.specifications,
                    e
                },
                nextItem: function() {
                    var e = this.items.map((function(e) {
                        return e.slug
                    }
                    ))
                      , t = e.indexOf(this.$route.params.slug)
                      , i = t < e.length - 1 ? t + 1 : 0;
                    return this.items[i]
                }
            },
            created: function() {
                this.STs = []
            },
            mounted: function() {
                var e = this;
                r["a"].set(window, {
                    scrollTo: 0
                }),
                "#wine" === this.$route.hash && (this.scrollerCall = r["a"].delayedCall(.3, (function() {
                    r["a"].to(window, {
                        duration: 2,
                        scrollTo: ".wine-section"
                    })
                }
                ))),
                this.$nextTick((function() {
                    e.bindParallax(),
                    nn["a"].addEventListener("refreshInit", (function() {
                        e.onResized(window.innerWidth, window.innerHeight)
                    }
                    )),
                    nn["a"].addEventListener("refresh", (function() {
                        e.onResized(window.innerWidth, window.innerHeight)
                    }
                    ))
                }
                ));
                var t = new Image;
                t.onload = function() {
                    e.imageLoaded = !0
                }
                ,
                t.src = this.currentItem.ground.image
            },
            beforeDestroy: function() {
                this.scrollerCall.kill(),
                window.cancelAnimationFrame(this.frame),
                this.STs.forEach((function(e) {
                    e.kill()
                }
                ))
            },
            methods: {
                splitParagraphs: function(e) {
                    var t, i = [], a = /<p>([^<]*?)<\/p>/g;
                    while (null !== (t = a.exec(e)))
                        t.index === a.lastIndex && a.lastIndex++,
                        t.forEach((function(e, t) {
                            1 === t && i.push(e)
                        }
                        ));
                    return i
                },
                bindParallax: function() {
                    this.setNavigator(),
                    this.setImagesST(),
                    this.setTexts(),
                    this.lastScroll = 0,
                    this.ticking = !1
                },
                setImagesST: function() {
                    if (this.$refs.mainPerlin && this.$refs.mainPerlin.$refs.perlin) {
                        var e = (new r["a"].timeline).add(this.$refs.mainPerlin.$refs.perlin.handleEnter(), .625)
                          , t = nn["a"].create({
                            trigger: this.$el,
                            animation: e,
                            once: !0
                        });
                        this.STs.push(t)
                    }
                    if (this.$refs.packshot) {
                        var i = r["a"].timeline({
                            scrollTrigger: {
                                trigger: this.$refs.wineSection,
                                start: "middle top",
                                end: "+=500",
                                scrub: .625
                            }
                        });
                        i.from(this.$refs.packshotHelper, {
                            yPercent: 50
                        })
                    }
                    var a = this.$el.querySelectorAll(".block-image");
                    a.length > 0 && [].forEach.call(a, (function(e) {
                        var t = r["a"].timeline({
                            scrollTrigger: {
                                trigger: e,
                                start: "top bottom",
                                end: "+=500",
                                scrub: .625
                            }
                        });
                        t.from(e.querySelector(".spacer"), {
                            autoAlpha: .2,
                            scale: 1.1
                        })
                    }
                    ))
                },
                setNavigator: function() {
                    var e = this
                      , t = this.$el.querySelectorAll(".scroll-section")
                      , i = [].map.call(t, (function(e, t) {
                        return {
                            el: e,
                            i: t,
                            roman: rn(t + 1)
                        }
                    }
                    ));
                    this.$set(this, "navigator", i);
                    var a = new r["a"].timeline;
                    this.scrollLimitHeight = this.$refs.scrollLimit.$el.offsetHeight;
                    var s = nn["a"].create({
                        trigger: this.$refs.scrollLimit.$el,
                        animation: a,
                        start: "top bottom",
                        end: "bottom bottom",
                        onUpdate: function() {
                            r["a"].set(e.$refs.navigator, {
                                y: -e.scrollLimitHeight * s.progress
                            })
                        },
                        scrub: !0
                    });
                    this.STs.push(s),
                    this.$nextTick((function() {
                        e.secantHeight = e.$el.querySelector(".secant").offsetHeight,
                        i.forEach((function(t, i) {
                            var a = (new r["a"].timeline).to(e.$refs.navigatorDecorator, {
                                alpha: 1
                            })
                              , s = nn["a"].create({
                                trigger: t.el,
                                animation: a,
                                start: "top top",
                                end: "bottom top",
                                onUpdate: function() {
                                    r["a"].set(e.$refs.navigatorDecorator, {
                                        y: i * e.secantHeight + s.progress * e.secantHeight
                                    })
                                },
                                scrub: !0
                            });
                            e.STs.push(s)
                        }
                        ))
                    }
                    ))
                },
                setTexts: function() {
                    var e = this;
                    if ([].forEach.call(this.$el.querySelectorAll(".text, .highlight, .specifications-helper"), (function(t) {
                        var i = r["a"].from(t, {
                            autoAlpha: 0,
                            duration: 1.625,
                            ease: "none"
                        })
                          , a = nn["a"].create({
                            trigger: t,
                            animation: i,
                            start: "top 80%",
                            once: !0
                        });
                        e.STs.push(a)
                    }
                    )),
                    "VinDetails" !== this.$route.name) {
                        var t = new r["a"].timeline({
                            paused: !0
                        });
                        t.to(this.$refs.mapCta.$el, {
                            duration: .625,
                            autoAlpha: 0,
                            yPercent: -100
                        }, "a").from(this.$refs.wineCta.$el, {
                            duration: .625,
                            autoAlpha: 0,
                            yPercent: 100
                        }, "a");
                        var i = nn["a"].create({
                            trigger: this.$refs.wineSection,
                            onEnter: function() {
                                t.play()
                            },
                            onLeaveBack: function() {
                                t.reverse()
                            },
                            start: "top top+=1px"
                        });
                        this.STs.push(i)
                    } else
                        r["a"].set(this.$refs.mapCta.$el, {
                            autoAlpha: 0
                        }),
                        r["a"].set(this.$refs.wineCta.$el, {
                            autoAlpha: 1
                        })
                },
                handleBack: function() {
                    window.history.go(-1)
                },
                handleEnterCta: function(e, t) {
                    t()
                },
                handleLeaveCta: function(e, t) {
                    t()
                },
                onResized: function() {
                    var e = this.$el.querySelector(".secant");
                    e && (this.secantHeight = e.offsetHeight),
                    this.$refs.scrollLimit && (this.scrollLimitHeight = this.$refs.scrollLimit.$el.offsetHeight)
                }
            }
        }
          , Ln = An
          , En = (i("f1b4"),
        Object(d["a"])(Ln, an, sn, !1, null, "d54eb1b8", null))
          , Mn = En.exports
          , On = ["fr", "en", "jp"]
          , Bn = ":locale(".concat(On.join("|"), ")")
          , In = function() {
            var e = (navigator.language || navigator.userLanguage).toLowerCase().substring(0, 2)
              , t = On.indexOf(e);
            return t > -1 ? On[t] : On[0]
        }
          , qn = In();
        a["a"].use(Xs["a"]);
        var Dn = [{
            path: "/".concat(Bn),
            name: "Home",
            component: tn,
            meta: {
                gl: !0
            },
            beforeEnter: function(e, t, i) {
                "PageNotFound" === t.name ? window.location.href = e.path : i()
            }
        }, {
            path: "/".concat(Bn, "/history"),
            name: "History",
            alias: ["/:locale(fr)/histoire"],
            component: function() {
                return i.e("chunk-465a809c").then(i.bind(null, "e4bb"))
            },
            meta: {
                appear: !0
            }
        }, {
            path: "/".concat(Bn, "/contact"),
            name: "Contact",
            meta: {
                gl: !0,
                fadedScene: !0
            },
            component: function() {
                return i.e("chunk-758f07d2").then(i.bind(null, "b8fa"))
            }
        }, {
            path: "/".concat(Bn, "/legal-notice"),
            name: "LegalNotice",
            component: function() {
                return i.e("chunk-4c283c3e").then(i.bind(null, "da80"))
            }
        }, {
            path: "/".concat(Bn, "/parcelles/:slug/details"),
            name: "ParcelleDetails",
            component: Mn,
            meta: {
                keyed: !0,
                appear: !0,
                belongTo: "Home"
            }
        }, {
            path: "/".concat(Bn, "/vin/:slug"),
            name: "Vin",
            meta: {
                gl: !0,
                fadedScene: !0
            },
            component: function() {
                return i.e("chunk-0ca7d334").then(i.bind(null, "7b26"))
            }
        }, {
            path: "/".concat(Bn, "/vin/:slug/details"),
            name: "VinDetails",
            component: Mn,
            meta: {
                keyed: !0,
                appear: !0,
                belongTo: "Vin"
            }
        }, {
            path: "/".concat(Bn, "/temporary-nav"),
            component: function() {
                return i.e("chunk-58504092").then(i.bind(null, "e179"))
            }
        }, {
            path: "/".concat(Bn, "/404"),
            name: "PageNotFound",
            component: function() {
                return i.e("chunk-8238b19c").then(i.bind(null, "a5b5"))
            },
            meta: {
                gl: !0
            }
        }, {
            path: "/",
            redirect: "/".concat(qn)
        }, {
            path: "*",
            redirect: "/".concat(qn, "/404"),
            beforeEnter: function() {
                window.location.href = "/".concat(qn, "/404")
            }
        }]
          , Vn = new Xs["a"]({
            routes: Dn,
            mode: "history"
        })
          , Nn = Vn
          , Hn = {
            menuOpened: !1,
            needResume: !1
        }
          , _n = i("a925")
          , jn = i("5edd")
          , Un = i("4795")
          , Wn = {
            title: "MENTIONS LÉGALES",
            content: "\n  <h3>1. PRÉSENTATION DU SITE</h3>\n<p>En vertu de l’article 6 de la loi n° 2004-575 du 21 juin 2004 pour la confiance dans l’économie numérique, il est précisé aux utilisateurs du site l’identité des différents intervenants dans le cadre de sa réalisation et de son suivi :</p>\n\n<p>Site édité par :<br/>\nImmersive Garden<br/>\n14 Avenue Claude Vallefaux <br/>\n75010 Paris<br/>\nFrance<br/>\nwww.immersive-g.com<br/>\n+33 (0)1 75 50 05 85<br/>\nhttps://immersive-g.com/</p>\n\n<p>Directeur de la publication :<br/>\nChampagne Chartogne Taillet<br/>\n37-39 Grande Rue <br/>\n51220 Merfy<br/>\nFrance</p>\n\n<p>Créateur :<br/>\nImmersive Garden<br/>\n14 Avenue Claude Vallefaux <br/>\n75010 Paris <br/>\nFrance</p>\n\n<p>Hébergeur :<br/>\nAgence de communication Équinoxes<br/>\nParc Gouraud – 12 Allée des Nobel<br/>\n02200 Soissons<br/>\nwww.equinoxes.fr</p>\n\n<p>Immersive Garden :\n<p>Créateurs de sites internet, applications et installations interactives</p>\n<p>La focalisation d'Immersive Garden sur les détails permet d'apporter des expériences haut de gamme qui allient innovation dans le design et la technologie pour offrir une forte présence numérique aux marques.</p>\n\n<h3>2. CONDITIONS GÉNÉRALES D’UTILISATION DU SITE ET DES SERVICES PROPOSÉS</h3>\n<p>L’utilisation de ce site implique l’acceptation pleine et entière des conditions générales d’utilisation ci-après décrites. Ces conditions d’utilisation sont susceptibles d’être modifiées ou complétées à tout moment, les utilisateurs de ce site sont donc invités à les consulter de manière régulière.</p>\n\n<p>Ce site est normalement accessible à tout moment aux utilisateurs. Une interruption pour raison de maintenance technique peut être toutefois décidée par le Directeur de la publication, qui s’efforcera alors de communiquer préalablement aux utilisateurs les dates et heures de l’intervention.</p>\n\n<p>Ce site est mis à jour régulièrement par le Directeur de la publication. De la même façon, les mentions légales peuvent être modifiées à tout moment : elles s’imposent néanmoins à l’utilisateur qui est invité à s’y référer le plus souvent possible afin d’en prendre connaissance.</p>\n\n\n\n<h3>3. DESCRIPTION DES SERVICES FOURNIS.</h3>\n<p>Ce site a pour objet de fournir une information concernant l’ensemble des activités de la société.</p>\n\n<p>Le Directeur de la publication s’efforce de fournir sur ce site des informations aussi précises que possible. Toutefois, il ne pourra être tenue responsable des omissions, des inexactitudes et des carences dans la mise à jour, qu’elles soient de son fait ou du fait des tiers partenaires qui lui fournissent ces informations.</p>\n\n<p>Toutes les informations indiquées sur ce site sont données à titre indicatif, et sont susceptibles d’évoluer. Par ailleurs, les renseignements figurant sur ce site ne sont pas exhaustifs. Ils sont donnés sous réserve de modifications ayant été apportées depuis leur mise en ligne.</p>\n\n\n\n<h3>4. LIMITATIONS CONTRACTUELLES SUR LES DONNÉES TECHNIQUES.</h3>\n<p>Le site utilise la technologie Java-Script, HTLM, CSS et PHP.</p>\n\n<p>Le site Internet ne pourra être tenu responsable de dommages matériels liés à l’utilisation du site. De plus, l’utilisateur du site s’engage à accéder au site en utilisant un matériel récent, ne contenant pas de virus et avec un navigateur de dernière génération mis-à-jour\n\n\n\n\n<h3>5. PROPRIÉTÉ INTELLECTUELLE ET CONTREFAÇONS.</h3>\n<p>Le Directeur de la publication est propriétaire des droits de propriété intellectuelle ou détient les droits d’usage sur tous les éléments accessibles sur le site, notamment les textes, images, graphismes, logo, icônes, sons, logiciels.</p>\n\n<p>Toute reproduction, représentation, modification, publication, adaptation de tout ou partie des éléments du site, quel que soit le moyen ou le procédé utilisé, est interdite, sauf autorisation écrite préalable du Directeur de la publication.</p>\n\n<p>Toute exploitation non autorisée du site ou de l’un quelconque des éléments qu’il contient sera considérée comme constitutive d’une contrefaçon et poursuivie conformément aux dispositions des articles L.335-2 et suivants du Code de Propriété Intellectuelle.</p>\n\n\n\n<h3>6. LIMITATIONS DE RESPONSABILITÉ</h3>\n<p>Le Directeur de la publication ne pourra être tenue responsable des dommages directs et indirects causés au matériel de l’utilisateur, lors de l’accès au site, et résultant soit de l’utilisation d’un matériel ne répondant pas aux spécifications indiquées au point 4, soit de l’apparition d’un bug ou d’une incompatibilité.</p>\n\n<p>Le Directeur de la publication ne pourra également être tenue responsable des dommages indirects (tels par exemple qu’une perte de marché ou perte d’une chance) consécutifs à l’utilisation de ce site.</p>\n\n<p>Des espaces interactifs (possibilité de poser des questions dans l’espace contact) sont à la disposition des utilisateurs. Le Directeur de la publication se réserve le droit de supprimer, sans mise en demeure préalable, tout contenu déposé dans cet espace qui contreviendrait à la législation applicable en France, en particulier aux dispositions relatives à la protection des données. Le cas échéant, le Directeur de la publication se réserve également la possibilité de mettre en cause la responsabilité civile et/ou pénale de l’utilisateur, notamment en cas de message à caractère raciste, injurieux, diffamant, ou pornographique, quel que soit le support utilisé (texte, photographie…).</p>\n\n\n\n<h3>7. GESTION DES DONNÉES PERSONNELLES</h3>\n<p>Se reporter à notre Charte de Confidentialité.</p>\n\n\n\n<h3>8. LIENS HYPERTEXTES ET COOKIES</h3>\n<p>Ce site contient un certain nombre de liens hypertextes vers d’autres sites, mis en place avec l’autorisation du Directeur de la publication. Cependant, il n’a pas la possibilité de vérifier le contenu des sites ainsi visités, et n’assumera en conséquence aucune responsabilité de ce fait.</p>\n\n<p>La navigation sur ce site est susceptible de provoquer l’installation de cookie(s) sur l’ordinateur de l’utilisateur. Un cookie est un fichier de petite taille, qui ne permet pas l’identification de l’utilisateur, mais qui enregistre des informations relatives à la navigation d’un ordinateur sur un site. Les données ainsi obtenues visent à faciliter la navigation ultérieure sur le site, et ont également vocation à permettre diverses mesures de fréquentation.</p>\n\n<p>Le refus d’installation d’un cookie peut entraîner l’impossibilité d’accéder à certains services. L’utilisateur peut toutefois configurer son ordinateur de la manière suivante, pour refuser l’installation des cookies :</p>\n<p>Sous Internet Explorer : onglet outil (pictogramme en forme de rouage en haut a droite) / options internet. Cliquez sur Confidentialité et choisissez Bloquer tous les cookies. Validez sur Ok.</p>\n<p>Sous Firefox : en haut de la fenêtre du navigateur, cliquez sur le bouton Firefox, puis aller dans l’onglet Options. Cliquer sur l’onglet Vie privée.</p>\n<p>Paramétrez les Règles de conservation sur : utiliser les paramètres personnalisés pour l’historique. Enfin décochez-la pour désactiver les cookies.</p>\n<p>Sous Safari : Cliquez en haut à droite du navigateur sur le pictogramme de menu (symbolisé par un rouage). Sélectionnez Paramètres. Cliquez sur Afficher les paramètres avancés. Dans la section « Confidentialité », cliquez sur Paramètres de contenu. Dans la section « Cookies », vous pouvez bloquer les cookies.</p>\n<p>Sous Chrome : Cliquez en haut à droite du navigateur sur le pictogramme de menu (symbolisé par trois lignes horizontales). Sélectionnez Paramètres. Cliquez sur Afficher les paramètres avancés. Dans la section « Confidentialité », cliquez sur préférences. Dans l’onglet « Confidentialité », vous pouvez bloquer les cookies.</p>\n\n\n\n<h3>9. DROIT APPLICABLE ET ATTRIBUTION DE JURIDICTION.</h3>\n<p>Tout litige en relation avec l’utilisation du ce site est soumis au droit français. Il est fait attribution exclusive de juridiction aux tribunaux compétents de Paris.</p>\n\n\n\n\n\n<h3>10. LES PRINCIPALES LOIS CONCERNÉES</h3>\n<p>Loi n° 78-17 du 6 janvier 1978, notamment modifiée par la loi n° 2004-801 du 6 août 2004 relative à l’informatique, aux fichiers et aux libertés.</p>\n\n<p>Loi n° 2004-575 du 21 juin 2004 pour la confiance dans l’économie numérique.</p>\n\n\n\n<h3>11. LEXIQUE</h3>\n<p>Utilisateur : Internaute se connectant, utilisant le site susnommé.</p>\n\n<p>Responsable publication : une personne physique ou une personne morale.</p>\n\n<p>Informations personnelles : « les informations qui permettent, sous quelque forme que ce soit, directement ou non, l’identification des personnes physiques auxquelles elles s’appliquent » (article 4 de la loi n° 78-17 du 6 janvier 1978).</p>\n\n\n\n<p>Copyright © 2020 Chartogne Taillet\n"
        }
          , Gn = i("db79")
          , Yn = i("7448")
          , $n = i("1093")
          , Xn = i("2439")
          , Jn = i("a69e")
          , Qn = i("a2c0")
          , Kn = i("7aad")
          , Zn = i("8b32")
          , er = i("2e06")
          , tr = i("2e2c")
          , ir = i("8c9f")
          , ar = i("23b7")
          , sr = i("b2ce")
          , nr = [Gn, Yn, $n, Xn, Jn, Qn, Kn, Zn, er, tr, ir, ar]
          , rr = Object(K["a"])(Object(K["a"])(Object(K["a"])({}, jn), Un), {}, {
            legals: Wn,
            parcelles: nr,
            scene: sr
        })
          , or = i("c471")
          , lr = i("d088")
          , ur = {
            title: "LEGAL INFORMATION",
            content: "<h3>1. SITE OVERVIEW</h3>\n<p>Pursuant to article 6 of French Act No. 2004-575 of 21 June 2004 to promote trust in the digital economy, site users are hereby informed of the identity of the various operators involved in its production and supervision:</p>\n\n<p>Site publisher:<br/>\nImmersive Garden<br/>\n14 Avenue Claude Vallefaux <br/>\n75010 Paris<br/>\nFrance<br/>\nwww.immersive-g.com<br/>\n+33 (0)1 75 50 05 85<br/>\nhttps://immersive-g.com/</p>\n\n<p>Publication director:<br/>\nChampagne Chartogne Taillet<br/>\n37-39 Grande Rue <br/>\n51220 Merfy<br/>\nFrance</p>\n\n<p>Creator:<br/>\nImmersive Garden<br/>\n14 Avenue Claude Vallefaux <br/>\n75010 Paris <br/>\nFrance</p>\n\n<p>Host:<br/>\nÉquinoxes communication agency<br/>\nParc Gouraud – 12 Allée des Nobel<br/>\n02200 Soissons<br/>\nwww.equinoxes.fr</p>\n\n<p>Immersive Garden:<br/>\nDesigners of websites, interactive installations and applications<br/>\nImmersive Garden’s focus on details ensures an exceptional user experience, allying innovation in design and technology to provide brands with a strong digital-media presence.</p>\n\n<h3>2. GENERAL CONDITIONS FOR USE OF THE SITE AND OF THE SERVICES ON OFFER</h3>\n<p>Use of this site implies full and unreserved acceptance of the general conditions of use described hereinafter. These conditions of use may be amended or supplemented at any time and accordingly, site users are advised to view them at regular intervals.</p>\n\n<p>As a rule, this site is accessible to users at all times. However, the Publication Director may decide to interrupt the service for purposes of technical maintenance. That Director shall in such case endeavour to communicate to users beforehand the servicing dates and times.</p>\n\n<p>This site is regularly updated by the Publication Director. Similarly, the legal information may be amended at any time, whereupon the user shall be bound thereby and is advised to refer to such information as often as possible in order to be aware of any changes.</p>\n\n\n\n<h3>3. DESCRIPTION OF THE SERVICES PROVIDED</h3>\n<p>This site is designed to provide information concerning all the company’s activities.</p>\n\n<p>The Publication Director endeavours to supply this site with information that is as accurate as possible. However, that Director cannot be held liable for omissions, inaccuracies or inadequacies in updating, whether due to its own act or to the act of partner third parties supplying such information to it.</p>\n\n<p>All the information shown on this site is given for guidance only and is subject to change. Moreover, the information displayed on this site is not exhaustive. It is provided subject to any amendments made since it was put on-line.</p>\n\n\n\n<h3>4. CONTRACTUAL LIMITATIONS INHERENT IN TECHNICAL DATAM</h3>\n<p>The site uses JavaScript, HTML, CSS and PHP technology.</p>\n\n<p>The website can incur no liability for material damage arising from the use of the site. Furthermore, the site user undertakes to access the site using recent IT equipment that is not contaminated with any virus and using an up-to-date browser of the latest generation.</p>\n\n\n\n\n<h3>5. INTELLECTUAL PROPERTY AND INFRINGEMENT</h3>\n<p>The Publication Director owns the intellectual-property rights or holds user rights in all the elements accessible on the site, particularly text, images, graphics, logos, icons, sound and software.</p>\n\n<p>Any reproduction, display or performance, modification, publication or adaptation of all or part of the site elements, regardless of the means or process used, is prohibited, except by prior written permission of the Publication Director.</p>\n\n<p>Any unauthorised exploitation of the site or of any of the elements it contains shall be regarded as infringement, which will incur proceedings in accordance with Articles L.335-2 et seq. of the French Intellectual Property Code.</p>\n\n\n\n<h3>6. LIMITATION OF LIABILITY</h3>\n<p>The Publication Director shall incur no liability for direct or consequential damage caused to the user’s IT equipment when accessing the site, whether arising from the use of hardware not compliant with the specifications set out in point 4 hereof, or from a bug or incompatibility.</p>\n\n<p>The Publication Director shall likewise incur no liability for consequential damage (such as the loss of a market or loss of opportunity) arising from the use of this site.</p>\n\n<p>Interactive virtual spaces are available to enable users to ask questions in the contact space. The Publication Director reserves the right to remove, without prior notice, any content entered in that space that contravenes legislation applicable in France, particularly the data-protection provisions. Where applicable, the Publication Director also reserves the option of seeking the user’s civil and/or penal liability, particularly in the case of messages that are racist, abusive, defamatory or pornographic, regardless of the medium used (text, photographs, etc.).</p>\n\n\n\n<h3>7. PERSONAL-DATA MANAGEMENT</h3>\n<p>Please refer to our Pivacy Charter.</p>\n\n\n\n<h3>8. HYPERLINKS AND COOKIES</h3>\n<p>This site contains a number of hyperlinks leading to other sites and inserted with the permission of the Publication Director. However, that Director cannot verify the content of the sites visited by such means, and shall therefore entertain no liability on that account.</p>\n\n<p>Browsing on this site may entail the installation of one or more cookies on the user’s computer. A cookie is a small file that does not identify the user, but is used to record information relating to a computer’s browsing on a website. The data thus gathered are designed to facilitate subsequent browsing of the site and are also used to make various attendance measurements.</p>\n\n<p>The refusal to install a cookie may inhibit access to certain services. The user may, however, configure his/her computer in the following way, in order to refuse the installation of cookies:<br/>\nIn Internet Explorer: click the Tool tab (a gearwheel-shaped pictogram in the top right-hand corner) / Internet options. Click on Privacy and choose Block all Cookies. Click OK to confirm.<br/>\nIn Firefox: at the top of the browser window, click on the Firefox button then go into the Options tab. Click on the Privacy and Security tab.<br/>\nSet the storage Rules to: use customised parameters for logging. Lastly, under Custom, check Cookies to disable cookies.<br/>\nIn Safari: In the top right-hand corner of the browser, click on the menu pictogram (symbolised by a gear wheel). Select Settings. Click on Display advanced settings. In the “Privacy” section, click on Content settings. In the “Cookies” section, you can block cookies.<br/>\nIn Chrome: In the top right-hand corner of the browser, click on the menu pictogram (symbolised by three horizontal lines). Select Settings. Click on Display advanced settings. In the “Privacy and security” section, click on Preferences. In the “Privacy and Security” tab, you can disable cookies.</p>\n\n\n\n<h3>9. APPLICABLE LAW AND APPOINTMENT OF JURISDICTION</h3>\n<p>Any dispute relating to the use of this site shall be subject to French law. Exclusive jurisdiction is hereby conferred upon the competent courts of law in Paris.</p>\n\n\n\n\n\n<h3>10. THE MAIN RELEVANT LEGISLATION</h3>\n<p>Act No. 78-17 of 6 January 1978, as amended by, among others, Act No. 2004-801 of 6 August 2004 on information technology, data files and civil liberties (French data-protection legislation).</p>\n\n<p>Act No. 2004-575 of 21 June 2004 to promote trust in the digital economy.</p>\n\n\n\n<h3>11. LEXICON</h3>\n<p>User: A web user logging onto and using the above-mentioned website.</p>\n\n<p>Publication manager: a natural person or a legal entity.</p>\n\n<p>Personal data: Information which, directly or otherwise, identifies in any form the natural persons to which such information applies (cf. Article 4 in Act No. 78-17 of 6 January 1978).</p>\n\n\n\n<p>Copyright © 2020 Chartogne Taillet</p>"
        }
          , hr = i("9b87")
          , cr = i("2e51")
          , dr = i("74ff")
          , mr = i("4587")
          , pr = i("5fb4")
          , gr = i("de5b")
          , vr = i("b798")
          , fr = i("43f3")
          , br = i("05c0")
          , xr = i("baa3")
          , yr = i("1aa4")
          , wr = i("8743")
          , Tr = i("c444")
          , Sr = [hr, cr, dr, mr, pr, gr, vr, fr, br, xr, yr, wr]
          , kr = Object(K["a"])(Object(K["a"])(Object(K["a"])({}, or), lr), {}, {
            legals: ur,
            parcelles: Sr,
            scene: Tr
        })
          , Pr = i("e7c0")
          , Cr = i("1020")
          , zr = {
            title: "法的事項",
            content: "\n  <h3>1. サイトの概要</h3>\n<p>2004年6月21日施行のフランス法第2004‐575号「デジタルエコノミーにおける信用」に基づき、サイトのユーザーに対し、下記に当サイトの様々な製作に携わる関係者等の身元を明記いたします。</p>\n\n<p>サイト運営者 :<br/>\nImmersive Garden<br/>\n14 Avenue Claude Vallefaux 75010 Paris<br/>\nFrance<br/>\nwww.immersive-g.com<br/>\n+33 (0)1 75 50 05 85<br/>\nhttps://immersive-g.com/</p>\n\n<p>編集責任者 :<br/>\nChampagne Chartogne Taillet<br/>\n37-39 Grande Rue <br/>\n51220 Merfy<br/>\nFrance</p>\n\n<p>クリエーター :<br/>\nImmersive Garden<br/>\n14 Avenue Claude Vallefaux <br/>\n75010 Paris <br/>\nFrance</p>\n\n<p>ウェブホスティング :<br/>\nAgence de communication Équinoxes<br/>\nParc Gouraud – 12 Allée des Nobel<br/>\n02200 Soissons<br/>\nwww.equinoxes.fr</p>\n\n<p>Immersive Gardenの業務について :<br/>\nウェブサイトの製作、アプリケーション、インストールをインタラクティブに行っております。<br/>\nディティールにこだわりを持つImmersive Gardenは 常にデザインとテクノロジーのイノベーションを行いながら ラグジュアリーな存在感をアピールし、デジタル世界におけるブランドのシェアをさらに高めることに貢献しています。</p>\n\n<h3>2. サイトのご利用規約並びに提供されるサービス</h3>\n<p>当サイトご利用の際は 以下に記載されるご利用規約に全面的に同意していただくことになります。なお、当ご利用規約は いつでも変更又は補足される可能性がございますので、当サイトのユーザーは 定期的にご利用規約を確認して頂くよう勧められます。</p>\n\n<p>当サイトは 通常ユーザーにいつでもご利用して頂くことが可能です。しかしながら当サイト編集責任者の判断でテクニカルメンテナンスが行われ、一時的にアクセスが中断される場合には、ユーザーに対して 事前にメンテナンスの日時を予告するよう努めます。</p>\n\n<p>当サイトは 編集責任者によって 定期的に更新が行われます。同様に 法的事項の欄も予告なしに変更されることがあります。ただしその場合、ユーザーへの告知を目的として できる限り改定された内容を参照して頂くことが求められます。</p>\n\n\n<h3>3. 提供するサービスの詳細</h3>\n<p>当サイトは、当社の活動に関するあらゆる情報を提供することを目的として 運営されています。</p>\n\n<p>編集責任者は 可能である限り当サイトの情報が正確であるように努めます。しかしながら 更新時における削除、エラー、及び欠如に関して これらの情報を得たユーザー、又は第三者の関係者の如何を問わず、何ら責任を負うことはありません。</p>\n\n<p>当サイトに記載される全ての情報は 参考データで、更新される可能性があります。さらに 当サイトに記載される内容は 完全性を保証するものではありません。データは オンライン上に表示されてからも 変更の対象となります。</p>\n\n<h3>4. 技術的なデータにおける責任の限界</h3>\n<p>当サイトは Javaスクリプト、 HTLM、CSS、 及び PHPのテクノロジーを使用しています。</p>\n\n<p>当サイトの利用に関して起こったユーザー側の機器の破損について 一切責任は負いません。更に言及すると ユーザーは当サイトの利用に際し、より新しい、ウィルスフリーのハードウェア、そして最新のブラウザが搭載された機器でアクセスして頂くことに同意して頂きます。</p>\n\n<h3>5. 知的財産権及び偽造罪</h3>\n\n<p>編集責任者は 当サイト上でアクセス可能な全てのコンテンツ、即ちテキスト、画像、グラフィック、ロゴ、アイコン、音声、ソフトウェアの使用権、並びに知的財産権を有しています。</p>\n\n<p>これらのコンテンツ全て、又は一部の複写、公開、変更、出版、脚色は 如何なる方法、又は行程を用いても違法行為となります。これらを行使する場合は 編集責任者の事前の書面による許可が必要となります。</p>\n\n<p>当サイトに無断でコンテンツを使用、又は 如何なるコンテンツであろうとその一部を使用することは偽造罪に当たり、L.335第2条と知的財産法に従って起訴されます。</p>\n\n<h3>6. 責任の限界</h3>\n\n<p>当サイトへのアクセス中に、4項に示された仕様を満たさない機器の使用、またはバグや非互換性の問題により ユーザーが被った直接的および間接的な機器の損害について、編集責任者は責任を負うことはありません。</p>\n\n<p>また編集責任者は 当サイトの利用により被ったユーザーの間接的な損害（市場の損失やチャンスを失う等）に対しても 責任を負うことはありません。</p>\n\n<p>一般に公開されたスペース（コンタクト用フォーム欄での質問等）は ユーザーの利用が可能です。編集責任者は事前の通知なしに フランスで準拠される法律に従って、特にデータ保護規定に反する内容を削除する権利を有します。万一の場合、とりわけ いかなる媒体（テキスト、写真等）を用いたとしても、差別、攻撃、中傷、ポルノグラフィーに関する内容を書き込んだユーザーに対して、編集責任者はまた 民事又は刑事責任を追及することがあります。</p>\n\n<h3>7. 個人情報の管理</h3>\n\n<p>プライバシーポリシーのページをご参照 下さい。</p>\n\n<h3>8. ハイパーリンク及びクッキー</h3>\n\n<p>当サイトには、編集責任者のアクセス許可を得て設定された、他サイトへのハイパーリンクが多数含まれています。しかし、このような機能を利用してリンクした他サイト及び訪問者の内容を確認することが出来ないため、この件に関しまして 当サイトでは一切の責任を負いません。</p>\n\n<p>当サイトの閲覧により、１つ又は複数のCookie  がユーザーのコンピュータにインストールされる可能性があります。Cookie は小さなファイルで、ユーザーを識別するのではなく、サイト上のコンピュータの閲覧に関する情報を記録するものです。データ及び取得された情報は、サイト上の次の閲覧を容易にすることを目的としております。また、閲覧の回数等を収集することを意図しています。</p>\n\n<p>クッキーのインストールをブロックすると、特定のサービスにアクセスできなくなる可能性があります。しかしながらユーザーは 以下のようにコンピュータを設定し、Cookie のインストールをブロックすることが可能です。</p>\n\n<p>Internet Explorer上での設定方法 : ツールタブ（画面右上の歯車の形をしたピクトグラム）/インターネットオプションをクリック。次に「プライバシー」をクリックし、「すべての Cookie をブロック」 を選択。「OK」をクリックし認証します。\n<p>Firefox上での設定方法 : ブラウザウィンドウの上部にある Firefox ボタンをクリックし、「オプション」タブに移動します。「プライバシー」タブをクリックします。</p>\n <p>保存ルールを設定: 履歴にカスタム設定を利用します。最後に、クッキーを無効にするために、チェックボックスをオフにします。</p>\n<p>Safari 上での設定方法: ブラウザの右上のメニューアイコン（歯車の形をしたアイコン）をクリックします。「設定」 を選択します。「詳細設定」をクリックし、「プライバシーとセキュリティ」 で、選択をクリック。「プライバシーとセキュリティ」タブで、クッキーをブロックすることができます。</p>\n\n<p>Chrome上での設定方法 ：ブラウザ右上のその他のアイコン（3つの・が垂直に並ぶアイコン）をクリックします。「設定」を選択します。「詳細設定」をクリック。「プライバシーとセキュリティ」をクリックします。「Cookieと他のサイトデータ」のオプションで、Cookie をブロックできます。</p>\n\n<h3>9. 準拠法並びに裁判管轄権</h3>\n\n<p>当サイトの利用に関しての訴訟は フランス法に準拠されます。法廷は パリの管轄裁判所にのみ限定されます。</p>\n\n<h3>10. 適用される法令</h3>\n\n<p>1978年1月6日施行のフランス法第78‐17号（2004年8月6日改正）「IT、そのデータファイル、及びITの自由に関する法律」</p>\n\n<p>2004年6月21日施行のフランス法第2004‐575号「デジタルエコノミーにおける信用」</p>\n\n<h3>11. 語彙の説明</h3>\n\n<p>ユーザー : 当サイトにアクセスし 使用した者。</p>\n\n<p>編集責任者 : 個人又は法人を指す。</p>\n\n<p>個人情報：<br/>\n個人情報：「直接または間接的であっても、それによって個人の身元が特定できる情報」(1978年1月6日施行フランス法第78‐17号第4条)。</p>\n\n<p>著作権© 2020 Chartogne Taillet</p>\n\n  \n  \n  "
        }
          , Rr = i("4d01")
          , Fr = i("7425")
          , Ar = i("78c4")
          , Lr = i("be36")
          , Er = i("315c")
          , Mr = i("afb6")
          , Or = i("51ad")
          , Br = i("4f73")
          , Ir = i("4859")
          , qr = i("bf94")
          , Dr = i("2a55")
          , Vr = i("bb0d")
          , Nr = i("deda")
          , Hr = [Rr, Fr, Ar, Lr, Er, Mr, Or, Br, Ir, qr, Dr, Vr]
          , _r = Object(K["a"])(Object(K["a"])(Object(K["a"])({}, Pr), Cr), {}, {
            legals: zr,
            parcelles: Hr,
            scene: Nr
        });
        a["a"].use(_n["a"]);
        var jr, Ur, Wr, Gr, Yr, $r, Xr, Jr = new _n["a"]({
            fallbackLocale: "fr",
            locale: qn,
            messages: {
                fr: rr,
                en: kr,
                jp: _r
            }
        }), Qr = i("53ca"), Kr = function() {
            return "undefined" !== typeof window
        }, Zr = function() {
            return jr || Kr() && (jr = window.gsap) && jr.registerPlugin && jr
        }, eo = function(e) {
            return "string" === typeof e
        }, to = function(e, t) {
            var i = "x" === t ? "Width" : "Height"
              , a = "scroll" + i
              , s = "client" + i;
            return e === Wr || e === Gr || e === Yr ? Math.max(Gr[a], Yr[a]) - (Wr["inner" + i] || Gr[s] || Yr[s]) : e[a] - e["offset" + i]
        }, io = function(e, t) {
            var i = "scroll" + ("x" === t ? "Left" : "Top");
            return e === Wr && (null != e.pageXOffset ? i = "page" + t.toUpperCase() + "Offset" : e = null != Gr[i] ? Gr : Yr),
            function() {
                return e[i]
            }
        }, ao = function(e, t) {
            var i = $r(e)[0].getBoundingClientRect()
              , a = !t || t === Wr || t === Yr
              , s = a ? {
                top: Gr.clientTop - (Wr.pageYOffset || Gr.scrollTop || Yr.scrollTop || 0),
                left: Gr.clientLeft - (Wr.pageXOffset || Gr.scrollLeft || Yr.scrollLeft || 0)
            } : t.getBoundingClientRect()
              , n = {
                x: i.left - s.left,
                y: i.top - s.top
            };
            return !a && t && (n.x += io(t, "x")(),
            n.y += io(t, "y")()),
            n
        }, so = function(e, t, i, a, s) {
            return isNaN(e) || "object" === Object(Qr["a"])(e) ? eo(e) && "=" === e.charAt(1) ? parseFloat(e.substr(2)) * ("-" === e.charAt(0) ? -1 : 1) + a - s : "max" === e ? to(t, i) - s : Math.min(to(t, i), ao(e, t)[i] - s) : parseFloat(e) - s
        }, no = function() {
            jr = Zr(),
            Kr() && jr && document.body && (Wr = window,
            Yr = document.body,
            Gr = document.documentElement,
            $r = jr.utils.toArray,
            jr.config({
                autoKillThreshold: 7
            }),
            Xr = jr.config(),
            Ur = 1)
        }, ro = {
            version: "3.5.1",
            name: "scrollTo",
            rawVars: 1,
            register: function(e) {
                jr = e,
                no()
            },
            init: function(e, t, i, a, s) {
                Ur || no();
                var n = this;
                n.isWin = e === Wr,
                n.target = e,
                n.tween = i,
                "object" !== Object(Qr["a"])(t) ? (t = {
                    y: t
                },
                eo(t.y) && "max" !== t.y && "=" !== t.y.charAt(1) && (t.x = t.y)) : t.nodeType && (t = {
                    y: t,
                    x: t
                }),
                n.vars = t,
                n.autoKill = !!t.autoKill,
                n.getX = io(e, "x"),
                n.getY = io(e, "y"),
                n.x = n.xPrev = n.getX(),
                n.y = n.yPrev = n.getY(),
                null != t.x ? (n.add(n, "x", n.x, so(t.x, e, "x", n.x, t.offsetX || 0), a, s, Math.round),
                n._props.push("scrollTo_x")) : n.skipX = 1,
                null != t.y ? (n.add(n, "y", n.y, so(t.y, e, "y", n.y, t.offsetY || 0), a, s, Math.round),
                n._props.push("scrollTo_y")) : n.skipY = 1
            },
            render: function(e, t) {
                var i, a, s, n, r, o = t._pt, l = t.target, u = t.tween, h = t.autoKill, c = t.xPrev, d = t.yPrev, m = t.isWin;
                while (o)
                    o.r(e, o.d),
                    o = o._next;
                i = m || !t.skipX ? t.getX() : c,
                a = m || !t.skipY ? t.getY() : d,
                s = a - d,
                n = i - c,
                r = Xr.autoKillThreshold,
                t.x < 0 && (t.x = 0),
                t.y < 0 && (t.y = 0),
                h && (!t.skipX && (n > r || n < -r) && i < to(l, "x") && (t.skipX = 1),
                !t.skipY && (s > r || s < -r) && a < to(l, "y") && (t.skipY = 1),
                t.skipX && t.skipY && (u.kill(),
                t.vars.onAutoKill && t.vars.onAutoKill.apply(u, t.vars.onAutoKillParams || []))),
                m ? Wr.scrollTo(t.skipX ? i : t.x, t.skipY ? a : t.y) : (t.skipY || (l.scrollTop = t.y),
                t.skipX || (l.scrollLeft = t.x)),
                t.xPrev = t.x,
                t.yPrev = t.y
            },
            kill: function(e) {
                var t = "scrollTo" === e;
                (t || "scrollTo_x" === e) && (this.skipX = 1),
                (t || "scrollTo_y" === e) && (this.skipY = 1)
            }
        };
        ro.max = to,
        ro.getOffset = ao,
        ro.buildGetter = io,
        Zr() && jr.registerPlugin(ro),
        i("79b9"),
        r["b"].registerPlugin(nn["a"], ro),
        a["a"].config.productionTip = !1,
        Nn.beforeEach((function(e, t, i) {
            e.params.locale !== Jr.locale && (Jr.locale = e.params.locale),
            i()
        }
        )),
        new a["a"]({
            i18n: Jr,
            router: Nn,
            render: function(e) {
                return e($s)
            },
            data: function() {
                return Hn
            }
        }).$mount("#app")
    },
    "592f": function(e, t, i) {
        e.exports = i.p + "img/terrainData2.54804d71.png"
    },
    "59d2": function(e, t, i) {
        "use strict";
        var a = i("39f9")
          , s = i.n(a);
        s.a
    },
    "5c0b": function(e, t, i) {
        "use strict";
        var a = i("9c0c")
          , s = i.n(a);
        s.a
    },
    "5d4d": function(e, t, i) {
        e.exports = i.p + "img/domainBlazon.04c7b2f8.png"
    },
    "5d59": function(e, t, i) {
        e.exports = i.p + "img/mapButton.95a2990f.png"
    },
    "5edd": function(e) {
        e.exports = JSON.parse('{"history":{"header":"HISTOIRE","headline":"NOS HÉRITAGES","component0":{"title":"UN HÉRITAGE<br/> BÉNÉDICTIN","description":"<p>Au 7ème siècle, installés à Merfy, les vignerons de nos villages reçoivent l’héritage des moines bénédictins de l’abbaye de Saint Thierry.</p><p>Génération après génération, les viticulteurs de Merfy façonnent avec l’abbaye les paysages viticoles de nos coteaux, en séparant minutieusement chaque parcelle en fonction de leurs origines géologiques, leurs sols, sous-sols ...</p><p>Des noms s’écrivent sur les futures cartes du village pour devenir les « Lieux Dits » qui nourrissent aujourd’hui les racines et les plants de vignes qui y sont installés.</p>"},"component1":{"title":"UN HÉRITAGE<br/> FAMILIAL","description":"<p>Les traces de la présence vigneronne de notre famille remontent à 1490 avec Nicolas Taillet puis Fiacre Taillet en 1540. Dès 1700, un second Fiacre Taillet, vigneron érudit, écrit ses mémoires présentant sa viede vigneron et tous les  évènements marquants du village, de la famille et de son métier. La famille Chartogne-Taillet perpétue cette tradition d’écriture et de savoirs faires hérités de ce passé vigneron.</p>"},"component2":{"title":"UN HÉRITAGE<br/> VIGNERON","highlight":"<p>Chaque geste est orienté par une demande des plantes, des vignes et de notre environnement.</p>","description":"<p>Nous retrouvons le savoir-faire vigneron d’une période ancienne, pendant laquelle l’homme ne pouvait pas nuire par l’utilisation de produits ou de machines. Le travail est manuel, ou aidé par nos chevaux dans la nature.</p>"},"component3":{"headline":"VIRTUOSITÉ","title":"SAVOIR FAIRE<br/> & PASSION","description":"<p>Comprendre par les sels, les textures, les longueurs et les saveurs, d’où provient ce vin, sur quel sol, sous sol, le cep a puisé sa force et son savoir.<br/>Nous sommes les garants de ce savoir à transmettre d’une génération à l’autre, d’une bouteille à l’autre. Pour cela, nous essayons de ne pas abimer, ne pas trahir ces terroirs.<br/>Nos ancêtres nous ont guidé par leurs écrits : les méthodes de plantation, de taille, de soin annuel de chaque vigne sur chaque Terroir.</p>","highlight":"<p>Goûter un vin, c’est se plonger à distance dans le goût d’un lieu.</p>","description2":"<p>Aujourd’hui, nos gestes sont guidés par la transmission de ce savoir-faire, et adaptons ce travail bénédictin viticole, à l’effervescence nouvelle de la Champagne.<br/>Conserver le gout du lieu en vinifiant un vin qui deviendra effervescent.<br/>Aucune certification n’est souhaitée, juste celle qui nous permettra de traduire le goût de notre terroir dans nos bouteilles.</p>"},"footer":{"title":"TERROIRS<br/>& VINS"}},"contact":{"header":"CONTACT","firstname":"ALEXANDRE","lastname":"CHARTOGNE","address":"37-39 GRANDE RUE","postcode":"51220","city":"MERFY","phone":"+33326031017","phonelabel":"(+33)326031017","email":"Chartogne.taillet@wanadoo.fr","facebook":"FACEBOOK","instagram":"INSTAGRAM","distributors":"DISTRIBUTEURS<br/>& AGENTS","france":"FRANCE","export":"EXPORT","distrutorsFranceLabels":["NOM","REGION","DÉPARTEMENT"],"distrutorsFrance":[{"name":"4 ares 28 (Pierre Le Lay)","region":"Ouest Loire","departments":"76,27,28,61,14,50, 72, 53, 35, 22, 29, 56, 44, 49, 37, 41, 45, 85, 79, 86, 36, 17, 16, 87, 24, 40, 64, 65, 32, 82"},{"name":"Dégustation Sélection","region":"Est","departments":"57,67,68, 39, 01, 69, 38"},{"name":"Les Invincibles (Alexandre Imbert)","region":"Sud","departments":"31, 11, 66, 34, 30"},{"name":"Geoffroy Gamba Vins Spiritueux","region":"Sud Est","departments":"13, 83, 06 et Monaco"},{"name":"Vinhop","region":"Paris","departments":"78, 91, 77, 95, 75, 92, 93 et 94"},{"name":"Mouchonnat","region":"Bourgogne","departments":"21"},{"name":"Clos Azelto","region":"Corse","departments":"2A, 2B"}],"exports":[{"country":"ALLEMAGNE","companies":[{"name":"Life in Bubble"}]},{"country":"ANGLETERRE","companies":[{"name":"Vine Trail","url":"http://www.vinetrail.co.uk/"}]},{"country":"AUSTRALIE","companies":[{"name":"Bibendum - Imbibo"}]},{"country":"AUTRICHE","companies":[{"name":"Wagner","url":"https://www.wagners-weinshop.com/"}]},{"country":"BELGIQUE","companies":[{"name":"Vinikus et Lazarus","url":"http://www.vinikusenlazarus.be/"}]},{"country":"BRÉSIL","companies":[{"name":"Animavinum"}]},{"country":"CAMBODGE","companies":[{"name":"Wine direct"}]},{"country":"CANADA","companies":[{"name":"Oenopole","url":"https://oenopole.ca/"},{"name":"Pion"}]},{"country":"CORSE","companies":[{"name":"Clos Alzeto","url":"https://www.closdalzeto.com/"}]},{"country":"COREE DU SUD","companies":[{"name":"Vinocus","url":"https://www.facebook.com/vinocus.wine"}]},{"country":"CHINE","companies":[{"name":"The Fine Wine Experience"}]},{"country":"DANEMARK","companies":[{"name":"Laudrup","url":"https://www.laudrup.dk/da/laudrup-vin-gastronomi-wines-and-delicacies-unlimited/"}]},{"country":"ESPAGNE","companies":[{"name":"Champeron Paris","url":"http://champeronparis.com/portada"}]},{"country":"ESTONIE","companies":[{"name":"Brillare","url":"http://brillare.eu/en/"}]},{"country":"FINLANDE","companies":[{"name":"Vin Direkt","url":"https://www.vindirekt.fi/"}]},{"country":"HONG KONG CHINE","companies":[{"name":"The Fine Wine Experience","url":"https://www.finewineexperience.com/"}]},{"country":"ITALIE","companies":[{"name":"MOON Import","url":"http://www.moonimport.it/"}]},{"country":"JAPON","companies":[{"name":"Firadis","url":"http://www.firadis.co.jp/"}]},{"country":"LIBAN","companies":[{"name":"Terroir Y Selection"}]},{"country":"LIECHTENSTEIN","companies":[{"name":"Ritter Weine"}]},{"country":"LUXEMBOURG","companies":[{"name":"Craft & Company","url":"https://www.craftetcompagnie.com/"}]},{"country":"NORVÈGE","companies":[{"name":"Moestue Grape Selections"}]},{"country":"NOUVELLE-ZELANDE","companies":[{"name":"The Village Winery"}]},{"country":"PAYS BAS","companies":[{"name":"Janselijn Wijnen"}]},{"country":"RÉPUBLIQUE TCHÈQUE","companies":[{"name":"Le Clos"},{"name":"Vino Vino Vino","url":"http://vino-vino-vino.cz/"}]},{"country":"RUSSIE","companies":[{"name":"Simple","url":"https://simplewine.ru/"}]},{"country":"SUEDE","companies":[{"name":"Franska Vinlistan","url":"http://franskavinlistan.com/"}]},{"country":"SUISSE","companies":[{"name":"Cultivino","url":"https://www.cultivino.ch/"},{"name":"Le Passeur de Vin"}]},{"country":"SINGAPOUR","companies":[{"name":"Artisan Cellar","url":"https://www.artisan-cellars.com/welcome.html"}]},{"country":"THAILANDE","companies":[{"name":"Reserve Wine"}]},{"country":"TAIWAN","companies":[{"name":"Mouchonnat","url":"http://www.mouchonnat.com/"}]},{"country":"USA","companies":[{"name":"Skurnik Wines","url":"https://www.skurnik.com/"}]}]},"common":{"discover":"DÉCOUVRIR","fichetechnique":"FICHE TECHNIQUE","encepagement":"Encépagement","plantation":"Plantation ","exposition":"Exposition","alcoholnotice":"L’abus d’alcool est dangereux pour la santé. À consommer avec modération.","parcelleground":"<p>LE SOL</p><p>DE LA</p><p>PARCELLE</p>","comeback":"REVENIR","winespecificites":"<p>LES</p><p>SPÉCIFICITÉS</p><p>DU VIN</p>","name":"Nom","wines":"Les Vins","pageNotFound":"PAGE NON TROUVÉE","plots":"PARCELLES","thePlots":"LES PARCELLES","theWines":"LES VINS","history":"HISTOIRE","contact":"CONTACT","validationAge":"Je certifie que j\'ai l\'âge légal pour la consommation d\'alcool dans mon pays","enter":"Entrer","close":"FERMER","menu":"MENU"}}')
    },
    "5f75": function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-SD-Vers carte.115d39d8.mp3"
    },
    "5fb4": function(e) {
        e.exports = JSON.parse('{"slug":"les-oriseaux","name":"LES ORISEAUX","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Ochre, Golden Yellow</p><p>Moisture / Well-balanced soil, porosity adequate but not excessive.<br/>Thanetian sands containing layers of limestone on Campanian chalk.<br/>The depth of the Thanetian sands reaches 2 metres in some places.</p><p>Exposure / double - south and north</p>","description":"<p>This vineyard with deep soil requires many years to transfer the interesting salts from the subsoil to the grapes.<br/>When young, or when the roots remain on the surface, wine from this vineyard does not balance its saltiness with the organic fraction and fruit.<br/>The grape variety can then take over, without adding complexity. We have to wait more than fifteen years for this vine stock to reveal the particular nature of this soil.<br/>We work this vineyard with an eye to the conservation of these plants, in the hope that they will continue to supply us with these grapes for the next 60 years...</p>","details":"<p>Total Area / 4ha46a12ca</p><p>Chartogne-Taillet Area / 49a17ca</p><p>Grape variety / 100% Pinot Noir</p><p>Year of planting / 1970</p><p>Exposure / South and North</p><p>Clay characteristics / Illites: 262 m2 / gr</p>","image":"/assets/images/bouteilles/orizeaux.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/orizeaux-sol.png","levels":[{"name":"Thanetian sands<br/>containing crumbled<br/>layers of limestone","caption":""},{"name":"Campanian Chalk","caption":"-2m"}]}]},"wine":{"name":"Orizeaux","specifications":"<p>Grape varieties / 100% Pinot Noir</p><p>Colour / Often Gold/Orangey with Golden lights</p>","packshot":"/assets/images/wines/packshot/orizeaux.png","content":[{"type":"block-column","text":"<p>The wine grower can approach wine from Les Orizeaux in multiple ways. Aged in tanks without air contact, it retains a supple texture, slightly rich in the mid-palate.<br/>Aged in casks, this wine opens up by balancing its chewiness as soon as the saltiness appears during maturation. This rich texture develops to provide a salty balance, which is not typical in our village.</p>"},{"type":"block-paragraph","text":"<h3>FERMENTATION</h3><p>Wines from Les Orizeaux quickly go into natural fermentation. The availability of mineral elements in this vineyard seems to favour rapid and stable fermentations. This wine rapidly triggers malolactic fermentation, no matter the temperature in the cellar or the level of pH. It is not advisable to block the malos for this Champagne, except perhaps in a year when the malolactic fermentation is slow to start, but this has not happened in the 10 short years that I\'ve been vinifying this Champagne.</p>"},{"type":"block-highlight","text":"Each year, Les Orizeaux is aged in old oak casks of Burgundian origin, with 2 to 9 wines."},{"type":"block-image","url":"/assets/images/cuve/les-oriseaux.jpg"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Each year, Les Orizeaux is aged in old oak casks of Burgundian origin, with 2 to 9 wines.<br/>It is not necessary to stir the lees in the casks, as the structure of the wine does not accommodate additional heaviness. I must be particularly careful when adding SO2 to the must during the harvest. This Champagne requires a mineralisation of its constituents, but does not tolerate oxidation. Adding just the right amount of SO2 during pressing allows the wine to remain stable while it opens up in the atmosphere, without regular topping-ups to achieve balance.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Orizeaux.pdf"}}')
    },
    "63fd": function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "word"
            }, e._l(e.caption, (function(t, a) {
                return i("span", {
                    key: a,
                    staticClass: "letter",
                    attrs: {
                        "data-idx": a
                    }
                }, [i("span", {
                    staticClass: "helper"
                }, [e._v(" " + e._s(t) + " ")])])
            }
            )), 0)
        }
          , s = []
          , n = {
            props: {
                caption: {
                    type: String,
                    default: ""
                }
            }
        }
          , r = n
          , o = i("2877")
          , l = Object(o["a"])(r, a, s, !1, null, "7e5fa92a", null);
        t["a"] = l.exports
    },
    "640b": function(e, t, i) {
        e.exports = i.p + "img/label.c55b0528.jpg"
    },
    "64bd": function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-SD-FM vers AQUA.eeada83b.mp3"
    },
    6590: function(e, t, i) {},
    "66a8": function(e, t, i) {},
    6729: function(e, t, i) {
        e.exports = i.p + "7f4d38d1bcad13a769d0af2faa406e1e.glb"
    },
    "70c9": function(e, t, i) {
        e.exports = i.p + "img/title.02500595.png"
    },
    "73ba": function(e, t, i) {
        "use strict";
        var a = i("01d9")
          , s = i.n(a);
        s.a
    },
    7425: function(e) {
        e.exports = JSON.parse('{"slug":"le-chemin-de-reims","name":"CHEMIN DE REIMS","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / 褐色、オレンジがかった赤砂</p><p>保水性 / バランスの取れた土壌、適度な保水性を持つ<br/>深さによってさまざまなバリエーションを持つ、鉄分の多く含まれたサネティアン期の砂質</p><p>畑の向き / 南又は南東向き</p>","description":"<p>保水性に優れた土壌で、ブドウの樹の根は あらゆる層の土壌に伸びていきます。<br/>土壌に含まれる豊かな鉄分のせいで ブドウの根元は赤みを帯び、亀の甲羅状に伸びていきます。まさにこの地がブドウの栽培に適応した土壌であることを示しています。肥沃な土地なので 草生栽培を行い 適度な水分と養分をブドウの樹に与えられるように工夫しています。</p>","details":"<p>畑の面積 / 1ha24a02ca</p><p>畑の耕作面積 / 1ha11a12ca</p><p>栽培品種 / シャルドネ85% / アルバンヌ15%</p><p>植樹された年 / 1980 年、 1995 年 、2011年</p><p>畑の向き / 南又は南東向き</p><p>粘土のタイプ / バーミキュライト含有量 272 m2 / gr (表土)</p><p>イライト含有量 / 479 m2 / gr (深さ50cm )</p>","image":"/assets/images/bouteilles/chemin-de-reims.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"赤み、又はオレンジがかったサネティアン期の砂質石灰岩","caption":""},{"name":"カンパニア期のチョーク層","caption":"60センチの深さ"}]}]},"wine":{"name":"Chemin de Reims","specifications":"<p>栽培品種 / シャルドネ85% / アルバンヌ15%</p><p>色合い / 緑がかった縁取りのしばしば輝きのある黄色に煌めくパール</p>","packshot":"/assets/images/wines/packshot/chemin-de-reims.png","content":[{"type":"block-column","text":"<p>暖かみのあるワイン、舌の奥に唾液がにじみ出てきます。<br/>口の中にタンニンの苦みが広がります。<br/>ル・シュマン・ド・ランスで栽培されているのは主にシャルドネですが、肥沃で鉄分の多い土壌の性格がシャルドネ特有の個性を打ち消し、ゆったりとした骨格のある味わいになります。口当たりは 鉄分由来の血の感じが現れ、そして次第にゆったりとした味わいに変わり、最後に区画の特徴を示すきりっとした酸が その味わいに緊張感を与えます。</p>"},{"type":"block-highlight","text":"暖かみのあるワイン、舌の奥に唾液がにじみ出てきます。"},{"type":"block-image","url":"/assets/images/cuve/chemin-de-reims.jpg"},{"type":"block-paragraph","text":"<h3>発酵そして熟成</h3><p>ル・シュマン・ド・ランスの区画のブドウは 樽からタンクまで様々な熟成方法が可能ですが、私の選択は 樽職人達の言葉を借りれば ≪ワインにとって還元剤であり、また保護者でもある≫オークの木樽を使用する方法に移行しています。2012年以降、ル・シュマン・ド・ランスのワインは 350～600ℓのオークの樽を用いて熟成が行われています。発酵の後半から定期的にウイヤージュを行い、この区画の持つ個性を保つようにしています。</p>"}],"fichetechnique":"/assets/pdf/jp/Chemin de reims JAP.pdf"}}')
    },
    7448: function(e) {
        e.exports = JSON.parse('{"slug":"le-chemin-de-reims","name":"LE CHEMIN DE REIMS","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol /  brune, sable rouge orangé</p><p>Humidité / Sol equilibré, porosité suffisante sans excès<br/>Sables du thanétien dont les couches varient en fonction de la profondeur, riche en fer.</p><p>Exposition / Sud - Sud Est</p>","description":"<p>Cette vigne conserve suffisamment d’humidité pour exciter la curiosité des racines à toutes les hauteurs de sol.</p><p>Ce sol riche en fer procure aux racines une teinte rosée, et une forme tortueuse, signifiant un sol de grande qualité pour accueillir de la vigne. Ce sol généreux est souvent travaillé sous un couvert d’herbes naturelles, limitant ainsi la générosité des pieds de vignes, l’excès d’eau et donc la disponibilité des éléments aux plantes.</p>","details":"<p>Surface Totale / 1ha24a02ca</p><p>Surface exploitée / 1ha11a12ca</p><p>Encépagement / 85% chardonnay / 15% arbanne</p><p>Année de plantation / 1980 - 1995 - 2011</p><p>Qualité des argiles: vermiculites  272 m2 / gr (sol de surface)</p><p>Illites: 479 m2 / gr (50 cm de profondeur)</p>","image":"/assets/images/bouteilles/chemin-de-reims.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"Sables calcaires du<br/>Thanétien rouges /<br/>orangés","caption":""},{"name":"Craie du Campanien","caption":"-60cm"}]}]},"wine":{"name":"Chemin de Reims","specifications":"<p>Encépagement / 85% Chardonnay / 15% Arbanne</p><p>Sa Couleur / Souvent pâle, aux reflets jaune brillant, dépassant le vert</p>","packshot":"/assets/images/wines/packshot/chemin-de-reims.png","content":[{"type":"block-column","text":"<p>Des amers tanniques tapissent la bouche. Le Chemin de Reims est planté majoritairement en chardonnay, mais la bouche ample et structurée perturbe tant les signes du cépage disparaissent au profit du sol riche en fer. Une texture sanguine, ample en milieu de bouche, puis tendue sur la fin, signe l’origine du lieu.</p>"},{"type":"block-highlight","text":"Vin chaleureux, à la salivation moyenne arrière de langue."},{"type":"block-image","url":"/assets/images/cuve/chemin-de-reims.jpg"},{"type":"block-paragraph","text":"<h3>L’ÉLEVAGE</h3><p>Le Chemin de Reims accepte des atmosphères d’élevage différentes, du fût aux cuves. La densité de ce Champagne oriente mon choix vers des contenants en chêne, chez des tonneliers dont les fûts sont plus «réducteurs et protecteurs». Depuis 2012, le Chemin de Reims est élevé dans des fûts de 350 à 600 litres. Un ouillage régulier dès la fin des fermentations permet de conserver l’originalité des vins de cette parcelle.</p>"}],"fichetechnique":"/assets/pdf/fr/Chemin de reims.pdf"}}')
    },
    "74ff": function(e) {
        e.exports = JSON.parse('{"slug":"les-heurtes-bises","name":"LES HEURTES BISES","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Yellowish brown</p><p>Soil varying from dry to moist depending on climatic conditions. Thanetian sands mixed with clay on sandstone</p><p>Exposure / South</p>","description":"<p>These vines are situated on a sandstone soil, less permeable than the neighbouring chalk or \\"Tuf\\" soils. This impacts the vines, which adapt to excess water or dryness.<br/>Heurtebise is, as its name suggests, a plot located on a windy plateau.</p><p>The work of the wine grower on this plot is to adapt the plant\'s response to climatic variations. In a wet year, I favour high foliage and aeration of the foliage in order to consume the soil\'s water via the plants\' evapotranspiration and the wind. Ground cover can also play an important role in limiting the availability of nutrients to the plants.</p><p>Conversely, in a dry year, we pinch back the foliage, to limit the rapid absorption of water from the soil.</p><p>Although this plot is situated on a very gentle slope, we may need to work the soil everywhere (adjacent to and within the rows), so water rises from the subsoil when needed.</p>","details":"<p>Total Area / 5ha80a65ca</p><p>Chartogne-Taillet Area / 1ha67a48ca</p><p>Varieties / 83% Chardonnay / 12% Pinot Noir / 5% Meunier</p><p>Year of planting / 1972 - 1985 - 1986 - 2010</p><p>Exposure / South</p><p>Type of clay / Illites: 245 m2 / gr</p>","image":"/assets/images/bouteilles/heurtebise.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"Thanetian limestone sands<br/>and clay","caption":""},{"name":"Sandstone","caption":"-80cm"}]}]},"wine":{"name":"Heurtbise","specifications":"<p>Grape varieties / 83% Chardonnay / 12% Pinot Noir / 5% Meunier</p><p>Colour / Dazzling / Bright Yellow with green lights</p>","packshot":"/assets/images/wines/packshot/heurtebise.png","content":[{"type":"block-highlight","text":"The Heurtebise plot gives us wines with an Angular, Vibrant texture"},{"type":"block-paragraph","text":"<p>A mid and upper palate salivation marks this Champagne, accompanied by a crystalline and sometimes tannic consistency. The sandstone minerality adds nervousness to this wine.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-heurtes-bises.jpg"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Heurtebise are aged in 228-litre casks to accommodate the natural tension of these juices when certain casks are opened. The minerality is enrobed in non-tannic sweetness from the Burgundian casks for a period ranging from 9 to 18 months.</p><p>The aging has a greater influence on the Heurtebise than for other wines from neighbouring plots.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Heurtebise.pdf"}}')
    },
    7535: function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-Loop-FreeMode-FADE-201009.2314f0b3.mp3"
    },
    "78c4": function(e) {
        e.exports = JSON.parse('{"slug":"les-heurtes-bises","name":"LES HEURTES BISES","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / 黄褐色</p><p>保水性 / 天候によって乾いたり湿ったり 様々なバリエーションを持つ土壌 砂岩の上に粘土の混じるサネティアン期の砂質</p><p>斜面の向き / 南向き</p>","description":"<p>この畑は砂岩の土壌の上にあり、隣接のチョーク層、または≪凝灰岩≫の土壌のような影響を受けにくくなります。過度の水分、又は乾水に適応するブドウの樹が 畑全体に影響力を与えます。<br/>ウルトヴィーズは その名が示す通り、風当たりの強い台地に位置しています。<br/>ヴィニョロンのこの区画での仕事は 様々な気候の変化を受けやすいブドウの樹の反応を見ながら、適宜適切に対応していくことです。雨の多い年には 葉を高くし より多くの地中の水分を吸い上げさせます。 そして風を利用して 植物の水分蒸発を促す様にするのです。 葉はまた 植物の栄養分の取りすぎを防ぐ重要な役割を果たしています。<br/>反対に 雨量の少ない年には 葉は先端を摘んで低くし、地中の水分を直ぐに吸収させないようにします。<br/>この区画は 傾斜のほとんど見られない土地に位置していますが、耕作は下そして横の列共に必要で、必要性を感じた場合には 下層土の水分を表土の方に持ってくるようにします。</p>","details":"<p>畑の合計 / 5ha80a65ca</p><p>畑の耕作面積 / 1ha67a48ca</p><p>栽培品種 / シャルドネ83% / ピノ・ノワール12% / ムニエ5%</p><p>植樹年 / 1972 年 1985 年 1986 年 2010年</p><p>畑の向き / 南</p><p>粘土のタイプ / イライト含有量 245 m2 / gr</p>","image":"/assets/images/bouteilles/heurtebise.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"サネティアン期の砂質石灰岩","caption":""},{"name":"砂岩 (サンドストーン)","caption":"80センチの深さ"}]}]},"wine":{"name":"Heurtebise","specifications":"<p>栽培品種 / シャルドネ83% / ピノ・ノワール12% / ムニエ5%</p><p>色合い / ウルトヴィーズ</p>","packshot":"/assets/images/wines/packshot/heurtebise.png","content":[{"type":"block-highlight","text":"ウルトヴィーズの区画からは 角のある震えるような口当たりのワインが生まれます。"},{"type":"block-paragraph","text":"<p>ウルトヴィーズの区画からは 角のある震えるような口当たりのワインが生まれます。口蓋の中ほどに現れる唾液が 澄んだ硬さ、ときにはタンニンと共に感じられるのが、このシャンパーニュの特徴です。<br/>砂岩（サンドストーン）のミネラル分によって 程よい酸味のあるワインになります。</p>"},{"type":"block-image","url":"/assets/images/cuve/les-heurtes-bises.jpg"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>ウルトヴィーズの区画のワインは 元来果汁に含まれる自然の酸を残したまま228ℓの木樽を用いて熟成が行われます。ミネラル分が糖のローブをまとい、ブルゴーニュのオークの木樽に含まれるタンニンと触れ合うことなく9～18か月かけて熟成が行われます。<br/>木樽による熟成は 隣接する他の区画のものより影響を受けやすくなります。</p>"}],"fichetechnique":"/assets/pdf/jp/Heurtebise.pdf"}}')
    },
    "79b9": function(e, t, i) {
        i("ac1f"),
        i("1276"),
        CanvasRenderingContext2D && !CanvasRenderingContext2D.renderText && (CanvasRenderingContext2D.prototype.renderText = function(e, t, i, a) {
            if (e && "string" === typeof e && 0 !== e.length) {
                "undefined" === typeof a && (a = 0);
                var s = String.prototype.split.call(e, "")
                  , n = 0
                  , r = t
                  , o = 1;
                if ("left" === this.textAlign)
                    ;
                else if ("right" === this.textAlign)
                    s = s.reverse(),
                    o = -1;
                else if ("center" === this.textAlign) {
                    for (var l = 0, u = 0; u < s.length; u++)
                        l += this.measureText(s[u]).width + a;
                    r = t - l / 2 + a
                }
                while (n < e.length) {
                    var h = s[n++]
                      , c = 0
                      , d = this.measureText(h).width;
                    "center" === this.textAlign && (c -= .5 * (a - d)),
                    this.fillText(h, r + c, i),
                    r += o * (d + a)
                }
            }
        }
        )
    },
    "7aad": function(e) {
        e.exports = JSON.parse('{"slug":"les-fontaines","name":"LES FONTAINES","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / marron / beige / blanc</p><p>Humidité / Sol à humidité modérée (craie drainante)</p><p>Exposition / Est / Ouest</p>","description":"<p>La vigne des Fontaines est installée sur un sous sol crayeux, offrant aux pieds de vignes une excellente régulation des excès. Le sable de surface est mélangé à cette craie qui procure aux raisins une peau fine et souple, résistante aux excès et limitant ainsi les apparitions de pourriture à la vendange.</p><p>Les rendements de cette parcelle sont bas, nous essayons chaque année de faire un pressoir avec ces raisins. </p>","details":"<p>Surface Totale / 1ha38a90ca</p><p>Surface exploitée / 81 ares 90 ca</p><p>Encépagement / Meunier / Pinot Noir</p><p>Année de plantation / 1971 - 1972</p><p>Type d’argile / Illites (186 m2/gr)</p>","image":"/assets/images/raisins/raisin-noir03.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"Sol limoneux / sableux<br/>Galeries tapissées de<br/>carbonates de calcium","caption":"-40cm"},{"name":"Craie Gélifractée et grès","caption":"-1 mètre"}]}]},"wine":{"name":"Les Fontaines","specifications":"<p>Assemblages / Saint-Anne</p><p>Sa Couleur / Sable blond à saumon les années chaudes</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Le vin des Fontaines rentre dans la composition de la cuvée Sainte Anne"},{"type":"block-paragraph","text":"<p>La texture des vins des Fontaines est angulaire et collante. Les amers et la salinité de ces vins sont remarquables. Le caractère parfois rond de certains meuniers n’apparaît que très rarement.</p><h3>L’ÉLEVAGE</h3><p>Le vin des Fontaines est souvent élevé dans des fûts de deux à quatre vins pour ne pas cacher le marqueur crayeux de l’origine. Il faut éviter l’ajout de marqueur tannique ou réducteur (fûts neufs ou cuves), tout en permettant à ce vin un vieillissement lent et aéré.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-fontaines.jpg"}],"fichetechnique":"/assets/pdf/fr/Les Fontaines.pdf"}}')
    },
    "7e10": function(e, t, i) {
        e.exports = i.p + "img/title.ec594d14.png"
    },
    "7f07": function(e, t, i) {
        e.exports = i.p + "img/paintingMask.ba9be29d.jpg"
    },
    8743: function(e) {
        e.exports = JSON.parse('{"slug":"les-alliees","name":"LES ALLIÉES","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Brown, Dark chestnut brown, tending towards Black<br/>Moisture / Moist soil<br/>Exposure / South</p>","description":"<p>The Les Alliées vineyard is atypical for Merfy. The soil contains clays that constantly retain moisture. This soil\'s generosity creates a high susceptibility to diseases, mainly botrytis, which sets in quickly while the fruit is still ripening.<br/>A great deal of monitoring is required to obtain this plot\'s Champagnes, with their strong identity.</p>","details":"<p>Total Area: 4ha77a35ca</p><p>Chartogne-Taillet Area: 60 ares 60 ca</p><p>Grape variety: Meunier</p><p>Year of planting: 1969</p><p>Exposure: South / South East</p><p>Type of clay: Vermiculites 362 m2/gr</p>","image":"/assets/images/raisins/raisin-noir01.jpg","underground":[{"title":"Soil level","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"Silty sands<br/>upper Ypresian limestones","caption":""},{"name":"Sandy Clay","caption":"1 meter depth"}]}]},"wine":{"name":"Les Alliées","specifications":"<p>Colour /Brilliant orangey pink</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Wines from the Mont Agé plot are included in the composition of the Sainte Anne cuvée"},{"type":"block-paragraph","text":"<h3>TEXTURE</h3><p>Les Alliées yields a wine with a vertical, almost square texture. Salivation is intense and the acidity often more marked than the village\'s other Meunier vines. These angular curves make it a Champagne that thrives on maturation.</p>"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Les Alliées have been aged in new or young casks since 2016. The wood\'s silky tannins attenuate the lively character of wines from this plot, and rebalance the richness of the Meunier, which could disturb the balance of the wine.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-alliees.jpg"}],"fichetechnique":"/assets/pdf/en/Les Alliees ENG.pdf"}}')
    },
    8825: function(e, t, i) {},
    8990: function(e, t, i) {},
    "8b32": function(e) {
        e.exports = JSON.parse('{"slug":"les-grands-champs","name":"LES GRANDS CHAMPS","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol /  Marron sombre.</p><p>Humidité / Coteau qui permet l’évacuation des excès d’eau. humidité moyenne<br/>Argiles calcaires et sables du Thanétien sur craie du Campanien<br/>Qualité des argiles / Illite / Vermiculites / 390 gr (m2/gr)</p>","description":"<p>Cette vigne conserve suffisamment d’humidité pour exciter la curiosité des racines à toutes les hauteurs de sol.</p><p>Ce sol est représentatif des sols de la Terre de l’abbaye de Saint Thierry. Une exposition qui regarde Reims, dont la pente suffisante permet l’extraction naturelle des eaux par ruissellement en plus de l’infiltration. L’ensoleillement privilégié de ce coteau plein sud dore les raisins dès que la maturation phénolique approche. Nous laissons souvent pousser l’herbe durant la saison viticole ce qui permet une bonne concurrence des plantes entre elles, favorisant la tenue des sols ainsi que l’enracinement vertical des racines.</p><p>Ces sols argilo calcaires mélangés à des sables et limons régulent les excès de vigueur par la présence de la craie et le coteau. Les raisins des Grands Champs sont remarquables, comme les vins de ce lieu anciennement travaillé par les moines bénédictins de l’abbaye de Saint Thierry.</p>","details":"<p>Surface totale / 4ha53a70ca</p><p>Surface exploitée / 61a98ca</p><p>Encépagement / 39% Chardonnay / 61% Meunier</p><p>Année de plantation / 1969 - 2003</p><p>Exposition /  Sud - Sud Est</p>","image":"/assets/images/raisins/raisin-noir04.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"Argiles perméables et<br/>Sables du Thanétien.","caption":""},{"name":"Craie du Campanien","caption":"-1m30cm"}]}]},"wine":{"name":"Les grands champs","specifications":"<p>Assemblage / Saint-Anne</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-column","text":"<p>Les fermentations dévoilent rapidement la trame calcaire des vins des Grands Champs. Les coteaux Sud installés à Saint Thierry regardent Reims et la Grande montagne de Reims juste derrière la ville. La présence de craie en sous-sol ainsi que des coteaux fournit à cette vigne un tempérament calcaire et minéral.</p>"},{"type":"block-highlight","text":"Le vin des Grands Champs rentre dans la composition de la cuvée Sainte Anne"},{"type":"block-image","url":"/assets/images/cuve/les-grands-champs.jpg"},{"type":"block-paragraph","text":"<h3>L\'ÉLEVAGE</h3><p>Les vins des Grands Champs s’épanouissent dans de nombreux contenants. Ils s’élèvent sans se soucier des influences extérieures, ne s’imprègnent pas des aléas ou autres agréments issus d’un millésime. La craie nourrit ces vignes qui, en rendements raisonnables, livrent un vin au tempérament champenois proche des vins de villages Grands Crus de la Champagne.</p>"}],"fichetechnique":"/assets/pdf/fr/Les Grands Champs St Thierry.pdf"}}')
    },
    "8c9f": function(e) {
        e.exports = JSON.parse('{"slug":"le-mont-age","name":"LE MONT AGÉ","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / sombre, presque noir<br/>Humidité / sol humide<br/>Exposition / Sud</p>","description":"<p>Les coteaux de Merfy Chenay sont par endroits sensibles aux excès d’eau. C’est le cas pour cette parcelle installée entre Chenay et Merfy. Les sols gras absorbent l’eau et se gonflent, nous obligeant à reporter nos interventions aux prochains vents asséchants. Le travail du sol n’y est fait qu’à l’aide de nos chevaux, pour pallier à ces situations difficiles, sans redouter de rester enlisé dans ces sols humides.</p>","details":"<p>Surface Totale : 4ha06a50ca</p><p>Surface exploitée : 43 ares 30 ca</p><p>Encépagement : Meunier</p><p>Année de plantation : 1980 - 1983</p><p>Exposition : Sud / Sud -Est</p><p>Type d’argile : Vermiculites 319 m2/gr</p>","image":"/assets/images/raisins/raisin-noir02.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"Sables du Cuisien","caption":""},{"name":"Argile Sableuse","caption":"-1m"}]}]},"wine":{"name":"Le Mont Agé","specifications":"<p>Sa Couleur / Jaune pâle<br/>Texture /Le Mont âgé signe des vins frais à froids, au caractère tendu et ciselé..</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Le vin du Mont Âgé rentre dans la composition de la cuvée Sainte Anne"},{"type":"block-paragraph","text":"<h3>L’ÉLEVAGE</h3><p>Les vins de cette parcelle rentrent dans la composition de la cuvée Sainte Anne. Ils ont besoin d’énormément d’attention comme ceux de la parcelle voisine, les Alliées.<br/>Les sels sont dissimulés derrière une tension importante et un gras variétal (Meunier). L’influence de l’homme durant l’élevage est importante et modifie le profil de ces vins sensibles.<br/>Nous essayons de conserver cette trame droite, tout en effaçant le cépage lors d’un élevage en fûts anciens de 228 litres.</p>"},{"type":"block-image","url":"/assets/images/cuve/le-mont-age.jpg"}],"fichetechnique":"/assets/pdf/fr/Le Mont age.pdf"}}')
    },
    "8ef7": function(e, t, i) {
        e.exports = i.p + "img/arrowButton.a52e193f.png"
    },
    "90b2": function(e, t, i) {
        e.exports = i.p + "img/title.33a6fa25.png"
    },
    9227: function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("canvas", {
                ref: "canvas"
            })
        }
          , s = []
          , n = (i("4160"),
        i("a9e3"),
        i("159b"),
        i("49ce"))
          , r = i("5a89")
          , o = i("cffa")
          , l = i("b35e")
          , u = i("1a27")
          , h = "precision lowp float;\n#define GLSLIFY 1\n\nuniform sampler2D uTexture;\nuniform sampler2D uRevealTexture;\nuniform float uTime;\nuniform vec2 uRevealTextureFrequency;\nuniform vec2 uRevealRandomFrequency;\n\nvarying float progress;\nvarying vec3 vUv;\n\nfloat random2d(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat getPerlinProgress(vec2 uv, sampler2D _texture, vec2 textureFrequency, vec2 randomFrequency, float progress, float time)\n{\n    vec2 scaledUv = uv * textureFrequency;\n    float perlinStrength = texture2D(_texture, scaledUv).r;\n\n    // Grid offset\n    vec2 randomUv = floor(uv * randomFrequency);\n    float randomOffset = sin(random2d(randomUv) * 3.14 * 2.0 + time) * 0.5 + 0.5;\n\n    // Scafolding\n    float scafoldingAmplitude = 1.0;\n    float newProgress = 1.0 + randomOffset * scafoldingAmplitude + perlinStrength - (1.0 - progress) * (scafoldingAmplitude + 2.0);\n\n    // Final\n    newProgress = step(0.5, newProgress);\n    newProgress = clamp(newProgress, 0.0, 1.0);\n\n    return newProgress;\n}\n\nvoid main()\n{\n    vec4 color = texture2D(uTexture, vUv.xz);\n    color.a *= getPerlinProgress(vUv.xy, uRevealTexture, uRevealTextureFrequency, uRevealRandomFrequency, progress, uTime);\n    gl_FragColor = color;\n}\n"
          , c = "#ifndef HALF_PI\n#define HALF_PI 1.5707963267948966\n#endif\n\nprecision lowp float;\n#define GLSLIFY 1\n\nattribute vec2 uv;\nattribute vec4 position;\nuniform float uRevealProgress;\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\nuniform float offset;\nuniform float shifting;\nuniform float count;\nvarying float progress;\nvarying vec3 vUv;\nvoid main() {\n  vUv = vec3(uv, uv.y / count + (offset) / count);\n  float h = 0.5;\n  float shift = uRevealProgress / (1.0 - h) + h * offset / count;\n  \n  float off = (offset - 1.0) * 0.1;\n  progress = min(shift * 0.3215 + 0.225, 1.0);\n  vec4 pos = position;\n  pos.y -= mix(0.0, 1.0 - sin(clamp(0.0, 1.0, shift) * HALF_PI), shifting);\n  vec4 dpos = projectionMatrix * modelViewMatrix * pos;\n  gl_Position = dpos;\n}\n"
          , d = {
            name: "PerlinImage",
            mixins: [n["a"]],
            props: {
                image: {
                    type: String,
                    default: ""
                },
                static: {
                    type: Boolean,
                    default: !1
                },
                padding: {
                    type: Number,
                    default: 0
                },
                shifting: {
                    type: Number,
                    default: 0
                },
                lines: {
                    type: Number,
                    default: 1
                },
                dieOnLeave: {
                    type: Boolean,
                    default: !1
                }
            },
            mounted: function() {
                this.timeout && window.clearTimeout(this.timeout),
                this.initiate()
            },
            beforeDestroy: function() {
                this.dispose()
            },
            destroyed: function() {
                this.dieOnLeave || this.renderer.forceContextLoss()
            },
            methods: {
                initiate: function() {
                    this.time = new u["a"],
                    this.scene = new r["yb"],
                    this.planes = new r["fb"],
                    this.scene.add(this.planes),
                    this.renderer = new r["Vb"]({
                        canvas: this.$refs.canvas,
                        alpha: !0,
                        stencil: !1,
                        depth: !1,
                        powerPreference: "high-performance",
                        antialias: !1
                    }),
                    this.renderer.setClearColor(16711680, 0),
                    this.renderer.setPixelRatio(Math.min(2, window.devicePixelRatio)),
                    this.loader = new r["Jb"],
                    this.perlinTexture = this.loader.load("/assets/images/perlin-512x512.jpg"),
                    this.defineTexture();
                    for (var e = 0; e < this.lines; e++)
                        this.setPlane(e)
                },
                defineTexture: function() {
                    var e = this;
                    this.image ? this.texture = this.loader.load(this.image, (function() {
                        e.binded = !0,
                        e.bindings()
                    }
                    )) : (this.texture = new r["g"](this.$parent.$refs.canvas),
                    this.texture.minFilter = r["J"],
                    requestAnimationFrame((function() {
                        e.binded = !0,
                        e.bindings()
                    }
                    )));
                    var t = {
                        uTexture: {
                            value: this.texture
                        },
                        uTime: {
                            value: .1
                        },
                        uRevealTexture: {
                            value: this.perlinTexture
                        },
                        uRevealTextureFrequency: {
                            value: new r["Qb"](1,1)
                        },
                        uRevealRandomFrequency: {
                            value: new r["Qb"](1,1)
                        },
                        uRevealProgress: {
                            value: 0
                        },
                        offset: {
                            value: 2
                        },
                        shifting: {
                            value: 0
                        },
                        count: {
                            value: this.lines
                        }
                    };
                    this.material = new r["ub"]({
                        transparent: !0,
                        depthTest: !1,
                        depthWrite: !1,
                        uniforms: t,
                        vertexShader: c,
                        fragmentShader: h
                    }),
                    this.geometry = new r["jb"](1,1,1),
                    this.plane = new r["T"](this.geometry,this.material)
                },
                setPlane: function(e) {
                    var t = this.plane.clone();
                    t.material = this.plane.material.clone(),
                    t.material.uniforms.offset.value = e,
                    t.material.uniforms.uTexture.value = this.texture,
                    t.material.uniforms.uRevealTexture.value = this.perlinTexture,
                    t.material.uniforms.shifting.value = this.shifting,
                    this.planes.add(t)
                },
                bindings: function() {
                    var e = this;
                    this.onResized();
                    var t = this.sizes
                      , i = t.width
                      , a = t.height;
                    this.camera = new r["gb"](i / -2,i / 2,a / 2,a / -2,0,1),
                    this.camera.position.set(0, 0, 0),
                    this.static || (this.image ? this.setScene() : this.$nextTick((function() {
                        window.setTimeout((function() {
                            e.setAppear()
                        }
                        ), 150)
                    }
                    )))
                },
                handleEnter: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;
                    this.tl && this.tl.kill();
                    var i = {
                        x: 0
                    };
                    return this.tl = new o["a"].timeline({
                        onComplete: function() {
                            e.dispose()
                        }
                    }).to(i, t, {
                        x: 1,
                        onUpdate: function() {
                            if (e.binded) {
                                var t = i.x;
                                e.planes.children.forEach((function(e) {
                                    e.material.uniforms.uRevealProgress.value = t
                                }
                                )),
                                e.handleRender()
                            }
                        }
                    }),
                    this.tl
                },
                handleLeave: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 3;
                    this.tl && this.tl.kill();
                    var i = {
                        x: this.planes.children[0].material.uniforms.uRevealProgress.value
                    };
                    return this.tl = (new o["a"].timeline).to(i, t, {
                        x: 0,
                        onUpdate: function() {
                            if (e.binded) {
                                var t = i.x;
                                e.planes.children.forEach((function(e) {
                                    e.material.uniforms.uRevealProgress.value = t
                                }
                                )),
                                e.handleRender()
                            }
                        },
                        onComplete: function() {
                            e.renderer.forceContextLoss()
                        }
                    }),
                    this.tl
                },
                setScene: function() {
                    var e = this
                      , t = {
                        x: 0,
                        y: 0
                    }
                      , i = (new o["a"].timeline).to(t, 4, {
                        x: .625,
                        ease: "none",
                        onUpdate: function() {
                            var i = t.x;
                            e.planes.children.forEach((function(e) {
                                e.material.uniforms.uRevealProgress.value = i
                            }
                            )),
                            e.handleRender()
                        }
                    })
                      , a = o["a"].timeline({
                        scrollTrigger: {
                            trigger: this.$el,
                            start: "top 90%",
                            end: "bottom bottom",
                            scrub: .625
                        }
                    });
                    a.add(i)
                },
                setAppear: function() {
                    var e = this
                      , t = {
                        x: 0
                    }
                      , i = new o["a"].timeline({
                        onComplete: function() {
                            e.dispose()
                        }
                    }).to(t, 2, {
                        x: 1,
                        onUpdate: function() {
                            var i = t.x;
                            e.planes.children.forEach((function(e) {
                                e.material.uniforms.uRevealProgress.value = i
                            }
                            )),
                            e.handleRender()
                        }
                    });
                    l["a"].create({
                        trigger: this.$parent.$el,
                        animation: i,
                        start: "top 90%",
                        once: !0
                    })
                },
                dispose: function() {
                    this.time.stop(),
                    this.geometry.dispose(),
                    this.material.dispose(),
                    this.renderer.dispose()
                },
                handleRender: function() {
                    this.renderer.render(this.scene, this.camera)
                },
                onResized: function() {
                    var e = this;
                    if (this.sizes = {
                        width: this.$el.parentNode.offsetWidth,
                        height: this.texture.image.height / (this.texture.image.width / this.$el.parentNode.offsetWidth)
                    },
                    this.camera) {
                        var t = this.sizes
                          , i = t.width
                          , a = t.height;
                        this.camera.left = i / -2,
                        this.camera.right = i / 2,
                        this.camera.top = a / 2,
                        this.camera.bottom = a / -2,
                        this.camera.updateProjectionMatrix()
                    }
                    this.renderer.setSize(this.sizes.width, this.sizes.height);
                    var s = this.sizes.height / this.lines;
                    this.planes.children.forEach((function(t, i) {
                        t.scale.x = e.sizes.width,
                        t.scale.y = s,
                        t.position.y = s * (i - (e.lines - 1) / 2)
                    }
                    )),
                    requestAnimationFrame((function() {
                        e.renderer.render(e.scene, e.camera)
                    }
                    ))
                }
            }
        }
          , m = d
          , p = (i("175a"),
        i("2877"))
          , g = Object(p["a"])(m, a, s, !1, null, "74ad1fe8", null);
        t["a"] = g.exports
    },
    "966a": function(e, t, i) {},
    9976: function(e, t, i) {
        e.exports = i.p + "img/streets.129cbd22.png"
    },
    "99c0": function(e, t, i) {
        e.exports = i.p + "img/subTitle.9bc64c8e.png"
    },
    "9a2c": function(e, t, i) {
        e.exports = i.p + "img/compassArrow.2225f3e6.png"
    },
    "9b87": function(e) {
        e.exports = JSON.parse('{"slug":"les-couarres","name":"LES COUARRES","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Dark; Brown</p><p>Moisture / Dampest soil in the estate</p><p>Exposure / South, gentle slope</p>","description":"<p>The Les Couarres vineyard is situated in the centre of the Merfy terroir, in the least well-draining area of the village. There are two types of subsoil in this plot: Tufa and Clay  For these two plots, our labour is more or less the same, with greater useful reserves than the neighbouring plots, and an ability to maintain a level of moisture that avoids water deficiencies for the vines planted in this lieu-dit.  While many of the soils in the village dry quickly and allow ploughing soon after the rains, the lieu-dit Les Couarres requires patience. Due to this fact, as well as the plot\'s topography, these vines are the most susceptible to frost.  The yields from this plot are the most generous on the estate and often have to be limited by extensive de-budding and the removal of every second shoot.</p>","details":"<p>Total Area / 3ha71a20ca<br/>Chartogne-Taillet Area / 1ha94a15ca<br/>Varieties / Pinot Noir - Chardonnay<br/>Year of planting: 1970 - 2009<br/>Exposure / South - South East<br/>Granulometry of clays / 272 g</p>","image":"/assets/images/bouteilles/les-couarres.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/couarres-chateau.png","levels":[{"name":"Sands and Clays","caption":"-40cm"},{"name":"Tufa","caption":"-80cm"}]},{"title":"SOIL LEVEL","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"Thanetian and Upper<br/>Ypresian limestone sands","caption":"-40cm"},{"name":"Clay (Sedimentary rock)","caption":"-120cm"}]}]},"wine":{"name":"Les Couarres","specifications":"<p>Colour / Clear, limpid, often \\"Golden\\" in colour</p>","packshot":"/assets/images/wines/packshot/les-couarres.png","content":[{"type":"block-column","text":"<p>Wines from Les Couarres open up over time. These are certainly the wines that require the most rigour when overseeing their maturation. Their delicate and sticky \'clay\' texture means that rapid oxygen uptake must be avoided as much as possible during the aging process.  Wines from Les Couarres are marked by a spherical \\"stickiness\\" on the palate, followed by freshness with medium acidity throughout the finish. The differences between the tufa part and the clay part principally concern an environment that is for stony for one (tufa), and cooler and tauter for the other (clay)</p>"},{"type":"block-highlight","text":"Wines from Les Couarres open up over time."},{"type":"block-image","url":"/assets/images/cuve/les-couarres.jpg"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Les Couarres are certainly the laziest. They like to be looked after in a simple fashion, and protected to avoid the turbulent experience of rapid oxidation.</p><p>I think it is necessary to protect these Champagnes from oxygen from the moment of pressing, by selecting casks of two or three wines in a \\"humid\\" environment (cellar). I try to control the angels\' share (evaporation) to limit this wine being weakened by too much contact with the air.</p><p>The casks in which these wines are kept are topped up regularly.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Les Couarres.pdf"}}')
    },
    "9c0c": function(e, t, i) {},
    a271: function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-SD-Change village.d8363f65.mp3"
    },
    a2c0: function(e) {
        e.exports = JSON.parse('{"slug":"les-brets","name":"LES BRETS","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / Orange doré, marron «jaune»</p><p>Humidité / Coteau qui permet l’évacuation des excès d’eau.<br/>Humidité plus importante que la moyenne des parcelles du village.<br/>Sables du Cuisien , Sables argileux sur sol équilibré à 30% sables, 30% argiles, 40% de limons.</p><p>Exposition / Est - Nord Est</p>","description":"<p>Cette vigne conserve suffisamment d’humidité pour exciter la curiosité des racines à toutes les hauteurs de sol.</p><p>Ce sol, très original pour Merfy, à l’orientation Est, force un travail adapté aux sols, à l’opposé des vignes du sud du village. Tandis que ses voisines minéralisent les éléments nutritifs rapidement et parfois en excès, les Brets s’alimentent avec une régularité qui surprend nos habitudes viticoles. Les herbes ne poussent jamais trop vite, ni trop lentement, offrant au quotidien une forme de tranquillité d’esprit. Il faut cependant être vigilant à la période de passage. Ces sols n’acceptent pas nos outils de vignerons (binettes, charrues ...) lorsque la sécheresse s’installe. Ces sols se ferment plus rapidement et deviennent plus durs que les vignes voisines. Tous les travaux du sol sont réalisés au cheval dans cette parcelle, pour ne passer que lorsque le sol le permet, en évitant que la machine n’enfonce ses outils en forçant la nature à s’ouvrir, tandis qu’elle ne le permettrait pas aux hommes et animaux.</p><p>Le coteau peut être traitre. La légère pente couplée à la texture proche d’une argile fait de ce lieu dit un piège pour les engins à roues. Les sols peuvent rapidement devenir glissants et difficiles à traverser en diverses occasions pluvieuses.</p>","details":"<p>Surface Totale / 97a23ca</p><p>Surface exploitée / 97a23ca</p><p>Encépagement / 53% chardonnay / 27% pinot noir / 23% meunier</p><p>Année de plantation / 1971 - 1997</p><p>Qualité des argiles / Vermiculites / 350 gr (m2/gr)</p>","image":"/assets/images/raisins/raisin-blanc01.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"Sables, Argiles, Limons","caption":""},{"name":"Craie du Campanien","caption":"-90cm"}]}]},"wine":{"name":"Les Brets","specifications":"<p>Assemblages / Saint-Anne</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Le vin des Brets est un vin qui provoque la salivation sur le tour de la langue, à la consistance dense, puis crémeuse sur le vieillissement."},{"type":"block-paragraph","text":"<h3>L’ÉLEVAGE</h3><p>Le vin des Brets a été longtemps élevé en cuves inox, resserrant le profil gustatif et garantissant la conservation des différents acides du vin. Depuis 2016, ces vins sont placés en fûts au même titre que les vignes voisines. Le tempérament complet des Brets accepte les tanins de jeunes fûts de 228 litres ou de contenants plus larges. Une tenue de ces vins est cependant nécessaire. Chaque parcelle, offrant un profil équilibré sur l’acidité, n’apprécie pas les déviations organoleptiques. Je privilégie des ouillages réguliers et une minéralisation lente mais progressive.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-brets.jpg"}],"fichetechnique":"/assets/pdf/fr/Les Brets.pdf"}}')
    },
    a447: function(e, t, i) {
        e.exports = i.p + "4305195214eeb2d34abca1aeacc1e494.glb"
    },
    a69e: function(e) {
        e.exports = JSON.parse('{"slug":"les-oriseaux","name":"LES ORISEAUX","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / Ocre , Jaune doré</p><p>Humidité / Sol equilibré, porosité suffisante sans excès<br/>Sables du tanétien habités par des couches de calcaire sur craie du campanien.<br/>La profondeur des sables du Thanétien atteint 2 mètres par endroits.</p><p>Exposition / double - sud et nord</p>","description":"<p>Cette vigne au sol profond nécessite de nombreuses années pour transférer aux raisins les sels intéressants du sous sol.</p><p>Jeune ou lorsque les racines restent en surface, cette vigne n’équilibre pas ses sels avec l’organique du vin. Le cépage peut alors prendre le dessus, sans apporter de complexité. Il faut attendre plus de quinze années pour que ces ceps délivrent l’origine particulière de ce sol. Nous travaillons cette vigne en nous souciant de la conservation de ses souches pour espérer qu’elle nous livre encore ses raisins pour les 60 prochaines années</p>","details":"<p>Surface totale / 4ha46a12ca</p><p>Surface exploitée / 49a17ca</p><p>Encépagement / 100% pinot noir</p><p>Année de plantation / 1970</p><p>Qualité des argiles / Illites / 262 m2 / gr)</p>","image":"/assets/images/bouteilles/orizeaux.jpg","underground":[{"title":"SOUS-SOL DE<br/>LA PARCELLE","image":"/assets/images/parcelles/orizeaux-sol.png","levels":[{"name":"Sables du Thanétien<br/>Couches de Calcaires<br/>émiettés","caption":""},{"name":"Craie du Campanien","caption":"-2m"}]}]},"wine":{"name":"Orizeaux","specifications":"<p>Encépagement / 100% Pinot Noir</p><p>Sa Couleur / Souvent or - orangé aux reflets dorés</p>","packshot":"/assets/images/wines/packshot/orizeaux.png","content":[{"type":"block-column","text":"<p>Orizeaux est un vin qui permet plusieurs appréciations du vigneron. Elevé en cuves sans contact à l’air, il conserve une texture souple, légèrement grasse en milieu de bouche.</p><p>Elevé en fûts, ce vin s’épanouit en équilibrant sa mâche dès l’apparition des sels durant le vieillissement. cette texture grasse s’étend pour offrir un équilibre salin, inabituel pour notre village.</p>"},{"type":"block-highlight","text":"Orizeaux est chaque année élevé en fûts de chêne anciens de 2 à 9 vins, d’origine Bourguignonne."},{"type":"block-image","url":"/assets/images/cuve/les-oriseaux.jpg"},{"type":"block-paragraph","text":"<h3>L\'ÉLEVAGE</h3><p>Orizeaux est chaque année élevé en fûts de chêne anciens de 2 à 9 vins, d’origine Bourguignonne. Aucun bâtonnage n’est nécessaire tant la structure du vin n’accepte pas de lourdeur supplémentaire. Je dois être particulièrement vigilant à l’ajout de So2 sur moûts en vendange. Ce Champagne nécessite une minéralisation de sa matière, mais n’accepte pas l’oxydation. Un ajout juste de So2 durant le pressurage permet une stabilité du vin tout en s’épanouissant à l’air sans ouillages réguliers pour arriver à son équilibre.</p>"}],"fichetechnique":"/assets/pdf/fr/Orizeaux.pdf"}}')
    },
    a7b1: function(e, t, i) {
        e.exports = i.p + "img/preview.a1b08993.jpg"
    },
    a851: function(e, t, i) {
        "use strict";
        var a = i("8990")
          , s = i.n(a);
        s.a
    },
    ac73: function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-SD-AQUA vers FM.f0d906b7.mp3"
    },
    ae6d: function(e, t, i) {
        e.exports = i.p + "img/title.c89b272b.png"
    },
    afb6: function(e) {
        e.exports = JSON.parse('{"slug":"les-brets","name":"LES BRETS","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / 金色に輝くオレンジ、黄色味を帯びた茶色</p><p>保水性 / 斜面が水分の過剰な摂取を防ぐ。他の村の区画に比べて水捌けは良くない。<br/>ヤプレシアン期の砂質、砂質30％、粘土30％、泥土40％のバランスの取れた土壌の上にある粘土質の砂</p><p>畑の向き / 東、又は北東向き粘土の/p><p>粘土のタイプ / バーミキュライト含有量350 gr (m2/gr)</p>","description":"<p>この区画のブドウの樹は 様々な層の土壌に根が垂直方向に張り、十分な水分が得られます。</p><p>メルフィの村でも一風変わった土壌です。東を向く斜面は 村の南向きの斜面と違い、その土壌に適した畑仕事を強いられます。隣接する他の区画では 土壌の有機の養分が時には過剰なまでにミネラル化していくのに対し、レ・ブレの区画では 常に一定のサイクルで行われます。これは驚くべき現象です。<br/>畑に生える草は早すぎもせず、かといって遅すぎもせず成長し、特に気をもむ必要もなく仕事を行うことが出来ます。<br/>ただ耕作をする時は 注意が必要です。一度土壌が乾いてしまうと 除草用の引き鍬や鍬などの耕作用機械が使えなってしまします。この区画の土壌は隣接の他の区画に比べていち早く土壌が固まってしまうのです。ここでは 土壌の コンディションが許す限り、機械に代わり馬が全ての作業を行います。そして無理矢理耕作機械を畑に入れて 自然のサイクルを乱してしまわないように気を付けます。人や動物が行う仕事では そこまで強制することは出来ないのですから。</p><p>この区画の斜面もまた油断なりません。この区画を構成している粘土に似た地表を持つ緩やかな斜面では 車輪を持つ道具類は非常に使いづらくなります。雨が多くなると たちまち地面は滑りやすくなり、作業が困難になるのです。</p>","details":"<p>畑総面積 / 97a23ca</p><p>現耕作面積 / 97a23ca</p><p>栽培品種 / シャルドネ53% 、ピノ・ノワール 27%、ムニエ 23%</p><p>植樹された年 / 1971年、1997年</p><p>畑の向き / 東、又は北東向き</p><p>粘土のタイプ / バーミキュライト / 350 gr (m2/gr)</p>","image":"/assets/images/raisins/raisin-blanc01.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"砂質、粘土質、泥土","caption":""},{"name":"カンパニア期のチョーク層","caption":"90センチの深さ"}]}]},"wine":{"name":"Les Brets","specifications":"<p>ブレンド / Saint-Anne</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"レ・ブレのワインは 舌の周りから唾液がにじみ出し、まとわりつくような密度の濃さが特徴ですが、熟成を経るとクリーミーな味わいに変貌していきます。"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>レ・ブレのワインは ワインの持つ様々な酸味を保ち、またその味わいを引き締めるため、長い間ステンレスタンクを使って熟成を行ってきました。2016年からは 隣接する区画と同じようにオークの樽を使って熟成を行っています。レ・ブレのおおらかさは228ℓの新樽、もしくはそれより大きい樽のタンニンを許容することができます。それでも入念な作業は必要です。各々の区画は 酸味の上に味わいのバランスが取れているので、その感覚の印象がそれてしまうと たちまち調和が崩れてしまいます。ウイヤージュを定期的に行い、ゆっくりと しかし漸進的にミネラル化を施していきます。</p>"},{"type":"block-image","url":"/assets/images/cuve/les-brets.jpg"}],"fichetechnique":"/assets/pdf/en/Les Brets ENG.pdf"}}')
    },
    b01f: function(e, t, i) {
        e.exports = i.p + "img/cursorNorth.f2395713.png"
    },
    b2ce: function(e) {
        e.exports = JSON.parse('{"scroll":"découvrir","map":"carte","explore":"explorer","villages":{"avize":[["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"],["Cette parcelle entre dans","la composition de la cuvée","côte des blancs"]],"merfy":[[],[],[],[],[],["Cette parcelle entre dans","la composition de la cuvée","Sainte Anne","-","Surface Totale / 18A72CA","Encépagement / 100% Pinot Noir","Année de plantation / 1989"],[],["Cette parcelle entre dans","la composition de la cuvée","Sainte Anne","-","Surface Totale / 33A75CA","Année de plantation / 1972 - 1991"],[],["Cette parcelle entre dans","la composition de la cuvée","Sainte Anne","-","Surface Totale / 19A4CA","Encépagement / 100% Meunier","Année de plantation / 1970 - 1992"],["Cette parcelle entre dans","la composition de la cuvée","Sainte Anne","-","Surface Totale / 43A30CA","Encépagement / 100% Meunier","Année de plantation / 1980 - 1984"],["Cette parcelle entre dans","la composition de la cuvée","Sainte Anne","-","Surface Totale / 60A60CA","Encépagement / 100% Meunier","Année de plantation / 1969"],[],[]]}}')
    },
    b35e: function(e, t, i) {
        "use strict";
        i.d(t, "a", (function() {
            return ct
        }
        ));
        i("99af"),
        i("4160"),
        i("c975"),
        i("d81d"),
        i("fb6a"),
        i("a434"),
        i("ac1f"),
        i("5319"),
        i("1276"),
        i("159b");
        var a, s, n, r, o, l, u, h, c, d, m, p, g, v, f, b, x, y, w, T, S, k, P, C, z, R = i("53ca"), F = 1, A = [], L = [], E = Date.now, M = E(), O = 0, B = 1, I = function(e) {
            return e
        }, q = function() {
            return "undefined" !== typeof window
        }, D = function() {
            return a || q() && (a = window.gsap) && a.registerPlugin && a
        }, V = function(e) {
            return !!~u.indexOf(e)
        }, N = function(e, t) {
            return ~A.indexOf(e) && A[A.indexOf(e) + 1][t]
        }, H = function(e, t) {
            var i = t.s
              , a = t.sc
              , s = L.indexOf(e)
              , n = a === be.sc ? 1 : 2;
            return !~s && (s = L.push(e) - 1),
            L[s + n] || (L[s + n] = N(e, i) || (V(e) ? a : function(t) {
                return arguments.length ? e[i] = t : e[i]
            }
            ))
        }, _ = function(e) {
            return N(e, "getBoundingClientRect") || (V(e) ? function() {
                return rt.width = n.innerWidth,
                rt.height = n.innerHeight,
                rt
            }
            : function() {
                return Te(e)
            }
            )
        }, j = function(e, t, i) {
            var a = i.d
              , s = i.d2
              , r = i.a;
            return (r = N(e, "getBoundingClientRect")) ? function() {
                return r()[a]
            }
            : function() {
                return (t ? n["inner" + s] : e["client" + s]) || 0
            }
        }, U = function(e, t) {
            return !t || ~A.indexOf(e) ? _(e) : function() {
                return rt
            }
        }, W = function(e, t) {
            var i = t.s
              , a = t.d2
              , s = t.d
              , r = t.a;
            return (i = "scroll" + a) && (r = N(e, i)) ? r() - _(e)()[s] : V(e) ? Math.max(o[i], l[i]) - (n["inner" + a] || o["client" + a] || l["client" + a]) : e[i] - e["offset" + a]
        }, G = function(e, t) {
            for (var i = 0; i < S.length; i += 3)
                (!t || ~t.indexOf(S[i + 1])) && e(S[i], S[i + 1], S[i + 2])
        }, Y = function(e) {
            return "string" === typeof e
        }, $ = function(e) {
            return "function" === typeof e
        }, X = function(e) {
            return "number" === typeof e
        }, J = function(e) {
            return "object" === Object(R["a"])(e)
        }, Q = function(e) {
            return $(e) && e()
        }, K = function(e, t) {
            return function() {
                var i = Q(e)
                  , a = Q(t);
                return function() {
                    Q(i),
                    Q(a)
                }
            }
        }, Z = Math.abs, ee = "scrollLeft", te = "scrollTop", ie = "left", ae = "top", se = "right", ne = "bottom", re = "width", oe = "height", le = "Right", ue = "Left", he = "Top", ce = "Bottom", de = "padding", me = "margin", pe = "Width", ge = "Height", ve = "px", fe = {
            s: ee,
            p: ie,
            p2: ue,
            os: se,
            os2: le,
            d: re,
            d2: pe,
            a: "x",
            sc: function(e) {
                return arguments.length ? n.scrollTo(e, be.sc()) : n.pageXOffset || r[ee] || o[ee] || l[ee] || 0
            }
        }, be = {
            s: te,
            p: ae,
            p2: he,
            os: ne,
            os2: ce,
            d: oe,
            d2: ge,
            a: "y",
            op: fe,
            sc: function(e) {
                return arguments.length ? n.scrollTo(fe.sc(), e) : n.pageYOffset || r[te] || o[te] || l[te] || 0
            }
        }, xe = function(e) {
            return n.getComputedStyle(e)
        }, ye = function(e) {
            return e.style.position = "absolute" === xe(e).position ? "absolute" : "relative"
        }, we = function(e, t) {
            for (var i in t)
                i in e || (e[i] = t[i]);
            return e
        }, Te = function(e, t) {
            var i = t && "matrix(1, 0, 0, 1, 0, 0)" !== xe(e)[x] && a.to(e, {
                x: 0,
                y: 0,
                xPercent: 0,
                yPercent: 0,
                rotation: 0,
                rotationX: 0,
                rotationY: 0,
                scale: 1,
                skewX: 0,
                skewY: 0
            }).progress(1)
              , s = e.getBoundingClientRect();
            return i && i.progress(0).kill(),
            s
        }, Se = function(e, t) {
            var i = t.d2;
            return e["offset" + i] || e["client" + i] || 0
        }, ke = function(e) {
            return function(t) {
                var i, s = [], n = e.labels, r = e.duration();
                for (i in n)
                    s.push(n[i] / r);
                return a.utils.snap(s, t)
            }
        }, Pe = function(e, t, i, a) {
            return i.split(",").forEach((function(i) {
                return e(t, i, a)
            }
            ))
        }, Ce = function(e, t, i) {
            return e.addEventListener(t, i, {
                passive: !0
            })
        }, ze = function(e, t, i) {
            return e.removeEventListener(t, i)
        }, Re = {
            startColor: "green",
            endColor: "red",
            indent: 0,
            fontSize: "16px",
            fontWeight: "normal"
        }, Fe = {
            toggleActions: "play",
            anticipatePin: 0
        }, Ae = {
            top: 0,
            left: 0,
            center: .5,
            bottom: 1,
            right: 1
        }, Le = function(e, t) {
            if (Y(e)) {
                var i = e.indexOf("=")
                  , a = ~i ? +(e.charAt(i - 1) + 1) * parseFloat(e.substr(i + 1)) : 0;
                a && (e.indexOf("%") > i && (a *= t / 100),
                e = e.substr(0, i - 1)),
                e = a + (e in Ae ? Ae[e] * t : ~e.indexOf("%") ? parseFloat(e) * t / 100 : parseFloat(e) || 0)
            }
            return e
        }, Ee = function(e, t, i, a, s, n, o) {
            var u = s.startColor
              , h = s.endColor
              , c = s.fontSize
              , d = s.indent
              , m = s.fontWeight
              , p = r.createElement("div")
              , g = V(i) || "fixed" === N(i, "pinType")
              , v = -1 !== e.indexOf("scroller")
              , f = g ? l : i
              , b = -1 !== e.indexOf("start")
              , x = b ? u : h
              , y = "border-color:" + x + ";font-size:" + c + ";color:" + x + ";font-weight:" + m + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";
            return y += "position:" + (v && g ? "fixed;" : "absolute;"),
            (v || !g) && (y += (a === be ? se : ne) + ":" + (n + parseFloat(d)) + "px;"),
            o && (y += "box-sizing:border-box;text-align:left;width:" + o.offsetWidth + "px;"),
            p._isStart = b,
            p.setAttribute("class", "gsap-marker-" + e),
            p.style.cssText = y,
            p.innerText = t || 0 === t ? e + "-" + t : e,
            f.insertBefore(p, f.children[0]),
            p._offset = p["offset" + a.op.d2],
            Me(p, 0, a, b),
            p
        }, Me = function(e, t, i, s) {
            var n = {
                display: "block"
            }
              , r = i[s ? "os2" : "p2"]
              , o = i[s ? "p2" : "os2"];
            e._isFlipped = s,
            n[i.a + "Percent"] = s ? -100 : 0,
            n[i.a] = s ? 1 : 0,
            n["border" + r + pe] = 1,
            n["border" + o + pe] = 0,
            n[i.p] = t,
            a.set(e, n)
        }, Oe = [], Be = {}, Ie = function() {
            return d || (d = c(Qe))
        }, qe = function() {
            d || (d = c(Qe),
            O || Ue("scrollStart"),
            O = E())
        }, De = function() {
            return !f && h.restart(!0)
        }, Ve = {}, Ne = [], He = [], _e = function(e) {
            var t, i = a.ticker.frame, s = [], r = 0;
            if (z !== i || F) {
                for (Ye(); r < He.length; r += 4)
                    t = n.matchMedia(He[r]).matches,
                    t !== He[r + 3] && (He[r + 3] = t,
                    t ? s.push(r) : Ye(1, He[r]) || $(He[r + 2]) && He[r + 2]());
                for (Ge(),
                r = 0; r < s.length; r++)
                    t = s[r],
                    C = He[t],
                    He[t + 2] = He[t + 1](e);
                C = 0,
                $e(0, 1),
                z = i,
                Ue("matchMedia")
            }
        }, je = function e() {
            return ze(ct, "scrollEnd", e) || $e(!0)
        }, Ue = function(e) {
            return Ve[e] && Ve[e].map((function(e) {
                return e()
            }
            )) || Ne
        }, We = [], Ge = function(e) {
            for (var t = 0; t < We.length; t += 4)
                e && We[t + 3] !== e || (We[t].style.cssText = We[t + 1],
                We[t + 2].uncache = 1)
        }, Ye = function(e, t) {
            var i;
            for (y = 0; y < Oe.length; y++)
                i = Oe[y],
                t && i.media !== t || (e ? i.kill(1) : (i.scroll.rec || (i.scroll.rec = i.scroll()),
                i.revert()));
            Ge(t),
            t || Ue("revert")
        }, $e = function(e, t) {
            if (!O || e) {
                var i = Ue("refreshInit");
                for (k && ct.sort(),
                t || Ye(),
                y = 0; y < Oe.length; y++)
                    Oe[y].refresh();
                i.forEach((function(e) {
                    return e && e.render && e.render(-1)
                }
                )),
                y = Oe.length;
                while (y--)
                    Oe[y].scroll.rec = 0;
                h.pause(),
                Ue("refresh")
            } else
                Ce(ct, "scrollEnd", je)
        }, Xe = 0, Je = 1, Qe = function() {
            var e = Oe.length
              , t = E()
              , i = t - M >= 50
              , a = e && Oe[0].scroll();
            if (Je = Xe > a ? -1 : 1,
            Xe = a,
            i && (O && !b && t - O > 200 && (O = 0,
            Ue("scrollEnd")),
            g = M,
            M = t),
            Je < 0) {
                y = e;
                while (y--)
                    Oe[y] && Oe[y].update(0, i);
                Je = 1
            } else
                for (y = 0; y < e; y++)
                    Oe[y] && Oe[y].update(0, i);
            d = 0
        }, Ke = [ie, ae, ne, se, me + ce, me + le, me + he, me + ue, "display", "flexShrink", "float"], Ze = Ke.concat([re, oe, "boxSizing", "max" + pe, "max" + ge, "position", me, de, de + he, de + le, de + ce, de + ue]), et = function(e, t, i) {
            if (at(i),
            e.parentNode === t) {
                var a = t.parentNode;
                a && (a.insertBefore(e, t),
                a.removeChild(t))
            }
        }, tt = function(e, t, i, a) {
            if (e.parentNode !== t) {
                var s, n = Ke.length, r = t.style, o = e.style;
                while (n--)
                    s = Ke[n],
                    r[s] = i[s];
                r.position = "absolute" === i.position ? "absolute" : "relative",
                "inline" === i.display && (r.display = "inline-block"),
                o[ne] = o[se] = "auto",
                r.overflow = "visible",
                r.boxSizing = "border-box",
                r[re] = Se(e, fe) + ve,
                r[oe] = Se(e, be) + ve,
                r[de] = o[me] = o[ae] = o[ie] = "0",
                at(a),
                o[re] = o["max" + pe] = i[re],
                o[oe] = o["max" + ge] = i[oe],
                o[de] = i[de],
                e.parentNode.insertBefore(t, e),
                t.appendChild(e)
            }
        }, it = /([A-Z])/g, at = function(e) {
            if (e)
                for (var t, i, a = e.t.style, s = e.length, n = 0; n < s; n += 2)
                    i = e[n + 1],
                    t = e[n],
                    i ? a[t] = i : a[t] && a.removeProperty(t.replace(it, "-$1").toLowerCase())
        }, st = function(e) {
            for (var t = Ze.length, i = e.style, a = [], s = 0; s < t; s++)
                a.push(Ze[s], i[Ze[s]]);
            return a.t = e,
            a
        }, nt = function(e, t, i) {
            for (var a, s = [], n = e.length, r = i ? 8 : 0; r < n; r += 2)
                a = e[r],
                s.push(a, a in t ? t[a] : e[r + 1]);
            return s.t = e.t,
            s
        }, rt = {
            left: 0,
            top: 0
        }, ot = function(e, t, i, a, s, n, r, u, h, c, d, p) {
            if ($(e) && (e = e(u)),
            Y(e) && "max" === e.substr(0, 3) && (e = p + ("=" === e.charAt(4) ? Le("0" + e.substr(3), i) : 0)),
            X(e))
                r && Me(r, i, a, !0);
            else {
                $(t) && (t = t(u));
                var g, v, f, b = m(t)[0] || l, x = Te(b) || {}, y = e.split(" ");
                x && (x.left || x.top) || "none" !== xe(b).display || (f = b.style.display,
                b.style.display = "block",
                x = Te(b),
                f ? b.style.display = f : b.style.removeProperty("display")),
                g = Le(y[0], x[a.d]),
                v = Le(y[1] || "0", i),
                e = x[a.p] - h[a.p] - c + g + s - v,
                r && Me(r, v, a, i - v < 20 || r._isStart && v > 20),
                i -= i - v
            }
            if (n) {
                var w = e + i
                  , T = n._isStart;
                p = "scroll" + a.d2,
                Me(n, w, a, T && w > 20 || !T && (d ? Math.max(l[p], o[p]) : n.parentNode[p]) <= w + 1),
                d && (h = Te(r),
                d && (n.style[a.op.p] = h[a.op.p] - a.op.m - n._offset + ve))
            }
            return Math.round(e)
        }, lt = /(?:webkit|moz|length|cssText)/i, ut = function(e, t, i, s) {
            if (e.parentNode !== t) {
                var n, r, o = e.style;
                if (t === l) {
                    for (n in e._stOrig = o.cssText,
                    r = xe(e),
                    r)
                        +n || lt.test(n) || !r[n] || "string" !== typeof o[n] || "0" === n || (o[n] = r[n]);
                    o.top = i,
                    o.left = s
                } else
                    o.cssText = e._stOrig;
                a.core.getCache(e).uncache = 1,
                t.appendChild(e)
            }
        }, ht = function(e, t) {
            var i, s, n = H(e, t), r = "_scroll" + t.p2, o = function t(o, l, u, h, c) {
                var d = t.tween
                  , m = l.onComplete
                  , p = {};
                return d && d.kill(),
                i = Math.round(u),
                l[r] = o,
                l.modifiers = p,
                p[r] = function(e) {
                    return e = Math.round(n()),
                    e !== i && e !== s ? (d.kill(),
                    t.tween = 0) : e = u + h * d.ratio + c * d.ratio * d.ratio,
                    s = i,
                    i = Math.round(e)
                }
                ,
                l.onComplete = function() {
                    t.tween = 0,
                    m && m.call(d)
                }
                ,
                d = t.tween = a.to(e, l),
                d
            };
            return e[r] = n,
            o
        };
        fe.op = be;
        var ct = function() {
            function e(t, i) {
                s || e.register(a) || console.warn("Please gsap.registerPlugin(ScrollTrigger)"),
                this.init(t, i)
            }
            var t = e.prototype;
            return t.init = function(t, i) {
                if (this.progress = 0,
                this.vars && this.kill(1),
                B) {
                    t = we(Y(t) || X(t) || t.nodeType ? {
                        trigger: t
                    } : t, Fe);
                    var s, u, h, c, d, v, x, w, T, S, z, R, A, L, M, q, D, _, G, Q, K, ee, te, ie, ae, se, ne, Pe, Ae, Me, Ie, Ve, Ne, He, _e, Ue, We, Ge = t.horizontal ? fe : be, Ye = t, $e = Ye.onUpdate, Xe = Ye.toggleClass, Qe = Ye.id, Ke = Ye.onToggle, Ze = Ye.onRefresh, it = Ye.scrub, rt = Ye.trigger, lt = Ye.pin, ct = Ye.pinSpacing, dt = Ye.invalidateOnRefresh, mt = Ye.anticipatePin, pt = Ye.onScrubComplete, gt = Ye.onSnapComplete, vt = Ye.once, ft = Ye.snap, bt = Ye.pinReparent, xt = !it && 0 !== it, yt = m(t.scroller || n)[0], wt = a.core.getCache(yt), Tt = V(yt), St = "pinType"in t ? "fixed" === t.pinType : Tt || "fixed" === N(yt, "pinType"), kt = [t.onEnter, t.onLeave, t.onEnterBack, t.onLeaveBack], Pt = xt && t.toggleActions.split(" "), Ct = "markers"in t ? t.markers : Fe.markers, zt = Tt ? 0 : parseFloat(xe(yt)["border" + Ge.p2 + pe]) || 0, Rt = this, Ft = t.onRefreshInit && function() {
                        return t.onRefreshInit(Rt)
                    }
                    , At = j(yt, Tt, Ge), Lt = U(yt, Tt);
                    Rt.media = C,
                    mt *= 45,
                    Oe.push(Rt),
                    Rt.scroller = yt,
                    Rt.scroll = H(yt, Ge),
                    d = Rt.scroll(),
                    Rt.vars = t,
                    i = i || t.animation,
                    "refreshPriority"in t && (k = 1),
                    wt.tweenScroll = wt.tweenScroll || {
                        top: ht(yt, be),
                        left: ht(yt, fe)
                    },
                    Rt.tweenTo = s = wt.tweenScroll[Ge.p],
                    i && (i.vars.lazy = !1,
                    i._initted || !1 !== i.vars.immediateRender && !1 !== t.immediateRender && i.render(0, !0, !0),
                    Rt.animation = i.pause(),
                    i.scrollTrigger = Rt,
                    Ve = X(it) && it,
                    Ve && (Ie = a.to(i, {
                        ease: "power3",
                        duration: Ve,
                        onComplete: function() {
                            return pt && pt(Rt)
                        }
                    })),
                    Ae = 0,
                    Qe || (Qe = i.vars.id)),
                    ft && (J(ft) || (ft = {
                        snapTo: ft
                    }),
                    a.set(Tt ? [l, o] : yt, {
                        scrollBehavior: "auto"
                    }),
                    h = $(ft.snapTo) ? ft.snapTo : "labels" === ft.snapTo ? ke(i) : a.utils.snap(ft.snapTo),
                    Ne = ft.duration || {
                        min: .1,
                        max: 2
                    },
                    Ne = J(Ne) ? p(Ne.min, Ne.max) : p(Ne, Ne),
                    He = a.delayedCall(ft.delay || Ve / 2 || .1, (function() {
                        if (Math.abs(Rt.getVelocity()) < 10 && !b) {
                            var e = i && !xt ? i.totalProgress() : Rt.progress
                              , t = (e - Me) / (E() - g) * 1e3 || 0
                              , a = Z(t / 2) * t / .185
                              , n = e + a
                              , r = p(0, 1, h(n, Rt))
                              , o = Rt.scroll()
                              , l = Math.round(x + r * L)
                              , u = s.tween;
                            if (o <= w && o >= x && l !== o) {
                                if (u && !u._initted && u.data <= Math.abs(l - o))
                                    return;
                                s(l, {
                                    duration: Ne(Z(.185 * Math.max(Z(n - e), Z(r - e)) / t / .05 || 0)),
                                    ease: ft.ease || "power3",
                                    data: Math.abs(l - o),
                                    onComplete: function() {
                                        Ae = Me = i && !xt ? i.totalProgress() : Rt.progress,
                                        gt && gt(Rt)
                                    }
                                }, o, a * L, l - o - a * L)
                            }
                        } else
                            Rt.isActive && He.restart(!0)
                    }
                    )).pause()),
                    Qe && (Be[Qe] = Rt),
                    rt = Rt.trigger = m(rt || lt)[0],
                    lt = !0 === lt ? rt : m(lt)[0],
                    Y(Xe) && (Xe = {
                        targets: rt,
                        className: Xe
                    }),
                    lt && (!1 === ct || ct === me || (ct = !(!ct && "flex" === xe(lt.parentNode).display) && de),
                    Rt.pin = lt,
                    !1 !== t.force3D && a.set(lt, {
                        force3D: !0
                    }),
                    u = a.core.getCache(lt),
                    u.spacer ? M = u.pinState : (u.spacer = _ = r.createElement("div"),
                    _.setAttribute("class", "pin-spacer" + (Qe ? " pin-spacer-" + Qe : "")),
                    u.pinState = M = st(lt)),
                    Rt.spacer = _ = u.spacer,
                    Pe = xe(lt),
                    ie = Pe[ct + Ge.os2],
                    Q = a.getProperty(lt),
                    K = a.quickSetter(lt, Ge.a, ve),
                    tt(lt, _, Pe),
                    D = st(lt)),
                    Ct && (A = J(Ct) ? we(Ct, Re) : Re,
                    z = Ee("scroller-start", Qe, yt, Ge, A, 0),
                    R = Ee("scroller-end", Qe, yt, Ge, A, 0, z),
                    G = z["offset" + Ge.op.d2],
                    T = Ee("start", Qe, yt, Ge, A, G),
                    S = Ee("end", Qe, yt, Ge, A, G),
                    St || (ye(yt),
                    a.set([z, R], {
                        force3D: !0
                    }),
                    se = a.quickSetter(z, Ge.a, ve),
                    ne = a.quickSetter(R, Ge.a, ve))),
                    Rt.revert = function(e) {
                        var t = !1 !== e || !Rt.enabled
                          , a = f;
                        t !== c && (t && (Ue = Math.max(Rt.scroll(), Rt.scroll.rec || 0),
                        _e = Rt.progress,
                        We = i && i.progress()),
                        T && [T, S, z, R].forEach((function(e) {
                            return e.style.display = t ? "none" : "block"
                        }
                        )),
                        t && (f = 1),
                        Rt.update(t),
                        f = a,
                        lt && (t ? et(lt, _, M) : (!bt || !Rt.isActive) && tt(lt, _, xe(lt), ae)),
                        c = t)
                    }
                    ,
                    Rt.refresh = function(s) {
                        if (!f && Rt.enabled)
                            if (lt && s && O)
                                Ce(e, "scrollEnd", je);
                            else {
                                f = 1,
                                Ie && Ie.kill(),
                                dt && i && i.progress(0).invalidate(),
                                c || Rt.revert();
                                var n, r, o, u, h, m, p, g, b = At(), y = Lt(), k = W(yt, Ge), P = 0, C = 0, F = t.end, A = t.endTrigger || rt, E = t.start || (0 === t.start ? 0 : lt || !rt ? "0 0" : "0 100%"), B = rt && Math.max(0, Oe.indexOf(Rt)) || 0, I = B;
                                while (I--)
                                    p = Oe[I].pin,
                                    p && (p === rt || p === lt) && Oe[I].revert();
                                x = ot(E, rt, b, Ge, Rt.scroll(), T, z, Rt, y, zt, St, k) || (lt ? -.001 : 0),
                                $(F) && (F = F(Rt)),
                                Y(F) && !F.indexOf("+=") && (~F.indexOf(" ") ? F = (Y(E) ? E.split(" ")[0] : "") + F : (P = Le(F.substr(2), b),
                                F = Y(E) ? E : x + P,
                                A = rt)),
                                w = Math.max(x, ot(F || (A ? "100% 0" : k), A, b, Ge, Rt.scroll() + P, S, R, Rt, y, zt, St, k)) || -.001,
                                L = w - x || (x -= .01) && .001,
                                P = 0,
                                I = B;
                                while (I--)
                                    m = Oe[I],
                                    p = m.pin,
                                    p && m.start - m._pinPush < x && (n = m.end - m.start,
                                    p === rt && (P += n),
                                    p === lt && (C += n));
                                if (x += P,
                                w += P,
                                Rt._pinPush = C,
                                T && P && (n = {},
                                n[Ge.a] = "+=" + P,
                                a.set([T, S], n)),
                                lt)
                                    n = xe(lt),
                                    u = Ge === be,
                                    o = Rt.scroll(),
                                    ee = parseFloat(Q(Ge.a)) + C,
                                    !k && w > 1 && ((Tt ? l : yt).style["overflow-" + Ge.a] = "scroll"),
                                    tt(lt, _, n),
                                    D = st(lt),
                                    r = Te(lt, !0),
                                    g = St && H(yt, u ? fe : be)(),
                                    ct && (ae = [ct + Ge.os2, L + C + ve],
                                    ae.t = _,
                                    I = ct === de ? Se(lt, Ge) + L + C : 0,
                                    I && ae.push(Ge.d, I + ve),
                                    at(ae),
                                    St && Rt.scroll(Ue)),
                                    St && (h = {
                                        top: r.top + (u ? o - x : g) + ve,
                                        left: r.left + (u ? g : o - x) + ve,
                                        boxSizing: "border-box",
                                        position: "fixed"
                                    },
                                    h[re] = h["max" + pe] = Math.ceil(r.width) + ve,
                                    h[oe] = h["max" + ge] = Math.ceil(r.height) + ve,
                                    h[me] = h[me + he] = h[me + le] = h[me + ce] = h[me + ue] = "0",
                                    h[de] = n[de],
                                    h[de + he] = n[de + he],
                                    h[de + le] = n[de + le],
                                    h[de + ce] = n[de + ce],
                                    h[de + ue] = n[de + ue],
                                    q = nt(M, h, bt)),
                                    i ? (i.progress(1, !0),
                                    te = Q(Ge.a) - ee + L + C,
                                    L !== te && q.splice(q.length - 2, 2),
                                    i.progress(0, !0)) : te = L;
                                else if (rt && Rt.scroll()) {
                                    r = rt.parentNode;
                                    while (r && r !== l)
                                        r._pinOffset && (x -= r._pinOffset,
                                        w -= r._pinOffset),
                                        r = r.parentNode
                                }
                                for (I = 0; I < B; I++)
                                    m = Oe[I].pin,
                                    m && (m === rt || m === lt) && Oe[I].revert(!1);
                                Rt.start = x,
                                Rt.end = w,
                                d = v = Rt.scroll(),
                                d < Ue && Rt.scroll(Ue),
                                Rt.revert(!1),
                                f = 0,
                                We && xt && i.progress(We, !0),
                                _e !== Rt.progress && (Ie && i.totalProgress(_e, !0),
                                Rt.progress = _e,
                                Rt.update()),
                                lt && ct && (_._pinOffset = Math.round(Rt.progress * te)),
                                Ze && Ze(Rt)
                            }
                    }
                    ,
                    Rt.getVelocity = function() {
                        return (Rt.scroll() - v) / (E() - g) * 1e3 || 0
                    }
                    ,
                    Rt.update = function(e, t) {
                        var a, n, r, o, u, h, c = Rt.scroll(), p = e ? 0 : (c - x) / L, b = p < 0 ? 0 : p > 1 ? 1 : p || 0, y = Rt.progress;
                        if (t && (v = d,
                        d = c,
                        ft && (Me = Ae,
                        Ae = i && !xt ? i.totalProgress() : b)),
                        mt && !b && lt && !f && !F && O && x < c + (c - v) / (E() - g) * mt && (b = 1e-4),
                        b !== y && Rt.enabled) {
                            if (a = Rt.isActive = !!b && b < 1,
                            n = !!y && y < 1,
                            h = a !== n,
                            u = h || !!b !== !!y,
                            Rt.direction = b > y ? 1 : -1,
                            Rt.progress = b,
                            xt || (!Ie || f || F ? i && i.totalProgress(b, !!f) : (Ie.vars.totalProgress = b,
                            Ie.invalidate().restart())),
                            lt)
                                if (e && ct && (_.style[ct + Ge.os2] = ie),
                                St) {
                                    if (u) {
                                        if (o = !e && b > y && w + 1 > c && c + 1 >= W(yt, Ge),
                                        bt)
                                            if (e || !a && !o)
                                                ut(lt, _);
                                            else {
                                                var T = Te(lt, !0)
                                                  , S = c - x;
                                                ut(lt, l, T.top + (Ge === be ? S : 0) + ve, T.left + (Ge === be ? 0 : S) + ve)
                                            }
                                        at(a || o ? q : D),
                                        te !== L && b < 1 && a || K(ee + (1 !== b || o ? 0 : te))
                                    }
                                } else
                                    K(ee + te * b);
                            ft && !s.tween && !f && !F && He.restart(!0),
                            Xe && (h || vt && b && (b < 1 || !P)) && m(Xe.targets).forEach((function(e) {
                                return e.classList[a || vt ? "add" : "remove"](Xe.className)
                            }
                            )),
                            $e && !xt && !e && $e(Rt),
                            u && !f ? (r = b && !y ? 0 : 1 === b ? 1 : 1 === y ? 2 : 3,
                            xt && (o = !h && "none" !== Pt[r + 1] && Pt[r + 1] || Pt[r],
                            i && ("complete" === o || "reset" === o || o in i) && ("complete" === o ? i.pause().totalProgress(1) : "reset" === o ? i.restart(!0).pause() : i[o]()),
                            $e && $e(Rt)),
                            !h && P || (Ke && h && Ke(Rt),
                            kt[r] && kt[r](Rt),
                            vt && (1 === b ? Rt.kill(!1, 1) : kt[r] = 0),
                            h || (r = 1 === b ? 1 : 3,
                            kt[r] && kt[r](Rt)))) : xt && $e && !f && $e(Rt)
                        }
                        ne && (se(c + (z._isFlipped ? 1 : 0)),
                        ne(c))
                    }
                    ,
                    Rt.enable = function() {
                        Rt.enabled || (Rt.enabled = !0,
                        Ce(yt, "resize", De),
                        Ce(yt, "scroll", qe),
                        Ft && Ce(e, "refreshInit", Ft),
                        i && i.add ? a.delayedCall(.01, (function() {
                            return x || w || Rt.refresh()
                        }
                        )) && (L = .01) && (x = w = 0) : Rt.refresh())
                    }
                    ,
                    Rt.disable = function(t, i) {
                        if (Rt.enabled && (!1 !== t && Rt.revert(),
                        Rt.enabled = Rt.isActive = !1,
                        i || Ie && Ie.pause(),
                        Ue = 0,
                        u && (u.uncache = 1),
                        Ft && ze(e, "refreshInit", Ft),
                        He && (He.pause(),
                        s.tween && s.tween.kill() && (s.tween = 0)),
                        !Tt)) {
                            var a = Oe.length;
                            while (a--)
                                if (Oe[a].scroller === yt && Oe[a] !== Rt)
                                    return;
                            ze(yt, "resize", De),
                            ze(yt, "scroll", qe)
                        }
                    }
                    ,
                    Rt.kill = function(e, t) {
                        Rt.disable(e, t),
                        Qe && delete Be[Qe];
                        var a = Oe.indexOf(Rt);
                        Oe.splice(a, 1),
                        a === y && Je > 0 && y--,
                        i && (i.scrollTrigger = null,
                        e && i.render(-1),
                        t || i.kill()),
                        T && [T, S, z, R].forEach((function(e) {
                            return e.parentNode.removeChild(e)
                        }
                        )),
                        u && (u.uncache = 1)
                    }
                    ,
                    Rt.enable()
                } else
                    this.update = this.refresh = this.kill = I
            }
            ,
            e.register = function(t) {
                if (!s && (a = t || D(),
                q() && window.document && (n = window,
                r = document,
                o = r.documentElement,
                l = r.body),
                a && (m = a.utils.toArray,
                p = a.utils.clamp,
                a.core.globals("ScrollTrigger", e),
                l))) {
                    c = n.requestAnimationFrame || function(e) {
                        return setTimeout(e, 16)
                    }
                    ,
                    Ce(n, "mousewheel", qe),
                    u = [n, r, o, l],
                    Ce(r, "scroll", qe);
                    var i, d = l.style, g = d.borderTop;
                    d.borderTop = "1px solid #000",
                    i = Te(l),
                    be.m = Math.round(i.top + be.sc()) || 0,
                    fe.m = Math.round(i.left + fe.sc()) || 0,
                    g ? d.borderTop = g : d.removeProperty("border-top"),
                    v = setInterval(Ie, 200),
                    a.delayedCall(.5, (function() {
                        return F = 0
                    }
                    )),
                    Ce(r, "touchcancel", I),
                    Ce(l, "touchstart", I),
                    Pe(Ce, r, "pointerdown,touchstart,mousedown", (function() {
                        return b = 1
                    }
                    )),
                    Pe(Ce, r, "pointerup,touchend,mouseup", (function() {
                        return b = 0
                    }
                    )),
                    x = a.utils.checkPrefix("transform"),
                    Ze.push(x),
                    s = E(),
                    h = a.delayedCall(.2, $e).pause(),
                    S = [r, "visibilitychange", function() {
                        var e = n.innerWidth
                          , t = n.innerHeight;
                        r.hidden ? (w = e,
                        T = t) : w === e && T === t || De()
                    }
                    , r, "DOMContentLoaded", $e, n, "load", function() {
                        return O || $e()
                    }
                    , n, "resize", De],
                    G(Ce)
                }
                return s
            }
            ,
            e.defaults = function(e) {
                for (var t in e)
                    Fe[t] = e[t]
            }
            ,
            e.kill = function() {
                B = 0,
                Oe.slice(0).forEach((function(e) {
                    return e.kill(1)
                }
                ))
            }
            ,
            e.config = function(e) {
                "limitCallbacks"in e && (P = !!e.limitCallbacks);
                var t = e.syncInterval;
                t && clearInterval(v) || (v = t) && setInterval(Ie, t),
                "autoRefreshEvents"in e && (G(ze) || G(Ce, e.autoRefreshEvents || "none"))
            }
            ,
            e.scrollerProxy = function(e, t) {
                var i = m(e)[0];
                V(i) ? A.unshift(n, t, l, t, o, t) : A.unshift(i, t)
            }
            ,
            e.matchMedia = function(e) {
                var t, i, a, s, r;
                for (i in e)
                    a = He.indexOf(i),
                    s = e[i],
                    C = i,
                    "all" === i ? s() : (t = n.matchMedia(i),
                    t && (t.matches && (r = s()),
                    ~a ? (He[a + 1] = K(He[a + 1], s),
                    He[a + 2] = K(He[a + 2], r)) : (a = He.length,
                    He.push(i, s, r),
                    t.addListener ? t.addListener(_e) : t.addEventListener("change", _e)),
                    He[a + 3] = t.matches)),
                    C = 0;
                return He
            }
            ,
            e.clearMatchMedia = function(e) {
                e || (He.length = 0),
                e = He.indexOf(e),
                e >= 0 && He.splice(e, 4)
            }
            ,
            e
        }();
        ct.version = "3.5.1",
        ct.saveStyles = function(e) {
            return e ? m(e).forEach((function(e) {
                var t = We.indexOf(e);
                t >= 0 && We.splice(t, 4),
                We.push(e, e.style.cssText, a.core.getCache(e), C)
            }
            )) : We
        }
        ,
        ct.revert = function(e, t) {
            return Ye(!e, t)
        }
        ,
        ct.create = function(e, t) {
            return new ct(e,t)
        }
        ,
        ct.refresh = function(e) {
            return e ? De() : $e(!0)
        }
        ,
        ct.update = Qe,
        ct.maxScroll = function(e, t) {
            return W(e, t ? fe : be)
        }
        ,
        ct.getScrollFunc = function(e, t) {
            return H(m(e)[0], t ? fe : be)
        }
        ,
        ct.getById = function(e) {
            return Be[e]
        }
        ,
        ct.getAll = function() {
            return Oe.slice(0)
        }
        ,
        ct.isScrolling = function() {
            return !!O
        }
        ,
        ct.addEventListener = function(e, t) {
            var i = Ve[e] || (Ve[e] = []);
            ~i.indexOf(t) || i.push(t)
        }
        ,
        ct.removeEventListener = function(e, t) {
            var i = Ve[e]
              , a = i && i.indexOf(t);
            a >= 0 && i.splice(a, 1)
        }
        ,
        ct.batch = function(e, t) {
            var i, s = [], n = {}, r = t.interval || .016, o = t.batchMax || 1e9, l = function(e, t) {
                var i = []
                  , s = []
                  , n = a.delayedCall(r, (function() {
                    t(i, s),
                    i = [],
                    s = []
                }
                )).pause();
                return function(e) {
                    i.length || n.restart(!0),
                    i.push(e.trigger),
                    s.push(e),
                    o <= i.length && n.progress(1)
                }
            };
            for (i in t)
                n[i] = "on" === i.substr(0, 2) && $(t[i]) && "onRefreshInit" !== i ? l(i, t[i]) : t[i];
            return $(o) && (o = o(),
            Ce(ct, "refresh", (function() {
                return o = t.batchMax()
            }
            ))),
            m(e).forEach((function(e) {
                var t = {};
                for (i in n)
                    t[i] = n[i];
                t.trigger = e,
                s.push(ct.create(t))
            }
            )),
            s
        }
        ,
        ct.sort = function(e) {
            return Oe.sort(e || function(e, t) {
                return -1e6 * (e.vars.refreshPriority || 0) + e.start - (t.start + -1e6 * (t.vars.refreshPriority || 0))
            }
            )
        }
        ,
        D() && a.registerPlugin(ct)
    },
    b49f: function(e, t, i) {
        "use strict";
        var a = i("dd33")
          , s = i.n(a);
        s.a
    },
    b57b: function(e, t, i) {
        "use strict";
        var a = i("966a")
          , s = i.n(a);
        s.a
    },
    b64b7: function(e, t, i) {
        e.exports = i.p + "img/title.fa9c5ec1.png"
    },
    b659: function(e, t, i) {
        e.exports = i.p + "img/title.e9f9e328.png"
    },
    b798: function(e) {
        e.exports = JSON.parse('{"slug":"les-fontaines","name":"LES FONTAINES","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Brown / Beige / White</p><p>Moisture / Soil with moderate moisture (well-draining chalk)</p><p>Exposure / East / West</p>","description":"<p>The Les Fontaines vineyard is situated in a chalky subsoil, which provides the vine stock with an excellent regulation of excess water. The surface sand is mixed with this chalk, giving the grapes a thin, supple skin, resistant to excess water and thus limiting the appearance of rot at harvest time.</p><p>This plot\'s yields are low; each year we try to fill a press with these grapes.</p>","details":"<p>Total Area / 1ha38a90ca</p><p>Chartogne-Taillet Area / 81 ares 90 ca</p><p>Varieties / Meunier / Pinot Noir</p><p>Year of planting / 1971 - 1972</p><p>Exposure / East / West</p><p>Type of clay / Illites (186 m2/gr)</p>","image":"/assets/images/raisins/raisin-noir03.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"Silty / sandy soil<br/>Tunnels lined with<br/>calcium carbonate","caption":"-40cm"},{"name":"Frost-shattered chalk<br/>and sandstone","caption":"-1 mètre"}]}]},"wine":{"name":"Les Fontaines","specifications":"<p>Blends / Saint-Anne</p><p>Colour / Sandy blonde, with a Salmon tint in warm years</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Wines from Les Fontaines have an angular, sticky texture."},{"type":"block-paragraph","text":"<p>Wines from Les Fontaines are often matured in casks of two to four wines so as not to hide the chalky marker of their origin. We must avoid adding tannic or reductant markers (new casks or tanks), while allowing this wine to mature in slow, well-aerated conditions.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-fontaines.jpg"}],"fichetechnique":"/assets/pdf/en/Les Fontaines ENG.pdf"}}')
    },
    b8a8: function(e, t, i) {
        e.exports = i.p + "img/title.4611cf9a.png"
    },
    baa3: function(e) {
        e.exports = JSON.parse('{"slug":"cote-des-blancs","name":"CÔTE DES BLANCS","lieudit":"AVIZE","ground":{"specifications":"<p>Avize : 58,49 ares  / Oger : 28,76 ares</p><p>Soil colour / Often pale, with brilliant yellow lights that shine over the green</p><p>Moisture / Balanced soil, chalky soil with very high porosity</p><p>Exposure / East - South</p>","description":"<p>The Avize vineyard has several soil profiles which, for the house\'s plots, fall into three categories.</p><h3>Chemin de Chalons, Pierre Vaudon, Fosse le prêtre and Mont Chenevaux</h3><p>The soils of the plain, which have the most sun exposure, very high maturity and a very chalky profile thanks to the very thin layer of soil covering the chalk (less than 20 cm). Profile: mineral, generous. The grapes, often golden and smaller, exude sunshine and sugar. The skins are thinner but the berries do not burst, thanks to the calcium that increases the skins\' elasticity. These soils are not very deep and the roots penetrate directly into the chalk, a few centimetres below ground level. The sun shines from morning until the end of the day, as it is far from the eastern slopes of the Côte des Blancs.</p><h3>Mont de Cramant</h3><p>The first slopes, whose soils are deeper but dotted with crumbled, porous chalk, sometimes with southern exposure. Their wine has a very interesting profile due to its Organo/Mineral balance. These wines are balanced and adequate. The more bountiful soils give the wines a voluptuous generosity, like the soils in the village, sticky during rainy periods, yet without being heavy.</p><h3>Les Roches hautes, Les Barmonts</h3><p>The vines above the road that runs towards Cramant and Oger, before the woods, are cooler and moister, as their roots touch the chalk less. The wines here are tauter and stricter due to this slight difference in maturity due to the disappearance of the sun a few hours earlier than on the plain. These soils are very often the steepest in the village, with high-gradient slopes.</p>","details":"<p>Chartogne-Taillet Area in Avize / 59a74ca</p><p>Chartogne-Taillet Area in Oger / 15a55ca</p><p>Total Chartogne-Taillet Area / 75a29ca</p><p>Varieties / 100% Chardonnay</p><p>Year of planting / 1927 - 1986</p><p>Internal surface of clay / 247 m2/g</p>","image":"/assets/images/raisins/raisin-blanc01.jpg","underground":[{"title":"Plots of the upper slopes of Avize: Les Barmonts / Roches Hautes","image":"/assets/images/parcelles/couarres-chateau.png","levels":[{"name":"Clay-Limestone-Flint Soil","caption":"-1.5 m"},{"name":"Campanian Chalk","caption":""}]},{"title":"Plots in Mi Cote d\'Avize: Mont de Cramant / Roches Basses","image":"/assets/images/parcelles/cote-des-blancs-sol1.png","levels":[{"name":"Clay-Limestone","caption":"-0.50cm"},{"name":"Campanian Chalk","caption":""}]},{"title":"Plots in the plain of Avize and Oger:<br/>Pierre Vaudon / Fosse le prêtre / Les Monts Chenevaux / Chemin de Chalons","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"Clay-Limestone","caption":"-0.50cm"},{"name":"Campanian Chalk","caption":""}]}]},"wine":{"name":"Côtes des Blancs","specifications":"<p>Grape varieties / 100% Chardonnay</p><p>Colour / Souvent pâle, aux reflets jaune brillant dépassant le vert.</p>","packshot":"","content":[{"type":"block-paragraph","text":"<p>We shall not differentiate between Avize and Oger.<br/>Our Oger plot is located at the edge of the Avize plot, and the area under vine does not allow the grapes to be separated during pressing. I prefer to categorise the plots and wines according to their position on the slope.</p>","layout":"center"},{"type":"block-column","text":"<p>Wines from Avize have a maritime temperament, with a salty profile and the distinction of being one of the most ample and generous terroirs of the Côte des Blancs.<br/>Two or three plot types yield very characteristic wines: Wines from the plains are richest on the palate, benefiting from plentiful sun exposure. The chalk, which emerges most on these terroirs, takes care of balancing the warmth of these wines with the saltiness of the Campanian chalk.<br/>Wines from the slopes receive less sun and are balanced by a harder acidity.<br/>The wines from part way up the slopes are balanced between minerality and depth.</p><p>A nearly honey-like texture coats the palate while retaining, while extremely young, aromas of passion fruit. During aging, the saltiness develops and the fruit disappears, to yield one of the greatest Chardonnay wines in Champagne.</p>"},{"type":"block-image","url":"/assets/images/cuve/avize.jpg"},{"type":"block-highlight","text":"During aging, the saltiness develops and the fruit disappears, to yield one of the greatest Chardonnay wines in Champagne."},{"type":"block-paragraph","text":"<h3>FERMENTATION</h3><p>Fermentation of the house\'s grapes from the Avize vineyard is often long. This stage of transforming fruit juice into saltiness from the minerals rarely finishes in less than two months after the harvest.</p>"},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Wines from Avize are cooperative and allow the wine grower to adapt the aging system according to his preferences.<br/>Each year is different depending on the tannicity of the juice (ripeness of stems, seeds, etc.).<br>Wines from Avize are aged in 228, 350 and 600 litre barrels. The choice of casks is made at harvest time, according to the influence that the wood from each cooper will provide.</p>"}],"fichetechnique":"/assets/pdf/en/EN-Cote des Blancs.pdf"}}')
    },
    bb0d: function(e) {
        e.exports = JSON.parse('{"slug":"les-alliees","name":"LES ALLIÉES","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / 褐色, 黒っぽいこげ茶<br/>保水性 / 湿った土地<br/>畑の向き / 南向き</p>","description":"<p>レ・ザリエのブドウ畑は　メルフィでも一風変わった畑です。粘土を含むため　常に水分が保たれた土壌です。それで　病害が発生しやすく　特にブドウの実が熟する前に　ボトロチス（ハイイロカビ属の菌）による被害を受けやすくなります。この自己主張の強いシャンパーニュの区画では　細心の注意を払いながら手間暇かけた仕事が必要になります。</p>","details":"<p>全耕作地面積 / 4ha77a35ca</p><p>現栽培面積 / 60 ares 60 ca</p><p>栽培品種 / ムニエ</p><p>植樹された年 / 1969年 </p><p>畑の向き / 南 / 南東向き</p><p>粘土のタイプ / バーミキュライト362 m2/gr</p>","image":"/assets/images/raisins/raisin-noir01.jpg","underground":[{"title":"地表：ムニエ栽培","image":"/assets/images/parcelles/chemin-de-reims-sol.png","levels":[{"name":"泥土を含んだ砂質<br/>ヤプレシアン期のチョーク層","caption":""},{"name":"砂質粘土","caption":"深さ1メートル"}]}]},"wine":{"name":"Les Alliées","specifications":"<p>色合い / 光沢のあるローズがかったオレンジ</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Lこの区画のワインは、キュヴェのブレンドに用いられますSainte Anne。"},{"type":"block-paragraph","text":"<h3>口当たり</h3><p>レ・ザリエのワインは　すらっとした率直な口当たりです。唾液分泌が活発になり、村のその他のムニエに比べてしばしば酸味が強くなります。角のあるシャンパーニュなので　熟成が必要になります。</p>"},{"type":"block-paragraph","text":"<h3>樽熟成</h3><p>レ・ザリエのワインは　2016年より新樽又は年季の入っていない樽を使って熟成が行われています。木の柔らかなタンニンがこの区画のワインの酸味の強さを還元してくれます。そしてワインの調和を乱すムニエの甘みの強さとのバランスを取ってくれます。</p>"},{"type":"block-image","url":"/assets/images/cuve/les-alliees.jpg"}],"fichetechnique":"/assets/pdf/en/Les Alliees ENG.pdf"}}')
    },
    be36: function(e) {
        e.exports = JSON.parse('{"slug":"les-barres","name":"LES BARRES","lieudit":"MERFY","ground":{"specifications":"<p>土壌の色 / L明るい黄色味を帯びたベージュ</p><p>保水性 / 水はけのよい乾いた土壌</p><p>斜面の向き / 南西</p>","description":"<p>レ・バールの畑は 村でも最も水捌けのよい土壌にあります。<br/>砂質の土壌はフィロキセラの被害を免れ、接ぎ木なしのムニエのブドウの樹を栽培し続けています。そして新たに接ぎ木無しのシャルドネを植樹しました。<br/>この土壌では ブドウ栽培者が行う作業の回数に限度があります。</p><p>砂質の土壌は簡単に固まり、また鍬を入れて仕事をするには 砂が細かすぎます。<br/>そんな訳で耕作は最低限必要なときに行い（冬になる直前、樹の根元のみ）、<br/>そして代わりに土壌の地盤の支持力と基盤を支えるため草生栽培を行います。草の刈り込みは手作業で行い、ローラーで土が固まってしまうのを防ぎます。剪定は樹液の循環が滞りなく行われるように 気を付けます。自然に生えた多種多様な草は 土地の状態やコンディションを知るのに役立ちます。自然から教えられたメッセージを通して 私たちの仕事が決まっていきます。</p><p>この区画のブドウの収穫量は大変少なくなります。</p>","details":"<p>畑総面積 / 4ha77a35ca</p><p>現耕作面積 / 1ha37a60ca</p><p>栽培品種 / ムニエ</p><p>植樹された年 / 1970年、2008年</p><p>粘土のタイプ / イライト含有量 192 m2 / Gr</p>","image":"/assets/images/bouteilles/les-barres.jpg","underground":[{"title":"土壌","image":"/assets/images/parcelles/les-barres-sol.png","levels":[{"name":"サネティアン期の砂質石灰岩","caption":""},{"name":"カンパニア期のチョーク層","caption":"深さ1,5メートル"}]}]},"wine":{"name":"Les Barres","specifications":"<p>栽培品種 / 100% Meunier</p><p>色合い /砂岩 (サンドストーン)</p>","packshot":"/assets/images/wines/packshot/les-barres.png","content":[{"type":"block-column","text":"<p>Les Barresは時間と共に味わいが変化していくワインです。若い頃のワインは 豊かで丸みを帯びた、粘り気のある味わいに包まれた味わいです。（接ぎ木によらないブドウの樹から収穫されたブドウの実の皮を思い起こさせます）<br/>時と共に交錯する味わいが洗練され、伸びやかになり、塩味が現れて しなやかでクリーミー、ゆったりとしたワインへと変貌していきます。</p>"},{"type":"block-highlight","text":"Les Barresは時間と共に味わいが変化していくワインです。"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>バールのワインは 注意深く見守っていかなければなりません。ムニエのワインは 圧倒的な味わいとアロマを持っており、テロワール由来の塩味が隠されています。ワインは 228ℓの木樽で 酸素とのコンタクトに気を付けながら熟成が行われます。ワインのミネラル化、つまりワインを安定させる働きのある塩味で 品種特有のアロマを少しずつ失わせていきます。ワインのミネラル化を施すため、ウイヤージュは発酵から3月ごろまで一切行いません。ワインは石灰の土壌由来の魅力的な塩味が現れてくるまで 膜の下で酸素から守られます。</p>"},{"type":"block-image","url":"/assets/images/cuve/les-barres.jpg"},{"type":"block-paragraph","text":"<h3>熟成期間</h3><p>レ・バールのシャンパーニュは独特で、変わった熟成をします。酸素を取り込み、暗く光の当たらない湿気のある場所で味わいが開いていきます。 率直なアロマではなく、下草、腐植質の アロマです。塩の風味は熟成を重ねるにつけ顕著になり、有機質的な部分がほとんど失われていきます。初めのころのシャンパーニュには オレンジのようなアロマが微かに感じられます。</p>"}],"fichetechnique":"/assets/pdf/jp/Les Barres JAP.pdf"}}')
    },
    bf94: function(e) {
        e.exports = JSON.parse('{"slug":"cote-des-blancs","name":"CÔTE DES BLANCS","lieudit":"AVIZE","ground":{"specifications":"<p>Avize : 58,49 ares  / Oger : 28,76 ares</p><p>土壌の色 / チョーク塊が混じった明るい褐色</p><p>保水性 / バランスのとれた土壌、保水性に優れた厚いチョーク層</p><p>斜面の向き / 東 又は南向き</p>","description":"<p>アヴィーズのブドウ畑は様々な土壌の特徴があり、私たちのメゾンではそれらを３つのカテゴリーに分けています。</p><h3>シュマン・ド・シャロン、ピエール・ヴォードン、フォッス・ル・プレートル、及び モン・シュヌヴォー</h3><p>平地に位置するブドウ畑は日当たりも良く、大変熟成感があります。20センチにも満たないとても薄い表土の下にチョーク層が広がり、石灰の性格が顕著です。ミネラリー、そしてふくよかさが特徴です。<br/>ブドウの実は小さく、しばしば糖分と陽の光を受けて黄金色を帯びています。果皮は薄いのですが 果皮に含まれるカルシウムのお陰で 漿果部分が透けて見えません。<br/>表土が薄いので 根は数10センチの厚さしかない表土の下に位置するチョーク層に直に到達します。コート・デ・ブランの東向きの斜面から隔たっているため、朝から日暮れまで日が当たります。</p><h3>ル・モン・ド・クラモン</h3><p>丘陵の始まりに位置し表土はより厚くなりますが 吸水性のある石灰岩が点在し、所々南を向いている斜面の畑からは 有機/ミネラル分のバランスがとれた大変興味深いワインが生まれます。<br/>これらのワインは 味わいのバランスがとれた、十分満足できるワインです。 肥沃な土壌は魅力たっぷりのまったりとしたワインを生み出し、それはまさに 雨が降った時足にまとわりつく地面、それも決して重くまとわりつかない村の土壌の性格を体現しているかのようです。</p><h3>レ・ロッシュ・オート, レ・バルモン</h3><p>森の手前にあるクラモンとオジェ村を結ぶ道路の上に位置するこれらのブドウ畑は 冷たく湿気の多い土壌で、根がチョーク層に達しにくくなります。これらの区画のワインは 平地の畑に比べて日の当たる時間が短くなるために 熟成がやや遅れ、緊張感のある厳格な味わいになります。これらの区画は 村の畑の中でも最も急勾配 に位置しています。</p>","details":"<p>アヴィーズ村の畑の耕作面積 / 59a74ca</p><p>オジェ村の畑の耕作面積 / 15a55ca</p><p>合計耕作面積 / 75a29ca</p><p>栽培品種 / シャルドネ100</p><p>植樹された年 / 1927 年、1986年</p><p>斜面の向き / 東 又は南向き</p><p>粘土質の含有量 / 247 m2/g</p>","image":"/assets/images/raisins/raisin-blanc01.jpg","underground":[{"title":"アヴィーズの丘陵の上部に位置する区画 : レ・バルモン / レ・ロッシュ・オート","image":"/assets/images/parcelles/couarres-chateau.png","levels":[{"name":"シレックスの混じる粘土質石灰岩","caption":"-1,50 メートル"},{"name":"カンパニア期のチョーク層","caption":""}]},{"title":"アヴィーズの中腹に位置する区画 モン・ド・クラモン / ロッシュ・バース","image":"/assets/images/parcelles/cote-des-blancs-sol1.png","levels":[{"name":"粘土質石灰岩","caption":"-0.50 メートル"},{"name":"カンパニア期のチョーク層","caption":""}]},{"title":"アヴィーズとオジェの平地に位置する区画 :<br/>ピエール・ヴォードン / フォッス・ル・プレートル / レ・モン・シュヌヴォー / シュマン・ド・シャロン","image":"/assets/images/parcelles/heurtebise-sol.png","levels":[{"name":"粘土質石灰岩","caption":"-0.50 メートル"},{"name":"カンパニア期のチョーク層","caption":""}]}]},"wine":{"name":"Côtes des Blancs","specifications":"<p>栽培品種 /シャルドネ100</p><p>色合い / バランスのとれた土壌、保水性に優れた</p>","packshot":"","content":[{"type":"block-paragraph","text":"<p>アヴィーズとオジェの畑に違いはありません。<br/>オジェのブドウ畑は アヴィーズの畑との境界に位置し、小さな区画ですので 圧搾を区画ごと分けて行うことができません。むしろ丘陵の標高差によって 畑とワインを区別しています</p>","layout":"center"},{"type":"block-column","text":"<p>アヴィーズのワインは 塩味が顕著な磯の風味と コート・デ・ブランのテロワールの中でも 特に豊潤でふっくらとした個性を持つワインです。2つ、又は３つの区画からは 大変個性的なワインが誕生します : 平地のワインは 日の恵みを受けたふくよかな味わいが口の中に広がります。<br/>テロワールに露出したチョーク層、カンパニア期のチョークの塩分が ワインのゆったりとした味わいにバランスを取ります。<br/>丘陵地帯上部に位置するワインは 日射量が少なくなりますが 鋭敏な酸によってワイン全体のバランスを取ります。<br/>丘陵地帯中腹に位置するワインは ミネラリーで奥行きのある味わいが特徴です。</p><p>パッションフルーツのような 若々しいアロマを保ちながら 蜜のような味わいがまったりと広がる口当たり。熟成を経ると フルーツのアロマは失われ、塩味が優り、シャンパーニュ地方の偉大なシャルドネのワインへと変貌します。</p>"},{"type":"block-image","url":"/assets/images/cuve/avize.jpg"},{"type":"block-highlight","text":""},{"type":"block-paragraph","text":"<h3>発酵</h3><p>私たちのメゾンのアヴィーズのブドウの発酵は 長い時間をかけて行います。果汁をワインに変えるこの工程は 収穫から2か月以内で終わることは 滅多にありません。</p>"},{"type":"block-paragraph","text":"<h3>発酵後の樽熟成</h3><p>アヴィーズのワインは遊び好きなので ワイン生産者は 各々の特徴に応じて樽熟成のシステムを工夫しています。<br/>毎年果汁に含まれるタンニン（果梗、種子の熟成度）によって異なります。<br/>アヴィーズのワインは228ℓ、350ℓ、600ℓの樽で熟成を行います。<br/>樽の種類は 収穫の際に各樽工房の木がどの様に影響を及ぼすかを考慮しながら選ばれます。</p>"}],"fichetechnique":"/assets/pdf/jp/Hors Serie Cote des Blancs JAP.pdf"}}')
    },
    c0ff: function(e, t, i) {
        e.exports = i.p + "img/streets.7f922d96.png"
    },
    c444: function(e) {
        e.exports = JSON.parse('{"scroll":"discover","map":"map","explore":"explore","villages":{"avize":[["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"],["This plot is part of","the composition of the","côte des blancs cuvée"]],"merfy":[[],[],[],[],[],["This plot is part of","the composition of the","Sainte Anne cuvée","-","Total Area / 18A72CA","Grape variety / 100% Pinot Noir","Year of planting / 1989"],[],["This plot is part of","the composition of the","Sainte Anne cuvée","-","Total Area / 33A75CA","Year of planting / 1972 - 1991"],[],["This plot is part of","the composition of the","Sainte Anne cuvée","-","Total Area / 19A4CA","Grape variety / 100% Meunier","Year of planting / 1970 - 1992"],["This plot is part of","the composition of the","Sainte Anne cuvée","-","Total Area / 43A30CA","Grape variety / 100% Meunier","Year of planting / 1980 - 1984"],["This plot is part of","the composition of the","Sainte Anne cuvée","-","Total Area / 60A60CA","Grape variety / 100% Meunier","Year of planting / 1969"],[],[]]}}')
    },
    c471: function(e) {
        e.exports = JSON.parse('{"history":{"header":"HISTORY","headline":"OUR HERITAGE","component0":{"title":"A BENEDICTINE<br/>HERITAGE","description":"<p>In the 7th century, the villages\' wine growers, situated in Merfy, drew on the heritage of the Benedictine monks from the abbey of Saint Thierry. Generation after generation, Merfy\'s wine growers, together with the abbey, shaped the viticultural landscapes of our hillsides, meticulously separating each plot according to its geological origins, soils, subsoils, etc. Names were subsequently inscribed on maps of the village, and these became the \\"lieu-dits,\\" which today nourish the roots of the vines growing there.</p>"},"component1":{"title":"A FAMILY<br/>HERITAGE","description":"<p>The traces of the wine growers in our family go back to 1490, with Nicolas Taillet, and Fiacre Taillet in 1540. By 1700, a second Fiacre Taillet, an erudite wine grower, was writing his memoirs recounting his lifework, as well as all the important events of the village, the family and his profession. The Chartogne-Taillet family continues this tradition of writing and savoir-faire inherited from this legacy of wine growing.</p>"},"component2":{"title":"A WINE GROWER\'S<br/>HERITAGE","highlight":"<p>Every gesture is guided by a request from the plants, the vines and our environment.</p>","description":"<p>Our work is guided by our observations and our senses. Every gesture is guided by a request from the plants, the vines and our environment. We have returned to the savoir-faire of wine growers from times long gone by, when man could not do harm by using products or machines. We work by hand, or with the help of our horses in the fields.</p>"},"component3":{"headline":"VIRTUOSITY","title":"SAVOIR-FAIRE<br/>& PASSION","description":"<p>Understanding, by way of the saltiness, the textures, the lengths and the tastes, that wine\'s origins, from which soil and subsoil the vine has drawn its strength and its knowledge. We are the guarantors of this knowledge, to be passed on from one generation to another, from one bottle to the next.</p>","highlight":"<p>Tasting a wine is like immersing yourself, from afar, in the flavours of a particular place.</p>","description2":"<p>Today, our gestures are guided by this transmitted know-how, and we adapt the Benedictines\' winemaking practices to the new effervescence of the Champagne region. Preserving the flavours of this place by creating a wine that will soon sparkle. There is no need for certification, except the one that will allow us to capture the flavours of our terroir in our bottles.</p>"},"footer":{"title":"TERROIRS<br/>& WINES"}},"contact":{"header":"CONTACT","firstname":"ALEXANDRE","lastname":"CHARTOGNE","address":"37-39 GRANDE RUE","postcode":"51220","city":"MERFY","phone":"+33326031017","phonelabel":"(+33)326031017","email":"Chartogne.taillet@wanadoo.fr","facebook":"FACEBOOK","instagram":"INSTAGRAM","distributors":"DISTRIBUTORS<br/>& AGENTS","france":"FRANCE","export":"EXPORT","distrutorsFranceLabels":["NOM","REGION","DÉPARTEMENT"],"distrutorsFrance":[{"name":"4 ares 28 (Pierre Le Lay)","region":"Ouest Loire","departments":"76,27,28,61,14,50, 72, 53, 35, 22, 29, 56, 44, 49, 37, 41, 45, 85, 79, 86, 36, 17, 16, 87, 24, 40, 64, 65, 32, 82"},{"name":"Dégustation Sélection","region":"Est","departments":"57,67,68, 39, 01, 69, 38"},{"name":"Les Invincibles (Alexandre Imbert)","region":"Sud","departments":"31, 11, 66, 34, 30"},{"name":"Geoffroy Gamba Vins Spiritueux","region":"Sud Est","departments":"13, 83, 06 et Monaco"},{"name":"Vinhop","region":"Paris","departments":"78, 91, 77, 95, 75, 92, 93 et 94"},{"name":"Mouchonnat","region":"Bourgogne","departments":"21"},{"name":"Clos Azelto","region":"Corse","departments":"2A, 2B"}],"exports":[{"country":"GERMANY","companies":[{"name":"Life in Bubble"}]},{"country":"ENGLAND","companies":[{"name":"Vine Trail","url":"http://www.vinetrail.co.uk/"}]},{"country":"AUSTRIA","companies":[{"name":"Wagner","url":"https://www.wagners-weinshop.com/"}]},{"country":"AUSTRALIA","companies":[{"name":"Bibendum - Imbibo"}]},{"country":"BELGIUM","companies":[{"name":"Vinikus et Lazarus","url":"http://www.vinikusenlazarus.be/"}]},{"country":"BRASIL","companies":[{"name":"Animavinum"}]},{"country":"CAMBODIA","companies":[{"name":"Wine direct"}]},{"country":"CANADA","companies":[{"name":"Oenopole","url":"https://oenopole.ca/"},{"name":"Pion"}]},{"country":"CORSICA","companies":[{"name":"Clos Alzeto","url":"https://www.closdalzeto.com/"}]},{"country":"SOUTH KOREA","companies":[{"name":"Vinocus","url":"https://www.facebook.com/vinocus.wine"}]},{"country":"CHINA","companies":[{"name":"The Fine Wine Experience"}]},{"country":"DENMARK","companies":[{"name":"Laudrup","url":"https://www.laudrup.dk/da/laudrup-vin-gastronomi-wines-and-delicacies-unlimited/"}]},{"country":"SPAIN","companies":[{"name":"Champeron Paris","url":"http://champeronparis.com/portada"}]},{"country":"ESTONIA","companies":[{"name":"Brillare","url":"http://brillare.eu/en/"}]},{"country":"FINLAND","companies":[{"name":"Vin Direkt","url":"https://www.vindirekt.fi/"}]},{"country":"HONG KONG CHINA","companies":[{"name":"The Fine Wine Experience","url":"https://www.finewineexperience.com/"}]},{"country":"ITALY","companies":[{"name":"MOON Import","url":"http://www.moonimport.it/"}]},{"country":"JAPAN","companies":[{"name":"Firadis","url":"http://www.firadis.co.jp/"}]},{"country":"LEBANON","companies":[{"name":"Terroir Y Selection"}]},{"country":"LIECHTENSTEIN","companies":[{"name":"Ritter Weine"}]},{"country":"LUXEMBOURG","companies":[{"name":"Craft & Company","url":"https://www.craftetcompagnie.com/"}]},{"country":"NORWAY","companies":[{"name":"Moestue Grape Selections"}]},{"country":"NEW ZEALAND","companies":[{"name":"The Village Winery"}]},{"country":"NETHERLANDS","companies":[{"name":"Janselijn Wijnen"}]},{"country":"CZECH REPUBLIC","companies":[{"name":"Le Clos"},{"name":"Vino Vino Vino","url":"http://vino-vino-vino.cz/"}]},{"country":"RUSSIA","companies":[{"name":"Simple","url":"https://simplewine.ru/"}]},{"country":"SWEDEN","companies":[{"name":"Franska Vinlistan","url":"http://franskavinlistan.com/"}]},{"country":"SWITZERLAND","companies":[{"name":"Cultivino","url":"https://www.cultivino.ch/"},{"name":"Le Passeur de Vin"}]},{"country":"SINGAPORE","companies":[{"name":"Artisan Cellar","url":"https://www.artisan-cellars.com/welcome.html"}]},{"country":"THAILAND","companies":[{"name":"Reserve Wine"}]},{"country":"TAIWAN","companies":[{"name":"Mouchonnat","url":"http://www.mouchonnat.com/"}]},{"country":"USA","companies":[{"name":"Skurnik Wines","url":"https://www.skurnik.com/"}]}]},"common":{"discover":"DISCOVER","fichetechnique":"TECHNICAL INFORMATION","encepagement":"Varieties","plantation":"Planting ","exposition":"Exposure","alcoholnotice":"Alcohol abuse is dangerous for your health. Please drink with moderation.","parcelleground":"<p>THE</p><p>PLOT\'S</p><p>SOIL</p>","comeback":"BACK","winespecificites":"<p>THE</p><p>WINE\'S</p><p>SPECIFICITIES</p>","name":"Name","wines":"Wines","pageNotFound":"PAGE NOT FOUND","plots":"Plots","thePlots":"PLOTS","theWines":"WINES","history":"HISTORY","contact":"CONTACT","validationAge":"I hereby certify that I am over the legal age for the consumption of alcohol in my country","enter":"Enter","close":"CLOSE","menu":"MENU"}}')
    },
    c6a9: function(e, t, i) {
        "use strict";
        var a = i("3d7d")
          , s = i.n(a);
        s.a
    },
    c70e: function(e, t, i) {
        "use strict";
        var a = i("66a8")
          , s = i.n(a);
        s.a
    },
    c73c: function(e, t, i) {
        e.exports = i.p + "af5372209a98e211be69fb17028a498c.glb"
    },
    c78c: function(e, t, i) {
        e.exports = i.p + "img/hotelBlazon.12f4a86c.png"
    },
    c9f5: function(e, t, i) {},
    ca4d: function(e, t, i) {},
    caf5: function(e, t, i) {},
    caff: function(e, t, i) {
        "use strict";
        var a = function() {
            var e = this
              , t = e.$createElement
              , i = e._self._c || t;
            return i("div", {
                staticClass: "canvas-text"
            }, [i("div", {
                ref: "caption",
                staticClass: "caption"
            }, e._l(e.captions, (function(t, a) {
                return i(e.tag, {
                    key: a,
                    tag: "component",
                    staticClass: "row"
                }, [e._v(e._s(t))])
            }
            )), 1), i("canvas", {
                ref: "canvas",
                staticClass: "main-text"
            }), i("PerlinImage", {
                ref: "perlin",
                attrs: {
                    "die-on-leave": e.dieOnLeave,
                    static: e.stase,
                    lines: this.captions.length,
                    shifting: e.shifting
                }
            })], 1)
        }
          , s = []
          , n = (i("4de4"),
        i("4160"),
        i("d81d"),
        i("a9e3"),
        i("159b"),
        i("5a89"))
          , r = i("49ce")
          , o = i("9227")
          , l = {
            name: "CanvasText",
            mixins: [r["a"]],
            components: {
                PerlinImage: o["a"]
            },
            props: {
                captions: {
                    type: Array,
                    default: function() {
                        return []
                    }
                },
                tag: {
                    type: String,
                    default: "span"
                },
                stase: {
                    type: Boolean,
                    default: !1
                },
                fontSize: {
                    type: Number,
                    default: 5.5
                },
                mobile: {
                    type: Object,
                    default: function() {
                        return {
                            fontSize: !1
                        }
                    }
                },
                textAlign: {
                    type: String,
                    default: "center"
                },
                color: {
                    type: String,
                    default: "#000000"
                },
                highlight: {
                    type: Boolean,
                    default: !1
                },
                shifting: {
                    type: Number,
                    default: 0
                },
                customJustify: {
                    type: [Boolean, Array],
                    default: !1
                },
                dieOnLeave: {
                    type: Boolean,
                    default: !1
                }
            },
            data: function() {
                return {
                    texture: new n["g"]
                }
            },
            mounted: function() {
                var e = this;
                this.pixelRatio = Math.min(2, window.devicePixelRatio),
                this.ctx = this.$refs.canvas.getContext("2d"),
                this.$refs.canvas.style.letterSpacing = "0px",
                this.texture = new n["g"](this.ctx.canvas),
                this.highlight && (this.opacities = this.captions.map((function() {
                    return {
                        opacity: 0
                    }
                }
                ))),
                this.onResized(window.innerWidth, window.innerWidth),
                this.timeout = setTimeout((function() {
                    e.$nextTick((function() {
                        e.onResized(window.innerWidth, window.innerWidth),
                        e.$refs.perlin.onResized()
                    }
                    ))
                }
                ), 150)
            },
            beforeDestroy: function() {
                window.clearTimeout(this.timeout)
            },
            methods: {
                draw: function() {
                    var e = this;
                    this.ctx.clearRect(0, 0, this.$refs.canvas.width, this.$refs.canvas.height);
                    var t = parseFloat(window.getComputedStyle(document.body).fontSize)
                      , i = this.resize.width < 768 && this.mobile.fontSize || this.fontSize
                      , a = this.resize.width < 768 && this.mobile.textAlign || this.textAlign;
                    this.screenFont = i * t * this.pixelRatio,
                    this.letterSpacing = .175 * this.screenFont,
                    this.ctx.font = this.resize.width < 768 ? "".concat(Math.round(this.screenFont), "px ShipleyRegular") : "".concat(this.fontSize * t * this.pixelRatio, "px ShipleyRegular"),
                    this.ctx.textBaseline = "middle";
                    var s = []
                      , n = this.$refs.canvas.height / this.captions.length;
                    this.captions.forEach((function(t) {
                        var i = t.toUpperCase()
                          , a = e.ctx.measureText(i);
                        s.push({
                            caption: i,
                            width: a.width
                        })
                    }
                    )),
                    this.customJustify && s.map((function(t, i) {
                        var a = s.filter((function(e) {
                            return e.width > t.width
                        }
                        ));
                        return Array.isArray(e.customJustify) ? (t.rowAlign = e.customJustify[i].align,
                        t) : 0 === a.length ? (t.rowAlign = "center",
                        t) : 0 === i ? (t.rowAlign = "left",
                        t) : i <= s.length - 1 && 0 !== i ? (t.rowAlign = "right",
                        t) : void 0
                    }
                    )),
                    s.forEach((function(t, i) {
                        var s = t.caption
                          , r = t.rowAlign;
                        e.ctx.fillStyle = e.color;
                        var o = n * i + .5 * n
                          , l = r || a;
                        e.ctx.textAlign = l;
                        var u = 0;
                        if (Array.isArray(e.customJustify) && e.customJustify[i].offset && (u += e.customJustify[i].offset * e.screenFont),
                        e.highlight) {
                            var h = e.opacities[i].opacity;
                            e.ctx.renderText(s, 0, o, e.letterSpacing),
                            e.ctx.fillStyle = "rgba(194, 61, 42, ".concat(h, ")"),
                            e.ctx.renderText(s, 0, o, e.letterSpacing)
                        } else
                            "center" === l ? e.ctx.renderText(s, e.$refs.canvas.width / 2, o, e.letterSpacing) : "left" === l ? e.ctx.renderText(s, u, o, e.letterSpacing) : "right" === l && e.ctx.renderText(s, e.$refs.canvas.width - u, o, e.letterSpacing)
                    }
                    ))
                },
                onResized: function() {
                    this.$refs.canvas && (this.$refs.canvas.width = this.$refs.caption.offsetWidth * this.pixelRatio,
                    this.$refs.canvas.height = this.$refs.caption.offsetHeight * this.pixelRatio,
                    this.draw(),
                    this.$refs.perlin && (this.$refs.perlin.texture.needsUpdate = !0))
                }
            }
        }
          , u = l
          , h = (i("0c33"),
        i("2877"))
          , c = Object(h["a"])(u, a, s, !1, null, "26f73ff5", null);
        t["a"] = c.exports
    },
    cb87: function(e, t, i) {},
    cea2: function(e, t, i) {
        e.exports = i.p + "img/terrainData3.9bedbb99.jpg"
    },
    cea8: function(e, t, i) {
        e.exports = i.p + "img/paper-256x256.5cb775d1.jpg"
    },
    d068: function(e, t, i) {
        e.exports = i.p + "img/title.ec868ad1.png"
    },
    d088: function(e) {
        e.exports = JSON.parse('{"wines":[{"slug":"sainte-anne","name":"Sainte-Anne","title":"SAINTE-ANNE","type":"assemblage","encepagement":"Chardonnay / Pinot Noir / Meunier","plantation":"1970 - 2009","exposition":"South / South-East","fichetechnique":"/assets/pdf/en/EN-Sainte Anne.pdf","packshot":"/assets/images/wines/packshot/saint-anne.png","lieudit":"MERFY","specifications":"<p>Grape varieties / Pinot Noir - Chardonnay<br/>Colour / Often pale, with limpid orangey lights</p>","content":[{"type":"block-column","text":"<p>The Sainte Anne cuvée is the sensory translation of wines from the different soils of the village of Merfy. Each of the village\'s plots contributes part of its identity to \\"create\\" this cuvée. Sainte Anne\'s textures are revealed throughout the entire length on the palate. Often initially opulent on the palate, the salts from the sands then give rise to a salivating bitterness. The finish leaves a tight structure that recalls the origin of Champagne wines.</p>"},{"type":"block-paragraph","text":"<h3>GRAPE VARIETIES</h3><p>Sainte Anne is a blend of 50% Chardonnay and 50% red grape varieties (mostly Pinot Noir). In the majority of harvest years...</p>"},{"type":"block-paragraph","text":"<h3>RESERVE WINES</h3><p>The Sainte Anne cuvée is a blend of several harvest years.</p>"},{"type":"block-highlight","text":"The Sainte Anne cuvée is a blend of several harvest years."},{"type":"block-paragraph","text":"<h3>AGING</h3><p>Sainte Anne is now aged and vinified in 228-, 350- and 2000-litre barrels. A small portion of this Champagne has been aged in tanks, mostly the reserve wines. The Champagnes of our village need oxygen to deliver the message indicative of their origins. Each plot is vinified differently (topped-up or not, casks of different provenances, etc.). This enables us to obtain unique and identifiable characteristics from this period in the life of our Champagnes. Once the aging of wines from each plot has been completed, we combine these different reflections of the village to create a blend that aims to be fully representative of Merfy\'s wines. We seek the crystalline texture emblematic of wines from Merfy\'s sandy limestone terroirs, to preserve our village\'s unique identity.</p>"},{"type":"block-image","url":"/assets/images/cuve/saint-anne.jpg"},{"type":"block-column","heading":"<h3>CHAMPAGNISATION</h3>","text":"<p>The wines do not tolerate filtration. Filtration would modify the wines\' textures too much, and therefore alter the balance of richness/saltiness on the palate. The wines of Sainte Anne are blends from different plots, but also from different vintages. Older harvest years soften and temper the lively and spirited character of the younger wines. After aging in the cellar, Sainte Anne is disgorged with a Brut dosage that hardly varies from year to year. The dosage tests indicate that 4-7 g of sugar are needed to rebalance the aggressiveness and vigour of the bubbles, without masking the nature of the wine and its density.  We use a liqueur made from the same wine as the cuvée that is being disgorged.</p>"}]},{"slug":"le-rose","name":"Le Rosé","title":"LE ROSÉ","type":"assemblage","encepagement":"Pinot Noir & Chardonnay","plantation":"1970 - 2009","exposition":"South / South-East","fichetechnique":"/assets/pdf/en/EN-Le Rose.pdf","packshot":"/assets/images/wines/packshot/rose.png","lieudit":"AVIZE","specifications":"<p>Grape varieties / Pinot Noir - Chardonnay</p><p>Colour / Often pale, with limpid orangey lights</p>","content":[{"type":"block-column","text":"<p>Le Rosé is a blended Champagne that offers two distinct and successive taste profiles. This wine first enrobes the mouth with a mellow texture, then is long on the palate, leaving a delicate and precise consistency.</p>"},{"type":"block-paragraph","text":"<h3>GRAPE VARIETIES</h3><p>Le Rosé is a blended Champagne composed of Chardonnay, and red grape varieties (mostly Pinot Noir). The blended red wine comes from one of two plots recognised for the quality of their red-wine grapes. In certain years, from the Orizeaux plot, and since 2017, from the Les Fontaines plot in Saint Thierry. Le Rosé is an exception among the house\'s wines. It requires more varied oenological work than our single-vineyard Champagnes do. The effect of this addition of red wine to white wine necessitates specific decisions to avoid excess opulence, fruitiness or tannicity.</p>"},{"type":"block-paragraph","text":"<h3>BASE YEAR</h3><p>We favour a single year for this cuvée, which is not blended with reserve wines.</p>"},{"type":"block-image","url":"/assets/images/cuve/le-rose.jpg"},{"type":"block-highlight","text":"This wine is often a Champagne blended from a single vintage."},{"type":"block-paragraph","text":"<h3>CHAMPAGNISATION</h3><p>Le Rosé is aged in 228-litre and 350-litre casks. Fermentation is spontaneous, without the addition of yeast or bacteria.</p>"}]},{"slug":"orizeaux","name":"Orizeaux","title":"ORIZEAUX","type":"monocépage","encepagement":"100% pinot noir","plantation":"1970","exposition":"double - South and North","fichetechnique":"/assets/pdf/en/EN-Orizeaux.pdf","parcelle":"les-oriseaux","packshot":"/assets/images/wines/packshot/orizeaux.png"},{"slug":"les-barres","name":"Les Barres","title":"LES BARRES","type":"monocépage","encepagement":"Meunier / Pinot Noir / Chardonnay","plantation":"1970 - 2008","exposition":"100% Meunier","fichetechnique":"/assets/pdf/en/EN-Les Barres.pdf","parcelle":"les-barres","packshot":"/assets/images/wines/packshot/les-barres.png"},{"slug":"chemin-de-reims","name":"Chemin de Reims","title":"CHEMIN DE REIMS","canvasTitle":["CHEMIN DE","REIMS"],"type":"monocépage","encepagement":"100% chardonnay","plantation":"1980 - 1995 - 2011","exposition":"Sud - Sud Est","fichetechnique":"/assets/pdf/en/EN-Chemin de reims.pdf","parcelle":"le-chemin-de-reims","packshot":"/assets/images/wines/packshot/chemin-de-reims.png"},{"slug":"les-couarres","name":"Les Couarres","title":"LES COUARRES","type":"monocépage","encepagement":"Pinot Noir / Chardonnay","plantation":"1970 - 2009","exposition":"South, gentle slope","fichetechnique":"/assets/pdf/en/EN-Les Couarres.pdf","parcelle":"les-couarres","packshot":"/assets/images/wines/packshot/les-couarres.png"},{"slug":"heurtebise","name":"Heurtebise","title":"HEURTEBISE","type":"monocépage","encepagement":"100% Chardonnay","plantation":"1972 - 1985 - 1986 - 2010","exposition":"South","fichetechnique":"/assets/pdf/en/EN-Heurtebise.pdf","parcelle":"les-heurtes-bises","packshot":"/assets/images/wines/packshot/heurtebise.png"}]}')
    },
    d102: function(e, t, i) {
        e.exports = i.p + "img/title.721c02d1.png"
    },
    d6f9: function(e, t, i) {
        e.exports = i.p + "img/title.5e9a4374.png"
    },
    d9c7: function(e, t, i) {},
    da5d: function(e, t, i) {
        e.exports = i.p + "img/title.226ff9ac.png"
    },
    db79: function(e) {
        e.exports = JSON.parse('{"slug":"les-couarres","name":"LES COUARRES","lieudit":"MERFY","ground":{"specifications":"<p>Couleur du sol / foncé ; marron</p><p>Humidité / sol le plus humide du domaine</p><p>Exposition / Sud , faible pente</p>","description":"<p>La vigne des Couarres est installée au centre du terroir de Merfy, sur la zone la moins drainante du village. Deux types de sous-sol sont à recenser dans cette parcelle : Le Tuffeau et l’argile.</p><p>Pour ces deux parcelles, le travail de l’homme est sensiblement le même, avec des réserves utiles plus importantes que les vignes voisines, et une capacité à conserver un niveau d’humidité qui évite les carences en eau pour les vignes plantées dans ce «Lieu Dit». Tandis que beaucoup de sols du village sèchent rapidement et permettent un travail du sol rapide après les pluies, le Lieu Dit «Les Couarres» exige la patience. De par ce constat ainsi que sa topographie, cette vigne est la plus sensible aux gelées.</p><p>Les rendements de cette parcelle sont les plus généreux du domaine et doivent souvent être limités par un ébourgeonnage important et par la suppression d’un pampre sur deux.</p>","details":"<p>Surface totale / 3ha71a20ca<br/>Surface exploitée / 1ha94a15ca<br/>Encépagement / Pinot Noir / Chardonnay<br/>Année de plantation / 1970 - 2009<br/>Granulométrie des argiles / 272 g</p>","image":"/assets/images/bouteilles/les-couarres.jpg","underground":[{"title":"SOUS-SOL DE LA<br/>PREMIÈRE PARCELLE","image":"/assets/images/parcelles/couarres-chateau.png","levels":[{"name":"Sables et Argiles","caption":"-40cm"},{"name":"Tuffeau","caption":"-80cm"}]},{"title":"SOUS-SOL DE LA<br/>SECONDE PARCELLE","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"Sables calcaires<br/>et Cuisien","caption":"-40cm"},{"name":"Argile","caption":"-120cm"}]}]},"wine":{"name":"Les Couarres","specifications":"<p>Sa Couleur / Clair, limpide souvent couleur «or».</p>","packshot":"/assets/images/wines/packshot/les-couarres.png","content":[{"type":"block-column","text":"<p>Ce sont certainement les vins qui demandent le plus de rigueur lors du suivi de l’élevage. La texture fine et collante de l’argile exige d‘éviter au maximum les prises rapides d’oxygène lors de l’élevage des vins. Le vin des Couarres s’identifie par un «collant» sphérique en bouche, puis une fraicheur à l’acidité moyenne sur toute la longueur de la fin de bouche. Les différences entre la partie argileuse et celle sur le Tuffeau résident principalement dans l’atmosphère pierreuse pour l’une (Tuffeau), et plus fraiche et tendue pour l’argile.</p>"},{"type":"block-highlight","text":"Les vins de la parcelle «Les Couarres» s’épanouissent avec<br/>le temps."},{"type":"block-image","url":"/assets/images/cuve/les-couarres.jpg"},{"type":"block-paragraph","text":"<h3>L’ÉLEVAGE</h3><p>Les vins des Couarres sont certainement les plus paresseux. Ils aiment être accompagnés simplement et protégés pour éviter l’aventure houleuse d’une oxydation rapide. Il me semble nécessaire de protéger ces Champagnes de l’oxygène dès le pressurage, en choisissant des fûts de deux ou trois vins en milieu «humide» (cave). J’essaie de limiter la part des anges (évaporation) pour limiter l’affaiblissement de ce vin par contact trop important à l’air. Des ouillages réguliers sont réalisés sur les fûts qui accueillent ces vins.</p>"}],"fichetechnique":"/assets/pdf/fr/Les Couarres.pdf"}}')
    },
    dbc7: function(e, t, i) {
        e.exports = i.p + "img/menuButton.5171c5f0.png"
    },
    dc43: function(e, t, i) {
        e.exports = i.p + "63f6cc074e19044a2045a6a581834c5a.glb"
    },
    dd33: function(e, t, i) {},
    de3a: function(e, t, i) {
        e.exports = i.p + "media/CHARTOGNE-SD-Intro-Scenario2.c41e2788.mp3"
    },
    de5b: function(e) {
        e.exports = JSON.parse('{"slug":"les-brets","name":"LES BRETS","lieudit":"MERFY","ground":{"specifications":"<p>Soil colour / Golden Orange, \\"Yellowish\\" Brown</p><p>Moisture / The hillside allows excess water to drain off. Higher moisture than the average of the village plots.<br/>Upper Ypresian sands, Clayey sands on balanced soil with 30% sand, 30% clay, 40% silt.</p><p>Exposition / East - North East</p><p>Clay characteristics / Vermiculites / 350 gr (m2/gr)</p>","description":"<p>These vines retain enough moisture to excite the curiosity of the roots at all soil depths.</p><p>This soil, quite unusual for Merfy, with its eastern orientation, obliges a labour adapted to the soil, as opposed to the vines in the south of the village. While its neighbours mineralise nutrients quickly and sometimes excessively, Les Brets takes its nourishment with a regularity that surprises the wine grower.<br/>The grasses never grow too quickly, nor too slowly, affording a consistent peace of mind.<br/>However, we must be vigilant when passing by to work the soil. These soils do not tolerate our wine grower\'s tools (hoes, ploughs, etc.) when the dry weather sets in; they pack more quickly and become harder than in the neighbouring plots. All the soil work in this plot is done with horses, in order to be present only when the soil allows it. We avoid the use of machines that dig in with their tools, forcing nature to open itself up – something it would not allow men or animals to do.</p><p>The slope may be treacherous. The slight incline, together with the texture similar to clay make this lieu-dit a trap for machines on wheels. The soil can quickly become slippery and difficult to walk across in rainy or wet weather.</p>","details":"<p>Total Area / 97a23ca</p><p>Chartogne-Taillet Area / 97a23ca</p><p>Varieties / 53% Chardonnay / 27% Pinot Noir / 23% Meunier</p><p>Year of planting / 1971 - 1997</p><p>Exposure / East - North East</p><p>Clay characteristics / Vermiculites / 350 gr (m2/gr)</p>","image":"/assets/images/raisins/raisin-blanc01.jpg","underground":[{"title":"SOIL LEVEL","image":"/assets/images/parcelles/les-brets-sol.png","levels":[{"name":"Sands, Clays, Silts","caption":""},{"name":"Campanian Chalk","caption":"-90cm"}]}]},"wine":{"name":"Les Brets","specifications":"<p>Blends / Saint-Anne</p>","packshot":"/assets/images/wines/packshot/saint-anne.png","content":[{"type":"block-highlight","text":"Wines from Les Brets cause salivation around the tongue, with a dense consistency, becoming creamy upon maturation."},{"type":"block-paragraph","text":"<h3>AGING</h3><p>For many years, the wines from Les Brets were aged in stainless steel tanks, focusing the taste profile and guaranteeing the conservation of the wines\' various acids. Since 2016, these wines have been placed in casks, just like those of the neighbouring plots. The broad temperament of Les Brets wines can accept tannins from young casks of 228 litres, or larger ones. However, we must obtain a good result. Every plot with a well-balanced acidity profile does not necessarily accept organoleptic deviations.<br/>I favour regular topping-up and a slow but progressive mineralisation.</p>"},{"type":"block-image","url":"/assets/images/cuve/les-brets.jpg"}],"fichetechnique":"/assets/pdf/en/Les Brets ENG.pdf"}}')
    },
    deda: function(e) {
        e.exports = JSON.parse('{"scroll":"défiler","map":"地図","explore":"explorer","villages":{"avize":[["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","côte des blancs"]],"merfy":[[],[],[],[],[],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","Sainte Anne","-","畑総面積 / 18A72CA","栽培品種 / ピノ・ノワール 100%","植樹された年 / 1989年"],[],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","Sainte Anne","-","畑総面積 / 33A75CA","植樹された年 / 1972年、1991年"],[],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","Sainte Anne","-","畑総面積 / 19A4CA","栽培品種 / ムニエ  100%","植樹された年 / 1970年、1992年"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","Sainte Anne","-","畑総面積 / 43A30CA","栽培品種 / ムニエ 100%","植樹された年 / 1980年、1984年"],["Lこの区画のワインは"," キュヴェのブレンドに用いられます","Sainte Anne","-","畑総面積 / 60A60CA","栽培品種 / ムニエ 100%","植樹された年 / 1969年"],[],[]]}}')
    },
    e3bb: function(e, t, i) {
        e.exports = i.p + "img/title.1ccd552d.png"
    },
    e7c0: function(e) {
        e.exports = JSON.parse('{"history":{"header":"歴史","headline":"私たちの遺産","component0":{"title":"ベネディクト派の<br/>修道士たちの遺産","description":"<p>7世紀に メルフィ村に土着し私たちの村のヴィニョロン達は サン・ティエリー修道院のベネディクト派の修道士達の遺産を受け継いでいます。メルフィのブドウ農家の人々は 世代を超えて修道院と共に 私たちの丘陵地のブドウ畑の景観を 地理的条件や表土、土壌の違いに目を向けながら 区画ごとに細かく刻んでいきました。その後、それぞれの土地に名付けられた名前は≪リューディ≫として、村の地図に刻まれることになります。そして各区画の土壌は そこに植樹されたブドウの根や樹を今も育んでいます。</p>"},"component1":{"title":"家族の遺産","description":"<p>私たちのブドウ栽培農家としての家系は 1490年のニコラ・タイエ そして1540年のフィアクル・タイエに遡ることができます。1700年初頭には 学識豊かなブドウ栽培者、フィアクル2世・タイエが ブドウ栽培者の生活と彼が生きた時代に起こった数々の村の出来事を記した回想録を残しています。シャルトーニュ・タイエ家は この先祖のDNAを受け継ぎ、何代にも渡って覚書を書き記してきました。</p>"},"component2":{"title":"ブドウ栽培家達の遺産","highlight":"<p>1つ1つの仕事は植物の、ブドウの樹の、そして私たちを取り囲む環境によって左右されます。</p>","description":"<p>私たちの仕事は 私たちの眼差しとセンスによって導かれています。1つ1つの仕事は植物の、ブドウの樹の、そして私たちを取り囲む環境によって左右されます。私たちは昔から受け継がれてきたブドウ栽培者のノウハウに再び目を向け、人間たちが化学薬品や機械を用いなかった、そして自然に害を与えずに栽培を行っていた時代のやり方を見直すことにしたのです。畑の仕事は手作業で、自然と共に馬の助けを借りながら行っています。</p>"},"component3":{"headline":"匠の技","title":"私たちのノウハウ、<br/>そして情熱","description":"<p>ワインを味わうこと、それはミネラル感、口当たり、余韻の長さ、風味、何処でワインが誕生したのか、ブドウが力強く、そしてその自然の知恵を駆使して根を張るその表土、またはその下層土の構成はどうなっているのかを理解することです。私たちはこれらの知恵を次の時代へ、ボトルからボトルへと伝えていく伝道者です。そのために　多種多様なテロワールの持ち味を損なわないように、そして裏切らないように細心の注意を払っています。私たちの先祖は書物を残すことによって私たちを導いてくれていました：ブドウの植え方、剪定の方法、各々のテロワールにおけるブドウの生育のサイクルについて…</p>","highlight":"<p>ワインを味わうこと、それは遠くにいながらその土地の味わいにどっぷりと浸ることです。</p>","description2":"<p>今日私たちの活動は　脈々と受け継がれてきたノウハウによって導かれています。私たちはかつてのベネディクト派の修道士たちが行ってきたワイン醸造の方法を　新たに誕生した発泡酒のシャンパーニュ造りに応用しているのです。<br/>それはつまり　土地の味わいを忠実に守るワインが、発泡酒になるということ。<br/>私たちは如何なる認証マークも必要としていません。ただ単にボトルの中に私たちのテロワールの味、風味を体現していくだけです。</p>"},"footer":{"title":"テロワール<br/>＆ワイン"}},"contact":{"header":"お問合せ","firstname":"ALEXANDRE","lastname":"CHARTOGNE","address":"37-39 GRANDE RUE","postcode":"51220","city":"MERFY","phone":"+33326031017","phonelabel":"(+33)326031017","email":"Chartogne.taillet@wanadoo.fr","facebook":"FACEBOOK","instagram":"INSTAGRAM","distributors":"正規輸入代理店・エージェント","france":"FRANCE","export":"輸出先","distrutorsFranceLabels":["名前","地方","都道府県"],"distrutorsFrance":[{"name":"4 ares 28 (Pierre Le Lay)","region":"Ouest Loire","departments":"76,27,28,61,14,50, 72, 53, 35, 22, 29, 56, 44, 49, 37, 41, 45, 85, 79, 86, 36, 17, 16, 87, 24, 40, 64, 65, 32, 82"},{"name":"Dégustation Sélection","region":"Est","departments":"57,67,68, 39, 01, 69, 38"},{"name":"Les Invincibles (Alexandre Imbert)","region":"Sud","departments":"31, 11, 66, 34, 30"},{"name":"Geoffroy Gamba Vins Spiritueux","region":"Sud Est","departments":"13, 83, 06 et Monaco"},{"name":"Vinhop","region":"Paris","departments":"78, 91, 77, 95, 75, 92, 93 et 94"},{"name":"Mouchonnat","region":"Bourgogne","departments":"21"},{"name":"Clos Azelto","region":"Corse","departments":"2A, 2B"}],"exports":[{"country":"ドイツ","companies":[{"name":"Life in Bubble"}]},{"country":"イギリス","companies":[{"name":"Vine Trail","url":"http://www.vinetrail.co.uk/"}]},{"country":"オーストリア","companies":[{"name":"Wagner","url":"https://www.wagners-weinshop.com/"}]},{"country":"オーストラリア","companies":[{"name":"Bibendum - Imbibo"}]},{"country":"ベルギー","companies":[{"name":"Vinilus et Lazarus","url":"http://www.vinikusenlazarus.be/"}]},{"country":"ブラジル","companies":[{"name":"Animavinum"}]},{"country":"カンボジア","companies":[{"name":"Wine direct"}]},{"country":"カナダ","companies":[{"name":"Oenopole","url":"https://oenopole.ca/"},{"name":"Pion"}]},{"country":"コルシカ","companies":[{"name":"Clos Alzeto","url":"https://www.closdalzeto.com/"}]},{"country":"韓国","companies":[{"name":"Vinocus","url":"https://www.facebook.com/vinocus.wine"}]},{"country":"中国","companies":[{"name":"The Fine Wine Experience"}]},{"country":"デンマーク","companies":[{"name":"Laudrup","url":"https://www.laudrup.dk/da/laudrup-vin-gastronomi-wines-and-delicacies-unlimited/"}]},{"country":"スペイン","companies":[{"name":"Champeron Paris","url":"http://champeronparis.com/portada"}]},{"country":"エストニア","companies":[{"name":"Brillare","url":"http://brillare.eu/en/"}]},{"country":"フィンランド","companies":[{"name":"Vin Direkt","url":"https://www.vindirekt.fi/"}]},{"country":"香港","companies":[{"name":"The Fine Wine Experience","url":"https://www.finewineexperience.com/"}]},{"country":"イタリア","companies":[{"name":"MOON Import","url":"http://www.moonimport.it/"}]},{"country":"日本","companies":[{"name":"Firadis","url":"http://www.firadis.co.jp/"}]},{"country":"レバノン","companies":[{"name":"Terroir Y Selection"}]},{"country":"リヒテンシュタイン","companies":[{"name":"Ritter Weine"}]},{"country":"リュクセンブルグ","companies":[{"name":"Craft & Company","url":"https://www.craftetcompagnie.com/"}]},{"country":"ノルウェー","companies":[{"name":"Moestue Grape Selections"}]},{"country":"ニュージーランド","companies":[{"name":"The Village Winery"}]},{"country":"オランダ","companies":[{"name":"Janselijn Wijnen"}]},{"country":"チェコ","companies":[{"name":"Le Clos"},{"name":"Vino Vino Vino","url":"http://vino-vino-vino.cz/"}]},{"country":"ロシア","companies":[{"name":"Simple","url":"https://simplewine.ru/"}]},{"country":"スウェーデン","companies":[{"name":"Franska Vinlistan","url":"http://franskavinlistan.com/"}]},{"country":"スイス","companies":[{"name":"Cultivino","url":"https://www.cultivino.ch/"},{"name":"Le Passeur de Vin"}]},{"country":"シンガポール","companies":[{"name":"Artisan Cellar","url":"https://www.artisan-cellars.com/welcome.html"}]},{"country":"タイ","companies":[{"name":"Reserve Wine"}]},{"country":"台湾","companies":[{"name":"Mouchonnat","url":"http://www.mouchonnat.com/"}]},{"country":"アメリカ合衆国","companies":[{"name":"Skurnik Wines","url":"https://www.skurnik.com/"}]}]},"common":{"discover":"発見","fichetechnique":"テクニカルデータ","encepagement":"ブドウ品種比","plantation":"ブドウ栽培","exposition":"ブドウ畑の向き","alcoholnotice":"未成年者の飲酒、飲酒運転は　法律で禁止されています。妊娠中、授乳中の飲酒は控えましょう。お酒は楽しく適量で。","parcelleground":"<p>区画の土壌</p>","comeback":"戻る","winespecificites":"<p>ワインの特徴</p>","name":"キュヴェ名","pageNotFound":"ページが見つかりません","wines":"ワイン","plots":"区画","theWines":"ワイン","history":"歴史","contact":"お問合せ","thePlots":"区画の概要","validationAge":"私の国でアルコール飲酒が認められた年齢に達していることに同意します。","enter":"入る","close":"閉じる","menu":"メニュー"}}')
    },
    eb83: function(e, t, i) {
        e.exports = i.p + "img/subTitle.41004816.png"
    },
    ebce: function(e, t, i) {
        e.exports = i.p + "7c53543979b823cd6a7ac4af1851d09f.glb"
    },
    eca6: function(e, t, i) {
        "use strict";
        var a = i("c9f5")
          , s = i.n(a);
        s.a
    },
    ed9f: function(e, t, i) {
        e.exports = i.p + "3557fda5b6734274878118f5629fb9f6.glb"
    },
    ee33: function(e, t, i) {
        "use strict";
        var a = i("4ba8")
          , s = i.n(a);
        s.a
    },
    ee6c: function(e, t, i) {
        "use strict";
        i.d(t, "a", (function() {
            return n
        }
        ));
        i("4160"),
        i("b64b"),
        i("ac1f"),
        i("5319"),
        i("1276"),
        i("159b");
        var a = i("d4ec")
          , s = i("bee2")
          , n = function() {
            function e() {
                Object(a["a"])(this, e),
                this.callbacks = {},
                this.callbacks.base = {}
            }
            return Object(s["a"])(e, [{
                key: "on",
                value: function(e, t) {
                    var i = this;
                    if ("undefined" === typeof e || "" === e)
                        return console.warn("wrong names"),
                        !1;
                    if ("undefined" === typeof t)
                        return console.warn("wrong callback"),
                        !1;
                    var a = this.resolveNames(e);
                    return a.forEach((function(e) {
                        var a = i.resolveName(e);
                        i.callbacks[a.namespace]instanceof Object || (i.callbacks[a.namespace] = {}),
                        i.callbacks[a.namespace][a.value]instanceof Array || (i.callbacks[a.namespace][a.value] = []),
                        i.callbacks[a.namespace][a.value].push(t)
                    }
                    )),
                    this
                }
            }, {
                key: "off",
                value: function(e) {
                    var t = this;
                    if ("undefined" === typeof e || "" === e)
                        return console.warn("wrong name"),
                        !1;
                    var i = this.resolveNames(e);
                    return i.forEach((function(e) {
                        var i = t.resolveName(e);
                        if ("base" !== i.namespace && "" === i.value)
                            delete t.callbacks[i.namespace];
                        else if ("base" === i.namespace)
                            for (var a in t.callbacks)
                                t.callbacks[a]instanceof Object && t.callbacks[a][i.value]instanceof Array && (delete t.callbacks[a][i.value],
                                0 === Object.keys(t.callbacks[a]).length && delete t.callbacks[a]);
                        else
                            t.callbacks[i.namespace]instanceof Object && t.callbacks[i.namespace][i.value]instanceof Array && (delete t.callbacks[i.namespace][i.value],
                            0 === Object.keys(t.callbacks[i.namespace]).length && delete t.callbacks[i.namespace])
                    }
                    )),
                    this
                }
            }, {
                key: "trigger",
                value: function(e, t) {
                    if ("undefined" === typeof e || "" === e)
                        return console.warn("wrong name"),
                        !1;
                    var i = this
                      , a = null
                      , s = null
                      , n = t instanceof Array ? t : []
                      , r = this.resolveNames(e);
                    if (r = this.resolveName(r[0]),
                    "base" === r.namespace)
                        for (var o in i.callbacks)
                            i.callbacks[o]instanceof Object && i.callbacks[o][r.value]instanceof Array && i.callbacks[o][r.value].forEach((function(e) {
                                s = e.apply(i, n),
                                "undefined" === typeof a && (a = s)
                            }
                            ));
                    else if (this.callbacks[r.namespace]instanceof Object) {
                        if ("" === r.value)
                            return console.warn("wrong name"),
                            this;
                        i.callbacks[r.namespace][r.value].forEach((function(e) {
                            s = e.apply(i, n),
                            "undefined" === typeof a && (a = s)
                        }
                        ))
                    }
                    return a
                }
            }, {
                key: "resolveNames",
                value: function(e) {
                    var t = e;
                    return t = t.replace(/[^a-zA-Z0-9 ,/.]/g, ""),
                    t = t.replace(/[,/]+/g, " "),
                    t = t.split(" "),
                    t
                }
            }, {
                key: "resolveName",
                value: function(e) {
                    var t = {}
                      , i = e.split(".");
                    return t.original = e,
                    t.value = i[0],
                    t.namespace = "base",
                    i.length > 1 && "" !== i[1] && (t.namespace = i[1]),
                    t
                }
            }]),
            e
        }()
    },
    eee1: function(e, t, i) {
        e.exports = i.p + "img/blazonData.c92a7f54.png"
    },
    f1b4: function(e, t, i) {
        "use strict";
        var a = i("d9c7")
          , s = i.n(a);
        s.a
    },
    f336: function(e, t, i) {
        e.exports = i.p + "img/title.7f065e1c.png"
    },
    f3da: function(e, t, i) {
        e.exports = i.p + "img/title.78e8465c.png"
    },
    f65b: function(e, t, i) {
        e.exports = i.p + "img/terrainData1.f3359479.jpg"
    },
    f9c5: function(e, t, i) {
        e.exports = i.p + "img/title.01193d59.png"
    },
    fa52: function(e, t, i) {
        e.exports = i.p + "img/terrainData2.6ab056f5.png"
    }
});
